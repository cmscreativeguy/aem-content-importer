<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd"[]>
<concept id="concept_BBFAECF18C454E0891A0A461CAA5497D">
  <title>detectRIA</title>
  <shortdesc>A plug-in that determines whether users on your site have Adobe
	 Flash or Microsoft Silverlight installed in their browsers. If so, the plug-in
	 sets the version numbers in Analytics variables. 
  </shortdesc>
  <prolog>
    <metadata>
      <othermeta name="solution" content="Analytics" />
      <othermeta name="topic" content="Developer and implementation" />
      <othermeta name="subtopic" content="Plug-ins" />
    </metadata>
  </prolog>
  <conbody>
    <p>This plug-in is useful to determine the versions of these applications
		that should be used in developing rich media content on your site. For example,
		if 46% of site users only have Flash 9 installed (when the current version is
		Flash 10), you may consider developing for Flash 9 rather than requiring Flash
		10 to use your applications.
	 </p>
    <note>The following instructions require you to alter the 
		AppMeasurement for JavaScript code on your site. This can
		affect data collection on your site, and should only be done by a developer
		with experience using and implementing 
		<keyword>Analytics.</keyword></note>
    <section id="section_92E94A96A4764113B5588F1B83E3DE2C">
      <title>Plug-in Code and Implementation</title>
      <p>
        <b>CONFIG SECTION</b>: No changes required for this section. 
		</p>
      <p>
        <b>Plug-in Configuration</b>
      </p>
      <p>Place the following code within the 
		  <varname>s_doPlugins()</varname> function, which is located in the area
		  of the 
		  <varname>s_code.js</varname> file labeled 
		  <i>Plugin Config</i>. Choose one Custom Traffic (s.prop) variable or
		  one Custom Conversion (s.eVar) variable for use in capturing capturing RIA
		  data. These should be variables that have been enabled using the Admin Console,
		  but which are not currently in use for any other purpose. The following is
		  given as an example, and should be updated appropriately based on your needs. 
		</p>
      <p>
        <codeph>s.detectRIA('s_ria','prop1','prop2','10','2','');</codeph>
      </p>
      <p>
        <varname>s.detectRIA</varname> has six arguments: 
		</p>
      <ol id="ol_2B8B7A54792B49218485493AB7CDF265">
        <li id="li_12A61EE402DC4478B224CD90DCD4EDC7">Name of the cookie that
			 stores values for this plug-in (<varname>s_ria</varname> above). 
		  </li>
        <li id="li_D60A766A60E84B4DB5B700249ACF7324">Variable for use in
			 capturing Flash version information (<varname>prop1</varname> above). 
		  </li>
        <li id="li_AFE58638DB3045EB868CD38C995BEB30">Variable for use in
			 capturing Silverlight version information (<varname>prop2</varname> above). 
		  </li>
        <li id="li_6415F002CC2643AB9D4A614933DDFC77">Max Flash version to
			 detect (default, if left blank, is 10; applies to IE only). 
		  </li>
        <li id="li_F488231E7687492BA8DBE5E5F95DED2D">Max Silverlight version to
			 detect (default, if left blank, is 2; applies to IE only). 
		  </li>
        <li id="li_C6B26FC45BEE4098B01F708D27E6380B">Flag for detection once
			 per visit. If left blank, the plug-in captures Flash version on every page
			 view. If set to any value, detection occurs only on the first page view of the
			 visit. 
		  </li>
      </ol>
      <p>Other Examples
		</p>
      <codeblock outputclass="syntax javascript">/* Does not set version max and uses eVars instead of props */
s.detectRIA('s_ria','eVar6','eVar7','','','');</codeblock>
      <codeblock outputclass="syntax javascript">/* Sets flag to capture version numbers once per visit*/
s.detectRIA('s_ria','prop1','prop2','','','1');</codeblock>
      <p>
        <b>PLUGINS SECTION</b>: Add the following code to the area of the 
		  <filepath>s_code.js</filepath> file labeled PLUGINS SECTION. Do not
		  make any changes to this portion of the plug-in code. 
		</p>
      <codeblock outputclass="syntax javascript">/*
 * Plugin: detectRIA v0.1 - detect and set Flash, Silverlight versions
 */
s.detectRIA=new Function("cn", "fp", "sp", "mfv", "msv", "sf", ""
+"cn=cn?cn:'s_ria';msv=msv?msv:2;mfv=mfv?mfv:10;var s=this,sv='',fv=-"
+"1,dwi=0,fr='',sr='',w,mt=s.n.mimeTypes,uk=s.c_r(cn),k=s.c_w('s_cc',"
+"'true',0)?'Y':'N';fk=uk.substring(0,uk.indexOf('|'));sk=uk.substrin"
+"g(uk.indexOf('|')+1,uk.length);if(k=='Y'&amp;&amp;s.p_fo('detectRIA')){if(u"
+"k&amp;&amp;!sf){if(fp){s[fp]=fk;}if(sp){s[sp]=sk;}return false;}if(!fk&amp;&amp;fp)"
+"{if(s.pl&amp;&amp;s.pl.length){if(s.pl['Shockwave Flash 2.0'])fv=2;x=s.pl['"
+"Shockwave Flash'];if(x){fv=0;z=x.description;if(z)fv=z.substring(16"
+",z.indexOf('.'));}}else if(navigator.plugins&amp;&amp;navigator.plugins.len"
+"gth){x=navigator.plugins['Shockwave Flash'];if(x){fv=0;z=x.descript"
+"ion;if(z)fv=z.substring(16,z.indexOf('.'));}}else if(mt&amp;&amp;mt.length)"
+"{x=mt['application/x-shockwave-flash'];if(x&amp;&amp;x.enabledPlugin)fv=0;}"
+"if(fv&lt;=0)dwi=1;w=s.u.indexOf('Win')!=-1?1:0;if(dwi&amp;&amp;s.isie&amp;&amp;w&amp;&amp;exec"
+"Script){result=false;for(var i=mfv;i&gt;=3&amp;&amp;result!=true;i--){execScri"
+"pt('on error resume next: result = IsObject(CreateObject(\"Shockwav"
+"eFlash.ShockwaveFlash.'+i+'\"))','VBScript');fv=i;}}fr=fv==-1?'flas"
+"h not detected':fv==0?'flash enabled (no version)':'flash '+fv;}if("
+"!sk&amp;&amp;sp&amp;&amp;s.apv&gt;=4.1){var tc='try{x=new ActiveXObject(\"AgControl.A'"
+"+'gControl\");for(var i=msv;i&gt;0;i--){for(var j=9;j&gt;=0;j--){if(x.is'"
+"+'VersionSupported(i+\".\"+j)){sv=i+\".\"+j;break;}}if(sv){break;}'"
+"+'}}catch(e){try{x=navigator.plugins[\"Silverlight Plug-In\"];sv=x'"
+"+'.description.substring(0,x.description.indexOf(\".\")+2);}catch('"
+"+'e){}}';eval(tc);sr=sv==''?'silverlight not detected':'silverlight"
+" '+sv;}if((fr&amp;&amp;fp)||(sr&amp;&amp;sp)){s.c_w(cn,fr+'|'+sr,0);if(fr)s[fp]=fr;"
+"if(sr)s[sp]=sr;}}");
s.p_fo=new Function("n",""
+"var s=this;if(!s.__fo){s.__fo=new Object;}if(!s.__fo[n]){s.__fo[n]="
+"new Object;return 1;}else {return 0;}");</codeblock>
      <p>Always test plug-in installations extensively to ensure that data
		  collection is as expected before deploying in a production environment. 
		</p>
    </section>
  </conbody>
</concept>