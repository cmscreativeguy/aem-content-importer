<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_62921E7EDF31400C9D958B863CDA3E69"> 
  <title>getVisitNum</title> 
  <shortdesc>The getVisitNum plug-in determines how many visits a user has made
	 to your site and captures this number in a 
	 <keyword>Analytics</keyword> variable. 
  </shortdesc> 
  <prolog> 
	 <metadata> 
		<othermeta name="solution" content="Analytics"/> 
		<othermeta name="topic" content="Developer and implementation"/> 
		<othermeta name="subtopic" content="Plug-ins"/> </metadata>
  </prolog> 
  <conbody> 
	 <section id="section_92E94A96A4764113B5588F1B83E3DE2C"> 
		<title>Plug-in Code and Implementation</title> 
		<p> 
		  <b>CONFIG SECTION</b>: No changes required for this section. 
		</p> 
		<p> 
		  <b>Plug-in Configuration</b> 
		</p> 
		<p>Place the following code within the 
		  <varname>s_doPlugins()</varname> function, which is located in the area
		  of the 
		  <varname>s_code.js</varname> file labeled 
		  <i>Plugin Config</i>. Choose one Custom Traffic (s.prop) variable or
		  one Custom Conversion (s.eVar) variable for use in capturing visit number data.
		  This should be a variable that has been enabled using the Admin Console, but
		  which is not currently in use for another purpose. You can use the following
		  example and update it based on your requirements. 
		</p> 
		<p> 
		  <codeph>s.prop1=s.getVisitNum();</codeph> 
		</p>
		<note>The following instructions require you to alter the data collection
		  code on your site. This can affect data collection on your site, and should
		  only be done by a developer with experience using and implementing 
		  <keyword>Analytics</keyword>. 
		</note> 
		<p> 
		  <b>PLUGINS SECTION</b>: Add the following code to the area of the 
		  <filepath>s_code.js</filepath> file labeled PLUGINS SECTION. Do not
		  make any changes to this portion of the plug-in code. 
		</p> 
		<codeblock outputclass="syntax javascript">/*                                                                 
* Plugin: getVisitNum - version 3.0
*/
s.getVisitNum=new Function("tp","c","c2",""
+"var s=this,e=new Date,cval,cvisit,ct=e.getTime(),d;if(!tp){tp='m';}"
+"if(tp=='m'||tp=='w'||tp=='d'){eo=s.endof(tp),y=eo.getTime();e.setTi"
+"me(y);}else {d=tp*86400000;e.setTime(ct+d);}if(!c){c='s_vnum';}if(!"
+"c2){c2='s_invisit';}cval=s.c_r(c);if(cval){var i=cval.indexOf('&amp;vn="
+"'),str=cval.substring(i+4,cval.length),k;}cvisit=s.c_r(c2);if(cvisi"
+"t){if(str){e.setTime(ct+1800000);s.c_w(c2,'true',e);return str;}els"
+"e {return 'unknown visit number';}}else {if(str){str++;k=cval.substri"
+"ng(0,i);e.setTime(k);s.c_w(c,k+'&amp;vn='+str,e);e.setTime(ct+1800000);"
+"s.c_w(c2,'true',e);return str;}else {s.c_w(c,e.getTime()+'&amp;vn=1',e)"
+";e.setTime(ct+1800000);s.c_w(c2,'true',e);return 1;}}");
s.dimo=new Function("m","y",""
+"var d=new Date(y,m+1,0);return d.getDate();");
s.endof=new Function("x",""
+"var t=new Date;t.setHours(0);t.setMinutes(0);t.setSeconds(0);if(x=="
+"'m'){d=s.dimo(t.getMonth(),t.getFullYear())-t.getDate()+1;}else if("
+"x=='w'){d=7-t.getDay();}else {d=1;}t.setDate(t.getDate()+d);return "
+"t;");</codeblock> 
		<p><b>Parameters</b> 
		</p> 
		<p> 
		<ul id="ul_EC6F1772A0A644D193B44F1E4E7E2E66"> 
		  <li id="li_D463BCAAF39F461C8433AA019FAE463D">tp = (string, optional)
			 Tracking period. use "d" for day, "w" for week, "m" for month, or a number for
			 a custom number of days. 
			 <p> 
			 <ul id="ul_7473E556BDB7476DB3D051BAEEF5E08C"> 
				<li id="li_14EF3D7B98C94BEB8A6B683B5AD25F81">If day, week, or month
				  is selected then the visit number will reset at the end of the day/week/month. 
				</li> 
				<li id="li_E34797193EBC42F389E4D9A483534EF1">If a custom number of
				  days is selected then the visit number will reset after that number of days. 
				</li> 
				<li id="li_FE295A1B77114011875ED6E4E9656F6E">If no value is
				  provided then "m" will be used. 
				</li> 
			 </ul> 
			 </p> 
		  </li> 
		  <li id="li_7FA0DC5A78EB46E9BE3434D35306D7B7">c = (string, optional)
			 Specify the persistent cookie name. Default is 's_vnum'. 
		  </li> 
		  <li id="li_81F37E88FF4D45C492FC9E56680F946C">c2 = (string, optional)
			 Specify the session cookie name. Default is 's_invisit' 
		  </li> 
		</ul> 
		</p> 
		<p><b>Returns</b> 
		</p> 
		<p> 
		<ul id="ul_B643A75F9F7D40699A306EBE3E67DFE3"> 
		  <li id="li_A006286DAD184E7AA0459D57103DA430">returns the visit number
			 (1,2,3,etc) of the visit. This number is incremented only on the first page of
			 each visit. 
		  </li> 
		  <li id="li_E922A6EDE3B44481B929EC2B958F73A1">returns "unknown visit
			 number" if the plug-in is unable to identify the visit number (cookies are
			 blocked). 
		  </li> 
		</ul> 
		</p> 
		<p><b>Examples</b> 
		</p> 
		<codeblock outputclass="syntax javascript">s.prop1=s.getVisitNum(365); //custom length, 365 days. Default cookie names
s.prop1=s.getVisitNum('w'); //resets weekly
s.prop1=s.getVisitNum('m','s_vmonthnum','s_monthinvisit'); //resets montly, custom cookie names
s.prop1=s.getVisitNum('d'); //resets daily</codeblock> 
		<p> 
		  <b>Notes</b> 
		<ul id="ul_851CDA289DAE43A38AA87D2D53020408"> 
		  <li id="li_FD51A3C0A5D741BDBD73ACE6D0C3D670">Always test plug-in
			 installations extensively to ensure that data collection is as expected before
			 deploying in a production environment. 
		  </li> 
		  <li id="li_655E612299EE47589317C6177D0E4388">This plug-in relies on the
			 ability to set cookies in the user's web browser. If the user does not accept
			 cookies, all visits will appear to be first visits. 
		  </li> 
		</ul> 
		</p> 
	 </section> 
  </conbody> 
</concept> 
