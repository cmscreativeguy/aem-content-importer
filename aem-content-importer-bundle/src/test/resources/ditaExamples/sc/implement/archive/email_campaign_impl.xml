<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd"[]>
<concept id="concept_BBDE443CF1734E288095573771DD8EFE">
  <title>Implementing Email Campaign Tracking</title>
  <shortdesc>There are several steps to follow in order to successfully display
	 email campaign analysis data in 
	 reports. 
  </shortdesc>
  <prolog>
    <metadata>
      <othermeta name="solution" content="Analytics" />
      <othermeta name="topic" content="Developer and implementation" />
    </metadata>
  </prolog>
  <conbody>
    <p>The steps are listed and described as follows: 
	 </p>
    <ol id="ol_3974FE69E6254E12B2BBE395588F2A2A">
      <li id="li_C7D400B1BFB24BA1B701ABC1A0C78CC9">Create unique tracking
		  codes. 
		  <p>Though each tracking code must be unique, it does not need to be
			 more than a number. The list below shows examples of unique tracking codes. 
		  </p><ul id="ul_B33CC2C9BE984C8D9D11448846BD28CA"><li id="li_63880D178BEE4B2193F2631CE8DBE219">Email Opens: 112233A 
			 </li><li id="li_5B76B8873C6C448C90609619BF826BB1">Promo Link 1: 112233B 
			 </li><li id="li_E09B11DFB124417FBEE3D78BB1D23B80">Promo Link 2: 112233C 
			 </li></ul></li>
      <li id="li_AC5A2E7461AE4A1E86BF3F9141F9D78F"> Add query string parameters
		  to HTML email links. 
		  <p>To track a user click-through and subsequent success events, a query
			 string parameter needs to be added to each link within the HTML email. You may
			 choose to track each link separately or track all links together. Each link can
			 have a unique tracking code or all links can have the same tracking code.
			 Consider the following hypothetical link within the email to a website. 
		  </p><codeblock outputclass="syntax javascript"> &lt;a href="http://www.mycompany.com/index.asp"&gt;Visit
			 our home page&lt;/a&gt;</codeblock><p>The following query string parameters should be added to the link
			 above: 
		  </p><codeblock outputclass="syntax javascript">&lt;a href= "http://www.mycompany.com/index.asp?sc_cid=112233B&amp;sc_v1=SUBCATEGORY"&gt;Visit our home page&lt;/a&gt;</codeblock></li>
      <li id="li_3A0C124AA7ED4DB295E3F33F0BC3E4A3"> Update the JavaScript
		  library. 
		  <p>Altering 
			 AppMeasurement for JavaScript code, 
			 <filepath>s_code.js</filepath>, allows 
			 you to capture how many users (and which
			 users) clicked-through from the email and participated in subsequent success
			 events. There are two steps to updating the JavaScript library. 
		  </p><p><ol id="ol_28DF2E642374412EAB3B61D4DB72B825"><li id="li_675E6DC8842C417EB1C76481C8F4002E"> Customize 
				<filepath>s_code.js</filepath> by calling 
				<wintitle>getQueryParam</wintitle>. 
				<p> The 
				  <filepath>s_code.js</filepath> file should be placed in a
				  location on the web server where each web page can access it. The 
				  <varname>doPlugins</varname> function within this file should
				  be altered so that it captures the query string parameters on the email links.
				  For example: 
				</p><codeblock outputclass="syntax javascript">/* Plugin Config */
s.usePlugins=true
function s_doPlugins(s) {
	/* Add calls to plugins here */
	// External Campaigns
s.campaign=s.getQueryParam('sc_cid')
}
s.doPlugins=s_doPlugins
</codeblock>Each query string parameter that needs to be copied into a variable
				should have one 
				<wintitle>getQueryParam</wintitle> call. In the example above, the
				query string parameter 
				<wintitle>sc_cid</wintitle> is copied into 
				<varname>campaign</varname> and 
				<wintitle>sc_v1</wintitle> is copied into 
				<wintitle>eVar1</wintitle>. 
				<p><note> Only the first call to 
					 <wintitle>getQueryParam</wintitle> is required to capture
					 click-throughs. Contact your Adobe 
					 <wintitle>Implementation</wintitle> engineer to implement this
					 function and to ensure that your version of the JavaScript file contains the 
					 <wintitle>getQueryParam</wintitle> plug-in. 
				  </note></p></li><li id="li_5D3AF50F71EF4E9C92669E16C2D62E74"> Make sure the "Code to
				Paste" JavaScript tags are on all landing pages. This code to paste must
				reference the version of 
				<filepath>s_code.js</filepath> altered in Part A. 
			 </li></ol></p><p>The following points are important to remember when updating the
			 JavaScript library: 
		  </p><ul id="ul_22EB75026E784EA6B0486CC462D4CA2A"><li id="li_FBA9398EB7EC40859C0A24C863D40418">The query string
				parameters "<wintitle>sc_cid</wintitle>" and "<wintitle>sc_v1</wintitle>" must
				be visible in the URL on the final landing page, otherwise no click-through
				conversion are recorded. 
			 </li><li id="li_44A803AF081D47FFA553112FE2A03E45">Examples of query string
				parameters are "<wintitle>sc_cid"</wintitle> and "<wintitle>sc_v1</wintitle>."
				Any query string parameter can be used and captured by the 
				<wintitle>getQueryParam</wintitle> plugin. Make sure that the query
				string parameters are used only for campaign tracking. Any time the parameters
				appear in a query string, their values are copied into 
				<varname>campaign</varname> and 
				<wintitle>eVar1</wintitle>. 
			 </li></ul></li>
      <li id="li_011563846D8744E8B3F5740E89D534EA">Use 
		  classifications to classify campaign tracking codes
		  (optional). 
		  <p>The 
			 Classifications can be used to
			 convert tracking codes into user-friendly names. It can also be used to
			 summarize the success of each email campaign. The following steps outline the
			 process required to set up an email campaign. For more information, see the 
			 <xref href="https://marketing.adobe.com/resources/help/en_US/reference/?f=classifications" format="http" scope="external">Classifications Guide</xref>.
			 
		  </p></li>
      <li id="li_427CE0B282594636B8C6A7163C00ABE3">See pathing by email
		  campaign (optional). 
		  <p>Pathing analysis by email campaign can be accomplished similarly to
			 pathing by another campaign. You can use a variable to show pathing by
			 campaign, as explained in the following steps: 
		  </p><ol id="ol_BEA4195C86264F92923E4B79F9742EDE"><li id="li_AE48FD62707940A7B4399B8590679F6F"> Consult Adobe 
				<keyword>ClientCare</keyword> about turning on pathing for a 
				<wintitle>Custom Traffic</wintitle> variable (prop). 
			 </li><li id="li_C3FB4ADD4251460183C40D5690FF46F0">On all pages, copy the
				page name into the designated 
				<wintitle>s.prop</wintitle>. 
			 </li><li id="li_9EF6631C58AB4692BCFEFD7644F9B140">On the email landing
				page, append the name of the 
				<wintitle>email</wintitle> campaign to the prop. The result will
				display as shown below: 
			 </li></ol><codeblock outputclass="syntax javascript">s.prop1="Home Page : Spring Promo Email"</codeblock><p>When pathing is enabled for the 
			 <wintitle>custom traffic</wintitle> variable, you can use 
			 <wintitle>Path</wintitle> reports (<wintitle>Next Page
				Flow</wintitle>, 
			 <wintitle>Fallout</wintitle>, etc.) to see visitor navigation from
			 the landing page. 
		  </p></li>
    </ol>
  </conbody>
</concept>
