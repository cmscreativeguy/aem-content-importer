<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_A17C7B9FB50344A0B69A1784D183FDD8"> 
  <title>Dynamic Variable Examples</title> 
  <shortdesc>Examples of dynamic variables you can use in 
	 <keyword>Analytics</keyword>. 
  </shortdesc> 
  <prolog> 
	 <metadata> 
		<othermeta name="solution" content="Analytics"/> 
		<othermeta name="topic" content="Developer and implementation"/> 
		<othermeta name="subtopic" content="Variables"/> </metadata>
  </prolog> 
  <conbody> 
	 <p>In the Adobe image request that occurs on the page view, if you are
		using dynamic variables to copy the value of 
		<wintitle>Custom Traffic 1</wintitle> to 
		<wintitle>Custom Conversion 1</wintitle>, you would see 
		<codeph>v1=D=c1</codeph>. If eVar1 received a value previously in the
		request, Adobe's servers dynamically copy the value of 
		<wintitle>Custom Traffic 1</wintitle> to 
		<wintitle>Custom Conversion 1</wintitle> during data processing. As a
		result, the value originally passed using 
		<wintitle>Custom Traffic 1</wintitle> also appears in the 
		<wintitle>Custom Conversion 1</wintitle> reports. 
	 </p> 
	 <p>Note that the 
		<codeph>D=[variable]</codeph> value should be in quotes. The 
		<keyword>Analytics</keyword> code treats this as a string. The string
		will be URL encoded when passed into 
		<keyword>Analytics</keyword> (as you will see if viewing the request in
		the 
		<keyword>DigitalPulse Debugger</keyword> or a similar utility). This is
		normal. Adobe's servers recognize the 
		<codeph>D=[variable]</codeph> construction and will copy the appropriate
		value when they encounter this string. 
	 </p> 
	 <p> 
		<note>When using the image request to track links, the type of link
		  (download=lnk_d, exit=lnk_e, or custom link=lnk_o) must be defined, as does the
		  Link URL/Name (pev2). Links require manual implementation by inserting code
		  within the &lt;a href&gt; tag. 
		</note> 
	 </p> 
	 <table id="table_A25D5EA2A8C446F5A55AB32955B9848C">
		<tgroup cols="2"><colspec colnum="1" colname="col1"
		  colwidth="*"/><colspec colnum="2" colname="col2" colwidth="*"/><thead>
			 <row>
				<entry colname="col1">JavaScript Example
				</entry>
				<entry colname="col2">Description
				</entry>
			 </row></thead>
		  <tbody>
			 <row>
				<entry colname="col1">
				  <codeblock outputclass="syntax javascript">s.eVar1="D=pageName"</codeblock>
				</entry>
				<entry colname="col2">
				  <p>Captures the pageName value in eVar1.
				  </p>
				</entry>
			 </row>
			 <row>
				<entry colname="col1">
				  <codeblock outputclass="syntax javascript">s.prop1='D=v2+":"+c2' </codeblock>
				</entry>
				<entry colname="col2">
				  <p>Concatenates eVar2:prop2 into prop1.
				  </p>
				</entry>
			 </row>
			 <row>
				<entry colname="col1">
				  <codeblock outputclass="syntax javascript">s.prop1=s.eVar1="D=g" </codeblock>
				</entry>
				<entry colname="col2">
				  <p>Passes the page URL into both prop1 and eVar1.
				  </p>
				</entry>
			 </row>
			 <row>
				<entry colname="col1">
				  <codeblock outputclass="syntax javascript">s.eVar1="D=v0"</codeblock>
				</entry>
				<entry colname="col2">
				  <p>Captures the campaign in eVar 1.
				  </p>
				</entry>
			 </row>
			 <row>
				<entry colname="col1">
				  <codeblock outputclass="syntax javascript"> s.prop1='D=User-Agent+" - "+Accept-Language'</codeblock> 
				</entry>
				<entry colname="col2">
				  <p>Concatenates the user agent and accept language headers in
					 prop1.
				  </p>
				</entry>
			 </row>
			 <row>
				<entry colname="col1"> 
				  <codeblock outputclass="syntax javascript">s.prop1="D=User-Agent"</codeblock>
				</entry>
				<entry colname="col2">
				  <p>Captures the user agent in prop1,
				  </p>
				</entry>
			 </row>
		  </tbody>
		</tgroup>
	 </table>
	 <table id="table_DD0B7F0648054E01A5F98CDF18D745E4">
		<tgroup cols="2"><colspec colnum="1" colname="col1"
		  colwidth="*"/><colspec colnum="2" colname="col2" colwidth="*"/><thead>
			 <row>
				<entry colname="col1">Image Request Example
				</entry>
				<entry colname="col2">Description
				</entry>
			 </row></thead>
		  <tbody>
			 <row>
				<entry colname="col1">
				  <codeblock outputclass="syntax javascript">/b/ss/rsid/?gn=Home&amp;D=~~&amp;c1=~~v0
/b/ss/rsid/?gn=Home&amp;D=~~&amp;c1=~~campaign
/b/ss/rsid/?gn=Home&amp;c1=D%3dv0%3d is
/b/ss/rsid/?gn=Home&amp;c1=%5b%5bv0%5d%5d%5b
</codeblock>
				</entry>
				<entry colname="col2">
				  <p>Four ways to set prop1 to a campaign
				  </p>
				</entry>
			 </row>
			 <row>
				<entry colname="col1">
				  <codeblock outputclass="syntax javascript">/b/ss/rsid/?gn=Home&amp;D=~~&amp;c2=~~x-up-subno</codeblock>
				</entry>
				<entry colname="col2">
				  <p> Pulls the x-up-subno header into prop2
				  </p> 
				</entry>
			 </row>
			 <row>
				<entry colname="col1">
				  <codeblock outputclass="syntax javascript">&amp;c1=D%3DUser-Agent</codeblock>
				</entry>
				<entry colname="col2">
				  <p> Makes prop1 a dynamic variable filled in with the HTTP header
					 User-Agent
				  </p> 
				</entry>
			 </row>
			 <row>
				<entry colname="col1">
				  <codeblock outputclass="syntax javascript">&amp;c1=D%3D%22test%22</codeblock>
				</entry>
				<entry colname="col2">
				  <p> Makes prop1 a dynamic variable filled in with the
					 string"test". This becomes more useful when used with concatenation which
					 utilizes the + operator.
				  </p> 
				</entry>
			 </row>
			 <row>
				<entry colname="col1">
				  <codeblock outputclass="syntax javascript">&amp;c1=D%3D%22US%3A%20%22%2BUser-Agent</codeblock>
				</entry>
				<entry colname="col2">
				  <p> Makes prop1 a dynamic variable filled in with the
					 User-Agentprefixed by "UA:"
				  </p> 
				</entry>
			 </row>
			 <row>
				<entry colname="col1">
				  <codeblock outputclass="syntax javascript">&amp;vid=D%3DX-TM-ANTID</codeblock>
				</entry>
				<entry colname="col2">
				  <p> This example searches for a uniqueheader, which in this case
					 is X-TM-ANTID.
				  </p>
				</entry>
			 </row>
		  </tbody>
		</tgroup>
	 </table>
  </conbody> 
</concept> 
