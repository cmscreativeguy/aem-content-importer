<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd"[]>
<concept id="concept_0008E55E20E54B99ABA125BF2DA80C6B">
  <title>Legacy Implementation to Tag Mapping</title>
  <shortdesc>This section describes how to migrate code from a legacy
	 implementation to a tag management 2.0 tag. 
  </shortdesc>
  <prolog>
    <metadata>
      <othermeta name="solution" content="Analytics" />
      <othermeta name="topic" content="Developer and implementation" />
      <othermeta name="subtopic" content="Tag management" />
    </metadata>
  </prolog>
  <conbody>
    <table id="table_8D622E995B1947DA8F0C74B8315F4B84">
      <tgroup cols="4">
        <colspec colnum="1" colname="col1" colwidth="1.04*" />
        <colspec colnum="2" colname="col2" colwidth="3.37*" />
        <colspec colnum="3" colname="col3" colwidth="1.00*" />
        <colspec colnum="4" colname="col4" colwidth="2.00*" />
        <thead>
          <row>
            <entry colname="col1">Description 
				</entry>
            <entry colname="col2">Current Code 
				</entry>
            <entry colname="col3">Tag 
				</entry>
            <entry colname="col4">Action 
				</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry colname="col1">External JavaScript Libraries 
				</entry>
            <entry colname="col2">
              <codeblock outputclass="syntax javascript">&lt;script src="http://mysite.com/scripts/utilities.js" type="text/javascript"&gt;&lt;/script&gt;</codeblock>
            </entry>
            <entry colname="col3">Remote Script 
				</entry>
            <entry colname="col4">External JavaScript libraries are placed in a
				  remote Script tag. If other tags depend on this library, select synchronous and
				  place it before any dependent tags. 
				</entry>
          </row>
          <row>
            <entry colname="col1">Target 
				</entry>
            <entry colname="col2">
              <codeblock outputclass="syntax javascript">var mboxServerHost='omniture.tt.omtrdc.net;'
(function mboxOnLoad() {

    //place code here that will 
    //run after Target is loaded

})();</codeblock>
            </entry>
            <entry colname="col3">Target 
				</entry>
            <entry colname="col4">Add a 
				  <uicontrol>Target</uicontrol> tag, provide your client code, and
				  then add code to execute after Target is loaded. 
				</entry>
          </row>
          <row>
            <entry colname="col1">SiteCatalyst Code 
				</entry>
            <entry colname="col2">
              <codeblock outputclass="syntax javascript">var s_account="rs"
var s=s_gi(s_account)
s.debugTracking=false
s.charSet = "UTF-8"
...
s.linkTrackEvents="None"
</codeblock>
            </entry>
            <entry colname="col3">Adobe Analytics &gt; reporting and analytics
				</entry>
            <entry colname="col4">
              <p>Insert an 
					 <uicontrol>Analytics</uicontrol> tag, and replace the
					 generated code in the tag with the code from your current page code and 
					 <filepath>s_code.js</filepath>. 
				  </p>
              <p>The Analytics tag in the tag management UI matches the
					 structure of your existing Analytics page code, and your configuration can
					 be copied straight to the 
					 <uicontrol>Tag Code</uicontrol> section of the Analytics
					 tag. 
				  </p>
            </entry>
          </row>
          <row>
            <entry colname="col1">Plugins 
				</entry>
            <entry colname="col2">
              <codeblock outputclass="syntax javascript">s.usePlugins=true
function s_doPlugins(s) {
	/* Add usage of plugins here */
}
s.doPlugins=s_doPlugins</codeblock>
            </entry>
            <entry colname="col3">Adobe Analytics &gt; reporting and analytics
				</entry>
            <entry colname="col4">Overwrite the default plugins code that is
				  generated in the 
				  <keyword>Analytics</keyword> Product Code section with your
				  current plugins code. 
				</entry>
          </row>
          <row>
            <entry colname="col1">Survey 
				</entry>
            <entry colname="col2">
              <codeblock outputclass="syntax javascript">s.loadModule("Survey")</codeblock>
            </entry>
            <entry colname="col3">Adobe Analytics &gt; reporting and analytics &gt; Survey
				  
				</entry>
            <entry colname="col4">Insert a 
				  <uicontrol>Survey</uicontrol> tag, and then overwrite the default
				  code with your current Survey module code. 
				</entry>
          </row>
          <row>
            <entry colname="col1">Media Module 
				</entry>
            <entry colname="col2">
              <codeblock outputclass="syntax javascript">s.loadModule("Media")</codeblock>
            </entry>
            <entry colname="col3">Adobe Analytics &gt; reporting and analytics &gt; Video 
				</entry>
            <entry colname="col4">Insert a 
				  <uicontrol>Video</uicontrol> tag, and then overwrite the default
				  code with your current Media module code. 
				</entry>
          </row>
          <row>
            <entry colname="col1">Genesis Integrations 
				</entry>
            <entry colname="col2">
              <codeblock outputclass="syntax javascript">s.Integrate.add("DFA");</codeblock>
            </entry>
            <entry colname="col3">Adobe Analytics &gt; reporting and analytics &gt;
				  Integrate Module 
				</entry>
            <entry colname="col4">
              <p>For each integration, insert a Integrate Module tag and set
					 the 
					 <uicontrol>Description</uicontrol> field equal to the
					 integration name set in the 
					 <codeph>Integrate.add</codeph> call: 
				  </p>
              <codeblock>s.Integrate.add("DFA")</codeblock>
              <p>Copy your current integration code to the 
					 <uicontrol>Tag Code</uicontrol> section. 
				  </p>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </conbody>
</concept>