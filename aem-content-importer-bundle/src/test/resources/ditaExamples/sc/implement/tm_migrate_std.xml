<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd"[]>
<concept id="concept_32BCAA24D277424DA66D9FFA530BF4A9">
  <title>Migrating to tag management 2.0 from a Legacy Implementation</title>
  <shortdesc>The following process describes the steps required to migrate from
	 a legacy implementation to tag management. 
  </shortdesc>
  <prolog>
    <metadata>
      <othermeta name="solution" content="Analytics" />
      <othermeta name="topic" content="Developer and implementation" />
      <othermeta name="subtopic" content="Tag management" />
    </metadata>
  </prolog>
  <conbody>
    <p>If you are currently using tag management 1.0, see 
		<xref href="tm_migrate_v1.xml#concept_B17A13674AA74D53BDFD5064A4418F62" format="dita" scope="local"><?xm-replace_text Migrating from TagManager 1.0 to TagManager 2.0?></xref>.
		
	 </p>
    <table id="table_38AEE7733A7F4D9E8CBA2226326DA577">
      <tgroup cols="4">
        <colspec colname="col01" colnum="1" colwidth="1.28*" />
        <colspec colnum="2" colname="col1" colwidth="2.20*" />
        <colspec colnum="3" colname="col2" colwidth="1.00*" />
        <colspec colnum="4" colname="col3" colwidth="4.09*" />
        <thead>
          <row>
            <entry colname="col01">Step 
				</entry>
            <entry colname="col1">Task 
				</entry>
            <entry colname="col2">Location 
				</entry>
            <entry colname="col3">Description 
				</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry colname="col01">
              <b>Step 1</b>
            </entry>
            <entry colname="col1">
              <xref href="tm_quickstart.xml#concept_4F541AA2328C474B804320BB134BC28D" format="dita" scope="local">
                <?xm-replace_text TagManager Quick Start?>
              </xref>
            </entry>
            <entry colname="col2">Tag management UI 
				</entry>
            <entry colname="col3">Create a new tag container and deploy it in a
				  development environment. Add the tag management page code to some pages in a
				  development environment, but do not make any changes to your live site. 
				</entry>
          </row>
          <row>
            <entry colname="col01">
              <b>Step 2</b>
            </entry>
            <entry colname="col1">
              <xref href="tm_migrate_std.xml#concept_32BCAA24D277424DA66D9FFA530BF4A9/section_F443152ED3A7419FBCC39B901C9EF976" format="dita" scope="local">
                <?xm-replace_text Migrate Existing Implementation Code?>
              </xref>
            </entry>
            <entry colname="col2">Tag management UI 
				</entry>
            <entry colname="col3"> Migrate your legacy implementation code to
				  tags. See 
				  <xref href="tm_migrate_std_map.xml#concept_0008E55E20E54B99ABA125BF2DA80C6B" format="dita" scope="local"><?xm-replace_text Standard Implementation to Tag Mapping?></xref>.
				  
				</entry>
          </row>
          <row>
            <entry colname="col01">
              <b>Step 3</b>
            </entry>
            <entry colname="col1">
              <xref href="tm_migrate_std.xml#concept_32BCAA24D277424DA66D9FFA530BF4A9/section_E42E86C9A7384179B605BE926710319D" format="dita" scope="local">
                <?xm-replace_text Ensure Tag Availability?>
              </xref>
            </entry>
            <entry colname="col2">Tag management UI 
				</entry>
            <entry colname="col3">Update your implementation to leverage
				  asynchronous tag loading. 
				</entry>
          </row>
          <row>
            <entry colname="col01">
              <b>Step 4</b>
            </entry>
            <entry colname="col1">
              <xref href="tm_migrate_std.xml#concept_32BCAA24D277424DA66D9FFA530BF4A9/section_12189EA65B374DF8B0DD32DA0E44D6B8" format="dita" scope="local">
                <?xm-replace_text Promote a Live Version?>
              </xref>
            </entry>
            <entry colname="col2">Tag management UI 
				</entry>
            <entry colname="col3">Deploy and test the tag container to make
				  sure everything works correctly. When testing is complete, promote a tag
				  container to the live environment. 
				</entry>
          </row>
          <row>
            <entry colname="col01">
              <b>Step 5</b>
            </entry>
            <entry colname="col1">
              <xref href="tm_migrate_std.xml#concept_32BCAA24D277424DA66D9FFA530BF4A9/section_9FE035D366DC41E0B575F9C2C3FA89F2" format="dita" scope="local">
                <?xm-replace_text Update Page Code?>
              </xref>
            </entry>
            <entry colname="col2">Your website 
				</entry>
            <entry colname="col3">Replace the current page code on your live
				  site with the updated tag management 2.0 page code. 
				</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <section id="section_F443152ED3A7419FBCC39B901C9EF976">
      <title>Migrate Legacy Implementation Code</title>
      <p>Migrate your legacy implementation code to tags. See 
		  <xref href="tm_migrate_std_map.xml#concept_0008E55E20E54B99ABA125BF2DA80C6B" format="dita" scope="local"><?xm-replace_text Standard Implementation to Tag Mapping?></xref>.
		  
		</p>
    </section>
    <section id="section_E42E86C9A7384179B605BE926710319D">
      <title>Ensure Tag Availability</title>
      <p>If you have a legacy implementation with all variables set in the page
		  code section, tag management migration is straightforward. 
		</p>
      <p>The biggest barrier existing customers face when migrating to
		  tag management 2.0 are references to the 
		  <codeph>s</codeph> object within the page itself and within external
		  JavaScript files. Since tag management leverages asynchronous loading for enhanced
		  performance, you might need to modify how you interact with the 
		  <codeph>s</codeph> object since you can't guarantee it is available as
		  the page loads. This also prevents JavaScript errors in the rare case that the
		  CDN is unavailable. 
		</p>
      <p>If you need to interact with the 
		  <codeph>s</codeph> object within the page, for example when a link is
		  clicked or other content is loaded, use one of the following options: 
		</p>
      <p>
        <b>Attach an Event Handler in tag management</b>
      </p>
      <p>Instead of placing AppMeasurement for JavaScript code directly in the page, you can
		  place 
		  <xref href="tm_amc_on.xml#concept_FBECA315D8904A5E931B4040AD51978A" format="dita" scope="local"><?xm-replace_text amc.on Tag Event Callbacks?></xref>
		  directly in the tag management UI. For example, to track the following custom exit
		  link: 
		</p>
      <codeblock outputclass="syntax html">&lt;a href="http://anothersite.com" id="linkExit1"&gt;</codeblock>
      <p>The following code is added in the 
		  <uicontrol>On Load</uicontrol> section of the Site Catalyst component :
		  
		</p>
      <codeblock outputclass="syntax javascript">amc.on('domcontentloaded', function () {
  var link = document.getElementById('linkExit1');
  link.onclick = function() {
    s.tl(this,'e','AnotherSite',null,'navigate'); return false;
  }
});</codeblock>
      <p>When the DOM is loaded and this callback is executed, this code
		  retrieves the link using the ID and attaches the 
		  <codeph>s.tl</codeph> call to the link click event. 
		</p>
      <p>If you need advanced functionality, you could use a jQuery or similar
		  loop to add similar tracking code to all links on the page. 
		</p>
      <p>
        <b>Wrap the Code Directly in an amc.on Callback</b>
      </p>
      <p>If you have only a few locations where you need to interact with the 
		  <codeph>s</codeph> object, you can wrap calls directly in a callback: 
		</p>
      <codeblock outputclass="syntax html">&lt;a href="http://anothersite.com" onclick="var scope=this; amc.on('tagload.analytics',function() {s.tl(scope,'e','AnotherSite',null,'navigate'); }); return false;"&gt;</codeblock>
      <p>The 
		  <codeph>&lt;a&gt;</codeph> object is stored in a variable named scope,
		  which is passed to the 
		  <codeph>s.tl</codeph> function. When the Analytics tag is loaded,
		  the event handler is attached. 
		</p>
      <p>Aside from the code management difficulties, the biggest drawback is
		  that this link won't function in the rare case that the tag container can't be
		  loaded from the CDN. For situations where tag unavailabilty prevents
		  interaction with the page, we recommend adding the event handler in tag management.
		  
		</p>
    </section>
    <section id="section_12189EA65B374DF8B0DD32DA0E44D6B8">
      <title>Promote a Live Version</title>Deploy and test the tag container to
		make sure everything works correctly. When testing is complete, promote a tag
		container to the live environment. 
	 </section>
    <section id="section_9FE035D366DC41E0B575F9C2C3FA89F2">
      <title>Update Live Page Code</title>
      <p>Replace current page code on your live site with the updated
		  tag management 2.0 page code. 
		</p>
    </section>
  </conbody>
</concept>