<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd"[]>
<concept id="concept_74FFDDB44B5344E18ABC6F2F99DF4649">
  <title>eVarN</title>
  <shortdesc>The 
	 <wintitle>eVar</wintitle> variables are used for building custom reports. 
  </shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <keyword>eVar</keyword>
      </keywords>
      <othermeta name="solution" content="Analytics" />
      <othermeta name="topic" content="Developer and implementation" />
      <othermeta name="subtopic" content="Variables" />
    </metadata>
  </prolog>
  <conbody>
    <p>When an eVar is set to a value for a visitor, the value is remembered
		until it expires. Any success events that a visitor encounters while the eVar
		value is active are counted toward the eVar value. 
	 </p>
    <table id="table_452128922ECB4B9C9EE42743AA71BCC6">
      <tgroup cols="4">
        <colspec colnum="1" colname="col1" colwidth="*" />
        <colspec colnum="2" colname="col2" colwidth="*" />
        <colspec colnum="3" colname="col3" colwidth="*" />
        <colspec colnum="4" colname="col4" colwidth="*" />
        <thead>
          <row>
            <entry> Max Size 
				</entry>
            <entry> Debugger Parameter 
				</entry>
            <entry> Reports Populated 
				</entry>
            <entry> Default Value 
				</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry> 255 Bytes 
				</entry>
            <entry> V1-v75 
				</entry>
            <entry> Custom Conversion 
				</entry>
            <entry> "" 
				</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <section id="section_6DB5882B960D4660AE248B91B76883C4">
      <title>Expiration</title>
      <p>
        <wintitle>eVars</wintitle> expire after a time period you specify.
		  After the eVar expires, it no longer receives credit for success events. eVars
		  can also be configured to expire on success events. For example, if you have an
		  internal promotion that expires at the end of a visit, the internal promotion
		  receives credit only for purchases or registrations that occur during the visit
		  in which they were activated. 
		</p>
      <p>There are two ways to expire an eVar: 
		<ul id="ul_DED80CEF93D24E94A5A0A6376F332DBF"><li id="li_443204FD633A4B80BA3E77EB6C879845">You can set the eVar to
			 expire after a specified time period or event. 
		  </li><li id="li_9927D64DCD1A41BB8909DA7A9E4AE9EA">You can use force the
			 expiration of an eVar, which is useful when repurposing a variable. 
		  </li></ul></p>
      <p> If an eVar is used in May to reflect internal promotions and expires
		  after 21 days, and in June it is used to capture internal search keywords, then
		  on June 1<sup>st</sup>, you should force the expiration of, or reset, the
		  variable. Doing so will help keep internal promotion values out of June's
		  reports. 
		</p>
    </section>
    <section id="section_6E9145B7FCC2438E95BB35AAE3857412">
      <title>Case Sensitivity</title>
      <p>eVars are case insensitive, but they are displayed in the
		  capitalization of the first occurrence. For example, if the first instance of
		  eVar1 is set to "Logged In," but all subsequent instances are passed as "logged
		  in," reports always show "Logged In" as the value of the eVar. 
		</p>
    </section>
    <section id="section_D8403F0C175E4BC9BE4F2E794B1F4D33">
      <title>Counters</title>
      <p>While eVars are most often used to hold string values, they may also
		  be configured to act as counters. eVars are useful as counters when you are
		  trying to count the number of actions a user takes before an event. For
		  example, you may use an eVar to capture the number of internal searches before
		  purchase. Each time a visitor searches, the eVar should contain a value of
		  '+1.' If a visitor searches four times before a purchase, you will see an
		  instance for each total count: 1.00, 2.00, 3.00, and 4.00. However, only the
		  4.00 receives credit for the purchase event (Orders and Revenue Metrics). Only
		  positive numbers are allowed as values of an eVar counter. 
		</p>
    </section>
    <section id="section_2BEABBBC735241F4BA42E74D19B5AEE0">
      <title>Subrelations</title>
      <p>A common requirement for a 
		  <wintitle>Custom eVar</wintitle> report is the ability to break down
		  one 
		  <wintitle>Custom eVar</wintitle> report by another. For example, if one
		  eVar contains gender, and another contains salary, you may ask the following
		  question: of the female visitors to my site, how much revenue was generated by
		  women who make more than $50,000 per year. Any eVar that is fully sub-related
		  allows this type of break down in reports. For example, if the gender eVar has
		  full subrelations enabled, all other custom eVar reports can be broken down by
		  gender, and gender can be broken down by all others. To see the relationship
		  between two reports, only one of them needs full subrelations enabled. By
		  default, 
		  <wintitle>Campaigns</wintitle>, 
		  <wintitle>Products</wintitle>, and 
		  <wintitle>Category</wintitle> reports are fully sub-related (any eVar
		  can be broken down by campaign or products). 
		</p>
    </section>
    <section id="section_BD46438B14F3488FB9AC42994C317B06">
      <title>Syntax and Possible Values</title>
      <p>While eVars may be renamed, they should always be referred to in the
		  JavaScript file by eVarX, where X is a number between 1 and 75. 
		</p>
      <codeblock outputclass="syntax javascript">s.eVarX="value"</codeblock>
      <p>When not used as a counter, eVars have the same limitations as all
		  other variables. If the eVar is a "counter," it is expected to receive numeric
		  values like "1" or "2.5." If more than two decimal places are given, the eVar
		  counter rounds to two decimal places. An eVar counter may not contain negative
		  numbers. 
		</p>
    </section>
    <section id="section_B37F4B0D56734DA3AB02BB218825BA4E">
      <title>Examples</title>
      <codeblock outputclass="syntax javascript">s.eVar1="logged in"</codeblock>
      <codeblock outputclass="syntax javascript">s.eVar23="internal spring promo 4"</codeblock>
    </section>
    <section id="section_BD1FE63001C84D3DB69F3DEE243960B6">
      <title> Configuration Settings</title>
      <p>eVars can be configured in the 
		  <keyword>Admin Console</keyword>. All eVars can be configured with a 
		  <wintitle>Name</wintitle>, 
		  <wintitle>Type</wintitle>, 
		  <wintitle>Allocation</wintitle>, 
		  <wintitle>Expire After Setting</wintitle>, or 
		  <wintitle>Reset</wintitle>. Each configuration setting is addressed
		  separately. 
		</p>
      <table id="table_5C524B71520849FA8A9A6B79A3EE77C9">
        <tgroup cols="2">
          <colspec colnum="1" colname="col1" colwidth="1.00*" />
          <colspec colnum="2" colname="col2" colwidth="2.63*" />
          <thead>
            <row>
              <entry> Setting 
				  </entry>
              <entry> Description 
				  </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry> Name 
				  </entry>
              <entry> Allows you to change the name of the eVar report within 
					 <keyword>Analytics</keyword>. 
					 <p>The eVar should still be referenced as s.eVarX in the
						JavaScript code, no matter what name is given to the report in 
						<keyword>Analytics</keyword>. 
					 </p></entry>
            </row>
            <row>
              <entry> Type 
				  </entry>
              <entry> Allows you to show whether the eVar is a Text String or
					 Counter. 
				  </entry>
            </row>
            <row>
              <entry> Allocation 
				  </entry>
              <entry> Used to configure which value of the eVar receives credit
					 for success events. 
					 <p>If Allocation is set to "Most Recent (Last)," then B
						receives credit. 
					 </p><p>If Allocation is set to "Original Value (First)" then A
						receives credit. 
					 </p><p>If Allocation is set to "Linear", then both A and B receive
						credit for half the purchase value. 
					 </p></entry>
            </row>
            <row>
              <entry> Expire After 
				  </entry>
              <entry> Lets you determine whether an eVar expires on a specific
					 event, like purchase, or after a custom or predefined time period. 
				  </entry>
            </row>
            <row>
              <entry> Reset 
				  </entry>
              <entry> By selecting the 
					 <wintitle>Reset</wintitle> check box for an eVar, and clicking 
					 <wintitle>Save</wintitle> at the bottom of the page, all values
					 of that eVar are immediately expired. After this happens, only new values of
					 the eVar receive credit for success events. 
				  </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section id="section_DA6912C802E445F986C6DE4234C6C737">
      <title>Pitfalls, Questions, and Tips</title>
      <ul id="ul_7A8E0DC849394D1B982748E2D49D4D24">
        <li id="li_6160871B87704398817BBCEB84A1DE00"> Unlike 
			 <wintitle>prop</wintitle> variables, eVar variables are not allowed
			 to be lists of delimited values. If you populate an eVar with a list of values,
			 for example "one,two,three," then that exact string appears in reports. 
		  </li>
        <li id="li_5BF0241F58AE448D9C53B334E0DFFC77"> eVar counters may not
			 contain negative numbers. 
		  </li>
      </ul>
    </section>
  </conbody>
</concept>