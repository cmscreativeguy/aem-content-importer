<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd"[]>
<concept id="concept_20417E8BA5FE45D0A2DA8A271669E559">
  <title>Dynamic Implementation</title>
  <shortdesc>A dynamic implementation links the plug-in into your Flash project
	 at run-time. 
  </shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <keyword>media</keyword>
        <keyword>milestone</keyword>
        <keyword>sdk</keyword>
        <keyword>video</keyword>
      </keywords>
      <othermeta name="solution" content="Analytics" />
      <othermeta name="topic" content="Developer and implementation" />
    </metadata>
  </prolog>
  <conbody>
    <p> A dynamic implementation lets you manage the OSMF player separately
		from AppMeasurement tracking code, including the AppMeasurement plug-in for
		OSMF. 
	 </p>
    <p>To do this, load 
		<filepath>AppMeasurementExtensionOSMF.swf</filepath> and specify a
		configuration URL that points to an XML config file in the URL query-string.
		The config file contains all the media tracking settings to be used by your
		OSMF player. 
	 </p>
    <p>For example, given an OSMF player with a 
		<codeph>MediaFactory</codeph>, the dynamic implementation code might look
		like the following: 
	 </p>
    <codeblock>mediaFactory.loadPlugin(new URLResource("http://www.corp1.com/AppMeasurementExtensionOSMF.swf?s.configURL=http%3A%2F%2Fwww.corp1.com%2Fasconfig.xml"));</codeblock>
    <p>This code tells MediaFactory to load the SWF. The SWF then loads the
		config file, which populates the AppMeasurement instance inside the SWF. This
		effectively performs the same integration process described in the static
		implementation (adding the AppMeasurement OSMF bridge and creating the
		reference plug-in). The 
		<codeph>s.configURL</codeph> parameter name in the query string is
		case-sensitive. 
	 </p>
    <p>See the following section for details on the XML configuration file. 
	 </p>
    <section id="section_EFA781861B5845738A10E4CCC992A2DE">
      <title>XML Configuration File</title>
      <p>When using a dynamic OSMF implementation, you can use an XML config
		  file to bind variables to OSMF metadata. AppMeasurement uses the following
		  variable binding syntax: 
		</p>
      <codeblock>&lt;variable&gt;{media.player.metadata(namespace,key)}&lt;/variable&gt;</codeblock>
      <p>
        <b>variable</b>: The name of the variable you wish to set (for
		  example, eVar6). 
		</p>
      <p>
        <b>namespace</b>: (Optional) The OSMF metadata namespace you want to
		  use. If you do not specify a namespace, the AppMeasurement OSMF plug-in uses
		  the first matching key it locates in any namespace. When looking for keys, the
		  plug-in looks first at MediaElement metadata, then at MediaResource metadata. 
		</p>
      <p>
        <b>key</b>: The specific metadata value you want to use. 
		</p>
      <p>The following section contains a sample XML configuration file. 
		</p>
      <ul id="ul_42BDF9DAA142493789960FACDB075C6F">
        <li id="li_3D18AD2B69054C9681DC16CA4B4F92AF">The 
			 <codeph>trackSeconds</codeph> and 
			 <codeph>milestone</codeph> sections are optional. See 
			 <xref href="video_arch_intervals.xml#concept_E09565C188AD44DF9EAC6F64C3433A6A" type="concept" format="dita" scope="local"><?xm-replace_text Video Metrics?></xref>.
			 
		  </li>
      </ul>
      <p> If the Web Analytics team filled out the 
		  <xref href="video_worksheet.xml#concept_0A7B2FAC52B04AE6BFD8747B57D56222" type="concept" format="dita" scope="local"><?xm-replace_text Video Implementation Worksheet?></xref>,
		  you might have a list similar to the following: 
		</p>
      <ul id="ul_B7643E8CEAE3442ABD39D775A09E1CDA">
        <li id="li_6D5AC3493D5E4CE5AE7A543F0C0D314B">Video Name (eVar): 
			 <userinput>eVar2</userinput></li>
        <li id="li_FCDE2B604D0B4C9CADC63EAA0EEEEA46">Video Name (Prop): 
			 <userinput>prop2</userinput></li>
        <li id="li_B8319B86E8734F6BAFD1030FB63ECB7C">Segments (eVar): 
			 <userinput>eVar3</userinput></li>
        <li id="li_95D1DE3AB45A4AA4829170965D36E82C">Content Type (eVar): 
			 <userinput>eVar1</userinput></li>
        <li id="li_A3EDA5CDF48C4300AD961098DB47920A">Video Time (Event): 
			 <userinput>event3</userinput></li>
        <li id="li_983373973BA7431297AF7DEF46153B5B">Video Views (Event): 
			 <userinput>event1</userinput></li>
        <li id="li_6BBD8E106D4F40979FAB42F9893C46BD">Video Completes (Event): 
			 <userinput>event7</userinput></li>
        <li id="li_75B44CD364A94FDEB874625033C9601E">Video Segment Views
			 (Event): 
			 <userinput>event2</userinput></li>
      </ul>
      <p>Map these variables to the appropriate 
		  <codeph>a.media</codeph> variable in the 
		  <codeph>contextDataMapping</codeph> section. 
		</p>
      <codeblock>&lt;config&gt;
&lt;account&gt;myrsid&lt;/account&gt;
&lt;debugTracking&gt;true&lt;/debugTracking&gt;
&lt;visitorNamespace&gt;corp1&lt;/visitorNamespace&gt;
&lt;trackingServer&gt;corp1.d1.sc.omtrdc.net&lt;/trackingServer&gt;
&lt;Media&gt;
    &lt;autoTrack&gt;true&lt;/autoTrack&gt;
    &lt;trackMilestones&gt;25,50,75&lt;/trackMilestones&gt;
    &lt;trackVars&gt;events,eVar1,eVar2,eVar3,prop2&lt;/trackVars&gt;
    &lt;trackEvents&gt;event1,event2,event3,event4,event5,event6,event7&lt;/trackEvents&gt;
    &lt;segmentByMilestones&gt;true&lt;/segmentByMilestones&gt;
    &lt;trackUsingContextData&gt;true&lt;/trackUsingContextData&gt;
    &lt;contextDataMapping&gt;
            &lt;a.media.name&gt;eVar2,prop2&lt;/a.media.name&gt;
            &lt;a.media.segment&gt;eVar3&lt;/a.media.segment&gt;
            &lt;a.contentType&gt;eVar1&lt;/a.contentType&gt;
            &lt;a.media.timePlayed&gt;event3&lt;/a.media.timePlayed&gt;
            &lt;a.media.view&gt;event1&lt;/a.media.view&gt;
            &lt;a.media.segmentView&gt;event2&lt;/a.media.segmentView&gt;
            &lt;a.media.complete&gt;event7&lt;/a.media.complete&gt;
            &lt;a.media.milestones&gt;
                &lt;item name="25"&gt;event4&lt;/item&gt;
                &lt;item name="50"&gt;event5&lt;/item&gt;
                &lt;item name="75"&gt;event6&lt;/item&gt;
            &lt;/a.media.milestones&gt;
    &lt;/contextDataMapping&gt;
&lt;/Media&gt;
&lt;/config&gt;</codeblock>
    </section>
  </conbody>
</concept>