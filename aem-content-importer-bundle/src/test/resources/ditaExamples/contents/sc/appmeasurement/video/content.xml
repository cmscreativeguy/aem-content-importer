<?xml version="1.0" encoding="UTF-8"?>
<jcr:root xmlns:sling="http://sling.apache.org/jcr/sling/1.0"
          xmlns:cq="http://www.day.com/jcr/cq/1.0"
          xmlns:jcr="http://www.jcp.org/jcr/1.0"
          xmlns:nt="http://www.jcp.org/jcr/nt/1.0"
          xmlns:pd="http://www.adobe.com/pando"
          jcr:primaryType="cq:Page">
   <jcr:content jcr:primaryType="nt:unstructured"
                jcr:title="Measuring Video in Adobe Analytics"
                sling:resourceType="wcm/foundation/components/page">
      <par jcr:primaryType="nt:unstructured"
           sling:resourceType="wcm/foundation/components/parsys">
         <sitemap jcr:primaryType="nt:unstructured"
                  sling:resourceType="foundation/components/sitemap"
                  rootPath="/content/dita-import"/>
      </par>
   </jcr:content>
   <video_tracking jcr:primaryType="cq:Page">
      <jcr:content jcr:primaryType="nt:unstructured"
                   jcr:title="Measuring Video in Adobe Analytics"
                   sling:resourceType="wcm/foundation/components/page">
         <par jcr:primaryType="nt:unstructured"
              sling:resourceType="wcm/foundation/components/parsys">
            <text jcr:primaryType="nt:unstructured"
                  sling:resourceType="wcm/foundation/components/text"
                  textIsRich="true"
                  text="&lt;simpletable id=&#34;simpletable_BE59B7500EDB418B8130EAC344DBADB4&#34;&gt;&lt;strow&gt;&lt;stentry /&gt;&lt;stentry&gt;&lt;p&gt;&lt;b&gt;New!&lt;/b&gt; Adobe has released a new way to measure video. See &#xA;&#x9;&#x9;&#x9;&#x9;&lt;a href=&#34;https://marketing.adobe.com/resources/help/en_US/sc/appmeasurement/hbvideo/&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;Heartbeat Video&lt;/a&gt;.&#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/stentry&gt;&lt;/strow&gt;&lt;/simpletable&gt;&lt;p&gt;Adobe Analytics provides native support for measuring the most popular&#xA;&#x9;&#x9;video formats on the Web. Almost any other player and video format can be&#xA;&#x9;&#x9;measured using JavaScript. You can start measuring video using your existing&#xA;&#x9;&#x9;video player and content. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;The first section of this guide walks you through the analytics&#xA;&#x9;&#x9;decisions you need to make to measure video, and then finishes with an&#xA;&#x9;&#x9;implementation worksheet to deliver to the video developer. The second section&#xA;&#x9;&#x9;provides the in-depth details for the video developer who implements the&#xA;&#x9;&#x9;measurement code. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;Video measurement tips, tricks and best practices on the Digital&#xA;&#x9;&#x9;Marketing Blog: &#xA;&#x9; &lt;/p&gt;&lt;ul id=&#34;ul_8457D08E1870477397B2746FF94EA8DA&#34;&gt;&lt;li id=&#34;li_56F7A5A83DF14ED9A373BE0EF1EC87B9&#34;&gt;&lt;a href=&#34;http://blogs.adobe.com/digitalmarketing/industries/media-and-entertainment/why-video-measurement-matters/&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;Why Video Measurement Matters&lt;/a&gt;&lt;/li&gt;&lt;li id=&#34;li_505A85C1E6724BF0AE2EC8FD181975AB&#34;&gt;&lt;a href=&#34;http://blogs.adobe.com/digitalmarketing/analytics/creating-the-perfect-plan-for-video-measurement/&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;Creating The Perfect Plan for Video&#xA;&#x9;&#x9;&#x9; Measurement&lt;/a&gt;&lt;/li&gt;&lt;li id=&#34;li_43B0CEFF2EDE4F7483B759CD7FAD449A&#34;&gt;&lt;a href=&#34;http://blogs.adobe.com/digitalmarketing/analytics/understanding-video-measurement-implementation/&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;Understanding Video Measurement&#xA;&#x9;&#x9;&#x9; Implementation&lt;/a&gt;&lt;/li&gt;&lt;li id=&#34;li_FE4D7FA035E04268954729E5333DD78C&#34;&gt;&lt;a href=&#34;http://blogs.adobe.com/digitalmarketing/analytics/initializing-video-measurement-success/&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;Initializing Video Measurement Success&lt;/a&gt;&lt;/li&gt;&lt;li id=&#34;li_39800E3F2F124087972FB3456AACBBD5&#34;&gt;&lt;a href=&#34;http://blogs.adobe.com/digitalmarketing/analytics/navigating-video-measurement-analysis/&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;Navigating Video Measurement Analysis&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Recent updates to this guide: &#xA;&#x9; &lt;/p&gt;&lt;table id=&#34;table_48F889A10B68461FB675246FE148607D&#34;&gt;&lt;tgroup cols=&#34;2&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;4.94*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Date &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Update &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;02/21/2013 &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Added &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.openAd&lt;/i&gt;, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.click&lt;/i&gt;, and several &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;media.ad&lt;/i&gt; contextData variables to support a&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; video ad tracking. See &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;a href=&#34;video_ads.html#concept_045DCEBBB82144309DF95CF3C4A6B6A8&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;9/13/2012 &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Added a note that in order for JavaScript AutoTrack to work,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; you must have the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;classid&lt;/i&gt; attribute set on the object you want&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; to track. The &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;classid&lt;/i&gt; is required to expose the event&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; handlers used by the Media Module to automatically track the video. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;Added a note that autoTrack for Windows Media Player works&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; only with Internet Explorer. Manual tracking for Windows Media Player is&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; required to support other browsers. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;Added details on the OSMF XML &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;autoBind&lt;/i&gt; attribute that lets you start and end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; string literals using curly braces. See &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;a href=&#34;video_osmf_override_name.html#concept_C5BCD5DE06CA47BFB9D390F52FBCD70A&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;8/6/2012 &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;We now recommend setting the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;trackVars&lt;/i&gt; and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;trackEvents&lt;/i&gt; variables for all implementations,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; even if &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.monitor&lt;/i&gt; is not being used. Populate &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;trackVars&lt;/i&gt; with a list of each prop and eVar&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; used in your implementation, along with the string &#34;events&#34;: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;code&gt;s.Media.trackVars=&#34;events,prop2,eVar1,eVar2,eVar3&#34;;&lt;/code&gt;&lt;p&gt;. Populate &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;trackEvents&lt;/i&gt; with a list of all events used in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; your implementation: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;code&gt;s.Media.trackEvents=&#34;event1,event2,event3,event4,event5,event6,event7&#34;&lt;/code&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;7/19/2012 &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Added links to the iOS and Android 3.x video documentation. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;&lt;section id=&#34;section_E9F4400A966A4264B34E0A0FC8B17779&#34;&gt;&lt;title&gt;January 2012: New Process to Track Video Completes&lt;/title&gt;&lt;p&gt;You must make a small modification to your tracking code to enable the&#xA;&#x9;&#x9;  new functionality. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Why is this change needed?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Previously the 100% milestone was used to indicate a complete view.&#xA;&#x9;&#x9;  However, due to the granular nature of time tracking in video, some players&#xA;&#x9;&#x9;  never reported an offset that equaled the total length of the video. This&#xA;&#x9;&#x9;  prevented the 100% milestone from being reached even when the complete video&#xA;&#x9;&#x9;  was viewed. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;To avoid this, completes are now tracked using an offset from the end&#xA;&#x9;&#x9;  of the video. This change should result in more accurate tracking of video&#xA;&#x9;&#x9;  completes. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;&lt;b&gt;What do I need to change?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;After you update to the new version of the libraries, the new method&#xA;&#x9;&#x9;  of tracking completes is enabled with an offset equal to 1 second. In you code,&#xA;&#x9;&#x9;  you need to change your contextDataMapping to define the event that is used to&#xA;&#x9;&#x9;  track completes using the new &#xA;&#x9;&#x9;  &lt;i&gt;a.media.complete&lt;/i&gt; variable. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;To make this change in your code, find the &#xA;&#x9;&#x9;  &lt;i&gt;Media.contextDataMapping&lt;/i&gt; section: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;    s.Media.contextDataMapping = {&#xA;      &lt;/code&gt;&lt;p&gt; Remove the 100% milestone (or whatever percentage you defined as&#xA;&#x9;&#x9;  complete) from &#xA;&#x9;&#x9;  &lt;i&gt;a.media.milestones&lt;/i&gt;. Save the event value (event7 in&#xA;&#x9;&#x9;  this example) as it is used in the next step: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;     &#34;a.media.milestones&#34;:{&#xA;         25:&#34;event4&#34;,&#xA;         50:&#34;event5&#34;,&#xA;         75:&#34;event6&#34;,&#xA;         100:&#34;event7&#34; (remove this line)&#xA;     };&lt;/code&gt;&lt;p&gt;Add &#xA;&#x9;&#x9;  &lt;i&gt;a.media.complete&lt;/i&gt; and map the event value previously&#xA;&#x9;&#x9;  defined for the complete milestone. The &#xA;&#x9;&#x9;  &lt;i&gt;Media.contextDataMapping&lt;/i&gt; section should appear similar&#xA;&#x9;&#x9;  to the following: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;    s.Media.contextDataMapping = {&#xA;      &#34;a.media.name&#34;:&#34;eVar2,prop2&#34;,&#xA;      &#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;      &#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;      &#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;      &#34;a.media.view&#34;:&#34;event1&#34;,&#xA;      &#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA; &lt;b&gt;     &#34;a.media.complete&#34;:&#34;event7&#34;,&lt;/b&gt;&#xA;      &#34;a.media.milestones&#34;:{&#xA;         25:&#34;event4&#34;,&#xA;         50:&#34;event5&#34;,&#xA;         75:&#34;event6&#34;&#xA;     };&lt;/code&gt;&lt;p&gt;If you aren't sure which event is used to track completes, you can&#xA;&#x9;&#x9;  check your SiteCatalyst video configuration in the Admin Console. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;After you make this change the complete event is sent 1 second before&#xA;&#x9;&#x9;  the end of a video. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;"/>
         </par>
      </jcr:content>
   </video_tracking>
   <video_arch jcr:primaryType="cq:Page">
      <jcr:content jcr:primaryType="nt:unstructured"
                   jcr:title="How Video Measurement Works"
                   sling:resourceType="wcm/foundation/components/page">
         <par jcr:primaryType="nt:unstructured"
              sling:resourceType="wcm/foundation/components/parsys">
            <text jcr:primaryType="nt:unstructured"
                  sling:resourceType="wcm/foundation/components/text"
                  textIsRich="true"
                  text="&lt;p&gt;On the Web, JavaScript is added to pages on your site to enable&#xA;&#x9;&#x9;measurement. Data is sent when a page is visited, or when a specific action&#xA;&#x9;&#x9;occurs (for example, something is added to the shopping cart). The data sent by&#xA;&#x9;&#x9;this code is analyzed by Analytics to determine the order pages were viewed,&#xA;&#x9;&#x9;and how long viewers were on a particular page. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;Similarly, code is added to your video player to enable video&#xA;&#x9;&#x9;measurement. For videos, data is sent when a video is started, closed, and at&#xA;&#x9;&#x9;specific intervals or percentage-based milestones during video playback. To&#xA;&#x9;&#x9;measure video, you add code (called the &#xA;&#x9;&#x9;media module) to your video player. The &#xA;&#x9;&#x9;media module is available in multiple formats to&#xA;&#x9;&#x9;support a variety of video players. For example, the &#xA;&#x9;&#x9;media module is available in ActionScript for Flash,&#xA;&#x9;&#x9;as a plug-in for OSMF, in .NET for Silverlight, and in JavaScript for other Web&#xA;&#x9;&#x9;players (Windows Media Player, Quicktime, and others). &#xA;&#x9; &lt;/p&gt;&lt;p&gt;If you have the source code for the player (for example, a custom OSMF&#xA;&#x9;&#x9;player or a direct Flash NetStream implementation), you can compile the &#xA;&#x9;&#x9;media module directly into the player. For other&#xA;&#x9;&#x9;players you can integrate using a plug-in interface or by using event handlers&#xA;&#x9;&#x9;that are exposed by the player. &#xA;&#x9; &lt;/p&gt;"/>
         </par>
      </jcr:content>
      <video_arch_intervals jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Video Metrics"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;section id=&#34;section_9BE0D197A2FF4684903618BA147A0AA5&#34;&gt;&lt;title&gt;Measuring Video Views and Time Played&lt;/title&gt;&lt;p&gt;A basic implementation tracks video views and time played by sending a&#xA;&#x9;&#x9;  server call when a video is opened and closed. For a complete view, this&#xA;&#x9;&#x9;  results in a call when the video is opened and when it is closed. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;img src=&#34;../graphics/basic-hit.png&#34; id=&#34;image_079283AED968443BA74F56629A092B94&#34; /&gt;&lt;p&gt;This provides the data to track total views (a view event is sent on&#xA;&#x9;&#x9;  video open) and time viewed (the total time viewed is sent on close). &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;When data is sent, the time viewed tracks total time spent viewing a&#xA;&#x9;&#x9;  video. It does not track how much of the video a visitor views. It does not&#xA;&#x9;&#x9;  distinguish between viewing the file from beginning to end, and replaying a&#xA;&#x9;&#x9;  portion of the video multiple times. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;This works for shorter video clips and when you are mostly interested&#xA;&#x9;&#x9;  in total views. To gain addition insights, you can divide a video into segments&#xA;&#x9;&#x9;  and track key milestones (such as complete views). &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;&lt;section id=&#34;section_B9AA10144DD24730B12D824C33CFDBE8&#34;&gt;&lt;title&gt;Measuring Video Segments&lt;/title&gt;&lt;p&gt;Segments let you divide an individual video into multiple parts for&#xA;&#x9;&#x9;  measurement purposes. This can provide a more granular view of how a particular&#xA;&#x9;&#x9;  video is being viewed and help you track video fall out. If you have mostly 30&#xA;&#x9;&#x9;  or 60-second clips, you might not need segments. However, if you are measuring&#xA;&#x9;&#x9;  a sporting event, you might be very interested in comparing video data in the&#xA;&#x9;&#x9;  first quarter to video data in the fourth quarter. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;See the &#xA;&#x9;&#x9;  &lt;a href=&#34;../video_reports_detail.html#concept_EECB113D93F74ECCA4C440339C85B958&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&#xA;&#x9;&#x9;  to see how segment data is used to provide video insights. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;&lt;section id=&#34;section_A44D093838274956824E1C15B27EC32A&#34;&gt;&lt;title&gt;Measuring Key Milestones&lt;/title&gt;&lt;p&gt;Milestones let you measure when a specific location in a video is&#xA;&#x9;&#x9;  viewed. When a milestone is viewed a server call is sent containing the&#xA;&#x9;&#x9;  milestone event defined for that milestone. Milestones are defined as a&#xA;&#x9;&#x9;  percentage of total video length. Each milestones is tracked using a custom&#xA;&#x9;&#x9;  event. You need to select a custom event for each milestone you want to track. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;If you define a 50% milestone for a 2 minute video, calls are made at&#xA;&#x9;&#x9;  the following points: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;img src=&#34;../graphics/milestone-hit.png&#34; id=&#34;image_45036BE24AFA4A2B811DBF7C6373B13B&#34; /&gt;&lt;p&gt;The 50% milestone event and time viewed is reported at 1 minute. The&#xA;&#x9;&#x9;  remaining time viewed is sent at the video end. If you define milestones at&#xA;&#x9;&#x9;  25%, 50%, 75%, calls are made at the following points: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;img src=&#34;../graphics/milestone-multiple-hit.png&#34; id=&#34;image_A874F62949744E5E982C1B567EFEBF54&#34; /&gt;&lt;p&gt;In this example two additional calls are made containing the 25% and&#xA;&#x9;&#x9;  75% milestone events and the time viewed. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;An additional benefit to tracking milestones is that time viewed is&#xA;&#x9;&#x9;  sent incrementally. When you are tracking only the video open and close, the&#xA;&#x9;&#x9;  time viewed is not reported until the video is closed (when the user opens a&#xA;&#x9;&#x9;  new video or the video ends). If the player is closed unexpectedly (for&#xA;&#x9;&#x9;  example, the browser window is closed), no time viewed is reported. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;In the milestone example, if the player closed unexpectedly at 1:10, 1&#xA;&#x9;&#x9;  minute of time viewed would be measured. The 10 seconds that occurred after the&#xA;&#x9;&#x9;  50% milestone would not be measured. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;Because these milestones are fixed points in the video, if a visitor&#xA;&#x9;&#x9;  views past the 50% milestone, then rewinds and passes the 50% milestone again,&#xA;&#x9;&#x9;  the milestone event is sent multiple times. Similarly, if a visitor skips past&#xA;&#x9;&#x9;  a milestone, an event is not sent for that milestone. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;&lt;section id=&#34;section_E57427770E9A4E22A77CAB186835DDAB&#34;&gt;&lt;title&gt;Measuring Video Completes&lt;/title&gt;&lt;p&gt;Defining a complete event lets you track the number of viewers who&#xA;&#x9;&#x9;  view the end of a video. By default, if you define a video complete event it is&#xA;&#x9;&#x9;  sent 1 second before the end of the video.&#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;&lt;section id=&#34;section_99AC7C072C904D98B418B7F715FF90CD&#34;&gt;&lt;title&gt;Track Seconds&lt;/title&gt;&lt;p&gt;Tracking seconds lets you send video data at second-based intervals&#xA;&#x9;&#x9;  throughout your video. Tracking seconds can be used with or without video&#xA;&#x9;&#x9;  milestones. For example, if you track a 50% milestone, and then specify a track&#xA;&#x9;&#x9;  seconds interval of 15, calls would be made at the following points: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;img src=&#34;../graphics/seconds-hit.png&#34; id=&#34;image_6EFE4873976E42D88B63AF4A8C76901E&#34; /&gt;&lt;/section&gt;"/>
            </par>
         </jcr:content>
      </video_arch_intervals>
   </video_arch>
   <video_analyst jcr:primaryType="cq:Page">
      <jcr:content jcr:primaryType="nt:unstructured"
                   jcr:title="Measuring Video for Web Analysts"
                   sling:resourceType="wcm/foundation/components/page">
         <par jcr:primaryType="nt:unstructured"
              sling:resourceType="wcm/foundation/components/parsys">
            <text jcr:primaryType="nt:unstructured"
                  sling:resourceType="wcm/foundation/components/text"
                  textIsRich="true"
                  text="&lt;p&gt;Measuring video on your Web site involves two functional teams. First,&#xA;&#x9;&#x9;the web analytics team reviews the video reports, determines how often video&#xA;&#x9;&#x9;data should be sent to Adobe collection servers, and selects which&#xA;&#x9;&#x9;commerce variables and custom events should be dedicated to video measurement.&#xA;&#x9;&#x9;Next, the video development team uses the &#xA;&#x9;&#x9;media module to send data when videos are viewed on&#xA;&#x9;&#x9;your web site. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;The following table lists the process to measure video for the web&#xA;&#x9;&#x9;analytics team: &#xA;&#x9; &lt;/p&gt;&lt;table id=&#34;table_D0525C90F45B46EC818AC76749B32F94&#34;&gt;&lt;tgroup cols=&#34;3&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;2.69*&#34; /&gt;&lt;colspec colnum=&#34;3&#34; colname=&#34;col3&#34; colwidth=&#34;3.48*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;Step &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Task &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;Details &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Step 1 &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Review the video reports to understand the video metrics you&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; can measure. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;&lt;a href=&#34;video_reports.html#concept_887B0103A5904D0697EA06E9FADC611F&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; otherprops=&#34;onpage&#34; /&gt;&lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Step 2 &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Define the video segments and milestones you want to measure. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;&lt;a href=&#34;video_arch_intervals.html#concept_E09565C188AD44DF9EAC6F64C3433A6A&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; otherprops=&#34;onpage&#34; /&gt;&lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Step 3 &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Configure the video measurement reports. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;To measure video, you need to dedicate: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;ul id=&#34;ul_EEBAAA921FF84A92905F3A7DB3338201&#34;&gt;&lt;li id=&#34;li_F691BBA098654C9FA0537FC636E29371&#34;&gt;3 commerce&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;variables (eVar) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_5A124D9776564910A03F00F3717428E1&#34;&gt;4 custom events &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_094F47F05A3145F48B165C235CBF0DB1&#34;&gt;1 custom insight&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(s.Prop) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&#34;video_config.html#task_7EFCD616A99E4B39B7CF5CE43981C009&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Step 4 &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Complete the implementation worksheet for the video&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; development team. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;&lt;a href=&#34;video_worksheet.html#concept_0A7B2FAC52B04AE6BFD8747B57D56222&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; otherprops=&#34;onpage&#34; /&gt;&lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;"/>
         </par>
      </jcr:content>
      <video_reports jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Video Reports"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p&gt;Video reports are listed in the &#xA;&#x9;&#x9;&lt;b&gt;Reports&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&lt;b&gt;Video&lt;/b&gt; section. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;&lt;b&gt;Why are the Video Engagement Reports marked as &#34;Beta&#34;?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;We are working to improve the functionality and layout of these reports,&#xA;&#x9;&#x9;so expect to see some minor changes to these reports in future releases. The&#xA;&#x9;&#x9;data that appears on these reports is accurate and is not impacted by the beta&#xA;&#x9;&#x9;status. &#xA;&#x9; &lt;/p&gt;&lt;draft-comment&gt;&lt;p&gt;If you are migrating from milestone &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;segments are going away, you can still view segments through custom&#xA;&#x9;&#x9;  reports &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/draft-comment&gt;&lt;section id=&#34;section_CFE8C0917F314308B266CB48A6AD61F4&#34;&gt;&lt;title&gt;Video Engagement Reports (Beta)&lt;/title&gt;&lt;table id=&#34;table_3B8DDC9D47034856BC4441BA8BB93208&#34;&gt;&lt;tgroup cols=&#34;3&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;1.92*&#34; /&gt;&lt;colspec colname=&#34;col3&#34; colnum=&#34;3&#34; colwidth=&#34;1.96*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Video Report &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Description &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;Common Business Insights &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;&lt;a href=&#34;../video_reports_overview.html#concept_72BA491187634261A8BECD0561A2B1A4&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;The Video Overview Report displays several aggregate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;measurements to quickly monitor that video is performing as expected. A graph&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;displays video starts next to ad impressions to let you quickly view these&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;metrics for each video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;ul id=&#34;ul_1B90C2C1B57440BA8482DFDD84ADE078&#34;&gt;&lt;li id=&#34;li_1EEE0441DD3E4BAB9BF39DEB8BA7221F&#34;&gt;&lt;p&gt;Totals for top video metrics including unique viewers,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; completion rate, average video metrics, and average videos per visit. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;li_9F3095663AFD474CBDB3DEC119FA6FB0&#34;&gt;&lt;p&gt;Total video and ad views for specific videos filtered by&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; device type or country. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;&lt;a href=&#34;../video_reports_detail.html#concept_EECB113D93F74ECCA4C440339C85B958&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Displays detailed metrics for all videos including starts,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;completion rate, play percentage, and ad impressions. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;ul id=&#34;ul_2890CE365EA749A483FC47E1960B3B8B&#34;&gt;&lt;li id=&#34;li_0298F815952D42F39F6055C041ED9B5A&#34;&gt;Totals for top&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  video metrics including video starts, ad impressions, average ads per video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_D811B51C7D424E6AA6721E9C8281EF61&#34;&gt;&lt;p&gt;Top videos by multiple metrics &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;&lt;a href=&#34;../video_reports_daypart.html#concept_3D503D88AD4D453792FDFDE6C36CD801&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Displays unique visitors and video views by time of day to&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;let you quickly view when your audience is engaged. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;ul id=&#34;ul_2F16537BD35D49AE893B8B6975731C39&#34;&gt;&lt;li id=&#34;li_E24BBE6D159B40A1B455AF0F88ABAA0B&#34;&gt;Audience&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  engagement by time of day. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_F3DBCF1BBB1447EBBED7CBA2DEE4C5F5&#34;&gt;Audience&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  engagement compared to previous date ranges. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Video Metrics and Video Dimensions &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Video metrics and dimensions are standard Analytics&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;variables that can be reported directly and added to other Analytics reports. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;ul id=&#34;ul_0359D637E8684A29921CFB9A5B3BFC51&#34;&gt;&lt;li id=&#34;li_4D1DD993E38D4E208F9273A383932F2A&#34;&gt;&lt;p&gt;Video Conversion (Events that occur after video is&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; viewed) by generating a report with visits that include a content type of&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;li_8EE50D18B2AA4162BAED4AAD77B7E3BD&#34;&gt;&lt;p&gt;Next/previous video flow using the video name prop. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;&lt;/section&gt;"/>
            </par>
         </jcr:content>
         <video_reports_overview jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Video Overview Report"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p&gt;The Video Overview Report displays several aggregate measurements to&#xA;&#x9;&#x9;quickly monitor that video is performing as expected. A graph displays video&#xA;&#x9;&#x9;starts next to ad impressions to let you quickly view these metrics for each&#xA;&#x9;&#x9;video. &#xA;&#x9; &lt;/p&gt;&lt;img src=&#34;../../graphics/video-overview-report.png&#34; placement=&#34;break&#34; align=&#34;center&#34; width=&#34;672px&#34; id=&#34;image_4367593408C449869D491917C49E78D0&#34; /&gt;&lt;section id=&#34;section_8DF3E4A6734145B082657C6BECFA0BBE&#34;&gt;&lt;title&gt;Quick Filters&lt;/title&gt;&lt;p&gt;Quickly display video metrics by device or geo country: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;img src=&#34;../../graphics/video-overview-report-filters.png&#34; placement=&#34;break&#34; align=&#34;center&#34; id=&#34;image_CF20B862A82344379534E505DE24F6BA&#34; /&gt;&lt;/section&gt;&lt;section id=&#34;section_288FB476EDA44761BB8A86551F0A110C&#34;&gt;&lt;title&gt;Video Performance&lt;/title&gt;&lt;p&gt;Click-and-drag to zoom in, then hover to view granular metrics for&#xA;&#x9;&#x9;  specific videos. Click &#xA;&#x9;&#x9;  &lt;img src=&#34;../../graphics/video-overview-report-revert.png&#34; placement=&#34;inline&#34; id=&#34;image_DBFA4811BF254DCBBA438273B86B362C&#34; /&gt; to reset the view after&#xA;&#x9;&#x9;  you zoom. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;img src=&#34;../../graphics/video-overview-report-performance.png&#34; placement=&#34;break&#34; align=&#34;center&#34; id=&#34;image_3113F03CE45B4F648EB6C20535AEE7AA&#34; /&gt;&lt;/section&gt;"/>
               </par>
            </jcr:content>
         </video_reports_overview>
         <video_reports_detail jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Video Detail Report"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;img src=&#34;../../graphics/video-detail-report.png&#34; placement=&#34;break&#34; align=&#34;center&#34; width=&#34;672px&#34; id=&#34;image_60250810E1704CA084A38654A794A021&#34; /&gt;"/>
               </par>
            </jcr:content>
         </video_reports_detail>
         <video_reports_daypart jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Video Daypart"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;img src=&#34;../../graphics/video-daypart-report.png&#34; placement=&#34;break&#34; align=&#34;left&#34; width=&#34;672px&#34; id=&#34;image_C1B9B50811594250BD07CBCA5CE385F8&#34; /&gt;"/>
               </par>
            </jcr:content>
         </video_reports_daypart>
      </video_reports>
      <video_config jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Video Configuration"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p id=&#34;context_1A30B54E15FB49A4A72163C962A147A0&#34;&gt;&lt;p&gt; One Custom Insight variable (s.prop) is also used for pathing. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;The variables you select for each metric are added to the video&#xA;&#x9;&#x9;  configuration page. This lets the system automatically generate and format the&#xA;&#x9;&#x9;  standard video reports. The video name evar and the video views counter are&#xA;&#x9;&#x9;  both required. Other variables are optional but recommended for complete&#xA;&#x9;&#x9;  measurement. After video tracking is enabled, you can view reports generated&#xA;&#x9;&#x9;  from video data you have reported using video tracking. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;The required variables are described in detail in &#xA;&#x9;&#x9;  &lt;a href=&#34;../video_config.html#task_7EFCD616A99E4B39B7CF5CE43981C009/example_84C161113FB84DF9BE62CCF98375D506&#34; type=&#34;example&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;You can also track any number of additional metrics for video. For&#xA;&#x9;&#x9;  example, if you use multiple video players on your site, you might populate an&#xA;&#x9;&#x9;  evar with the player name. Some of the variables you select might also be used&#xA;&#x9;&#x9;  in other areas of your site. For example, if used across your site, the content&#xA;&#x9;&#x9;  type variable can let you measure what percentage of your page views are coming&#xA;&#x9;&#x9;  from video and let you relate conversion events to video. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p type=&#34;important&#34;&gt;You must log on to Version 14 of &#xA;&#x9;&#x9;  &lt;a href=&#34;http://sc.omniture.com&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;Reports &amp; Analytics&lt;/a&gt; to configure these settings. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_2533321D23DF4567A174D901CCACFE4A&#34;&gt;&lt;li id=&#34;step_ECC4CF42225F4BB7861E6928784D84E2&#34;&gt;&lt;b&gt;Visit &#xA;&#x9;&#x9;&#x9; &lt;a href=&#34;http://sc.omniture.com&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;Reports &amp; Analytics&lt;/a&gt;, select &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Version 14&lt;/b&gt; from the drop-down, and log on.&#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_205F367239FD4255998F28D47BFFA9BC&#34;&gt;&lt;b&gt; Click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Admin&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Admin Tools&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Report Suites&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_9D7833F2B04E4C469FFAB29D040840D8&#34;&gt;&lt;b&gt;Select a report suite. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_B369CE3DEBFA4890A55F8F09A1F7EBB2&#34;&gt;&lt;b&gt;Click the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Edit Settings&lt;/b&gt; drop-down list, click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Video Management&lt;/b&gt; &gt; then click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Video Reporting&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_6CFA4AF61B7645E088987BC52861993A&#34;&gt;&lt;b&gt;A page displays that contains a training video and information to&#xA;&#x9;&#x9;&#x9; help you configure video tracking. Click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Continue&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_29064FA6F76D4D90B161BA49B1ED927E&#34;&gt;&lt;b&gt;Provide the variables and events you selected to track video.&#xA;&#x9;&#x9;&#x9; Additional milestone events can be added to the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Complementary Variables&lt;/b&gt; section. Any variables&#xA;&#x9;&#x9;&#x9; and events added to this section are categorized as video variables and are&#xA;&#x9;&#x9;&#x9; displayed under the Video reports menu. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;p /&gt;&lt;img src=&#34;../graphics/sitecatalyst-video-configuration.png&#34; id=&#34;image_31DEA94F98BC4C3CB1276B6BFE2F54FD&#34; placement=&#34;break&#34;&gt;&lt;alt&gt;Video Configuration screen &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/alt&gt;&lt;/img&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_84C161113FB84DF9BE62CCF98375D506&#34;&gt;&lt;title&gt;Video Variable Reference&lt;/title&gt;&lt;p&gt;The following table contains additional details on the commerce&#xA;&#x9;&#x9;  variables and custom events for video. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;table id=&#34;table_BB4B4141447545A7B8FC05AC3AA10DD3&#34;&gt;&lt;tgroup cols=&#34;3&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;1.28*&#34; /&gt;&lt;colspec colnum=&#34;3&#34; colname=&#34;col3&#34; colwidth=&#34;2.38*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Video Metric &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Variable Type &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;Variable Type &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Video Name &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;eVar &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Default expiration: Visit &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;(Required) Collects the name of the video, as specified in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the implementation, when a visitor views the video in some way. Marketing&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reports use the Video eVar to generate the data displayed in video detail&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;reports. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;The Video variable must be a fully sub-related eVar. If you&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;do not have a fully-subrelated eVar to use for the Video variable, contact&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Customer Care to have one configured. In version 15 all eVars are fully&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sub-related by default. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Marketing reports allow you to classify on this variable. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Video Name (s.prop for video pathing) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Custom Insight (s.prop) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;(Optional) Provides video pathing information. Pathing must&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;be enabled for this variable by Customer Care. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Event type: Custom Insight (s.prop) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Segments &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;eVar &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Default expiration: Page view &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;(Required) Collects video segment data, including the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;segment name and the order in which the segment occurs in the video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;This variable is populated by enabling the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;segmentByMilestones&lt;/i&gt; variable when tracking&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;player events automatically, or by setting a custom segment name when tracking&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;player events manually. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;For example, when a visitor views the first segment in a&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;video, Analytics might collect the following in the Segments eVar: &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;&lt;pre&gt;1:M:0-25&lt;/pre&gt;&lt;/p&gt;&lt;p&gt;The default video data collection method collects data at&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the following points: video start (play), segment begin, and video end (stop).&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;The system counts the first segment view at the start of the segment, when the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;visitor starts watching. Subsequent segment views as the segment begins. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Content Type &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;eVar &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Default expiration: Page view &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;Collects data about the type of content viewed by a visitor.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Hits sent by video measurement are assigned a content type of &#34;video&#34;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;This variable does not need to be reserved exclusively for&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;video tracking. Having other content report content type using this same&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;variable lets you analyze the distribution of visitors across the different&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;types of content. For example, you could tag other content types using values&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;such as “article” or “product page” using this variable. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;From a video measurement perspective, Content Type lets you&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;identify video visitors and thereby calculate video conversion rates. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Video Time Played &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Event &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Type: Counter &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;Counts the time, in seconds, spent watching a video since&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the last data collection process (image request). &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Video Views &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Event &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Type: Counter &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;Indicates that a visitor has viewed some portion of a video.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;However, it does not provide any information about how much, or what part, of a&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;video the visitor viewed. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Video Completes &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Event &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Type: Counter &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;Indicates that a user has viewed a complete video. By&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;default, the complete event is measured 1 second before the end of the video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;During implementation, you can specify how many seconds from&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the end of the video you would like to consider a view complete. For live video&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and other streams that don't have a defined end, you can specify a custom point&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;to measure completes. For example, after a specific time viewed. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Video Segment Views &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Event &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Type: Counter &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;Indicates that a visitor has viewed some portion of a video&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;segment. However, it does not provide any information about how much, or what&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;part, of a video segment the visitor viewed. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;&lt;/example&gt;"/>
            </par>
         </jcr:content>
      </video_config>
      <video_worksheet jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Video Implementation Worksheet"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p /&gt;&lt;table id=&#34;table_930380A72165401A825F84C309A68976&#34;&gt;&lt;tgroup cols=&#34;2&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;2.07*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Information Required &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Description &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Seconds and Milestones &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Key Milestones to track (as a % of video length):&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; ______________ &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;Number of seconds between measurement calls (increments of 5):&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; _________ &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Video Segments &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Divide each video into segments based on: ______________ &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;Examples: Quarters or halves, pre-roll, main video, post-roll,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; advertisement breaks. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;Video Completes &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Count a view as complete _________ seconds from the end of the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; video (default is 1 second). &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;For live events and other streams, count a view after&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; _________ seconds watched, or by using the following custom calculation: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Video measurement conversion variables and events &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;ul id=&#34;ul_B7643E8CEAE3442ABD39D775A09E1CDA&#34;&gt;&lt;li id=&#34;li_6D5AC3493D5E4CE5AE7A543F0C0D314B&#34;&gt;Video Name (eVar):&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;_______ &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_FCDE2B604D0B4C9CADC63EAA0EEEEA46&#34;&gt;Video Name (Prop):&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;_______ &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_B8319B86E8734F6BAFD1030FB63ECB7C&#34;&gt;Segments (eVar):&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;_______ &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_95D1DE3AB45A4AA4829170965D36E82C&#34;&gt;Content Type&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(eVar): _______ &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_A3EDA5CDF48C4300AD961098DB47920A&#34;&gt;Video Time&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(Event): _______ &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_983373973BA7431297AF7DEF46153B5B&#34;&gt;Video Views&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(Event): _______ &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_6BBD8E106D4F40979FAB42F9893C46BD&#34;&gt;Video Completes&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(Event): _______ &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_75B44CD364A94FDEB874625033C9601E&#34;&gt;Video Segment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Views (Event): _______ &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;AppMeasurement libraries &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;If your developer does not have access to Code Manager, he or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; she can review the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;a href=&#34;../video_developer.html#concept_150EEA9364D24ED08F07D1359E6134C9&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; section and let you know which libraries to download. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;"/>
            </par>
         </jcr:content>
      </video_worksheet>
   </video_analyst>
   <video_developer jcr:primaryType="cq:Page">
      <jcr:content jcr:primaryType="nt:unstructured"
                   jcr:title="Measuring Video for Developers"
                   sling:resourceType="wcm/foundation/components/page">
         <par jcr:primaryType="nt:unstructured"
              sling:resourceType="wcm/foundation/components/parsys">
            <text jcr:primaryType="nt:unstructured"
                  sling:resourceType="wcm/foundation/components/text"
                  textIsRich="true"
                  text="&lt;p&gt;The process you follow to measure video is based on the video player you&#xA;&#x9;&#x9;are using. Before you begin development, review &#xA;&#x9;&#x9;&lt;a href=&#34;video_arch.html#concept_69C0067F59DC4AEC81A3603857B1434C&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;&#xA;&#x9; &lt;/p&gt;&lt;table id=&#34;table_AE6BC7C9178B435ABA90F28E340DDD05&#34;&gt;&lt;tgroup cols=&#34;3&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;3.06*&#34; /&gt;&lt;colspec colnum=&#34;3&#34; colname=&#34;col3&#34; colwidth=&#34;2.03*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Step &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Task &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;Details &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Step 1 &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Receive the Video Implementation Worksheet from the web&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; analytics team. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;&lt;a href=&#34;video_worksheet.html#concept_0A7B2FAC52B04AE6BFD8747B57D56222&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; otherprops=&#34;onpage&#34; /&gt;&lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Step 2 &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Complete the tasks outlined in the section for your player.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; The general process to measure video is as follows: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;ul id=&#34;ul_A6C568F7D7654EA082F4580DBA876367&#34;&gt;&lt;li id=&#34;li_13DC52C904F248E78D7DE7A5FD796C48&#34;&gt;Download and link&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the AppMeasurement library that contains the media module. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_289260E566F64675B760A5DF3A319D1A&#34;&gt;Map the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;variables selected by your web analytics team. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_1D7F2E6D67104608AADC5FE6ED7E84C8&#34;&gt;Configure&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;milestones. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_B79D7716532545DB9F1801E715BD6C96&#34;&gt;Track the events&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;that occur in your player. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Follow the link in the Details column for specific&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; instructions for your player. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;ul id=&#34;ul_F47B64A2139E4F12856A6A45CADC58D3&#34;&gt;&lt;li id=&#34;li_D9AD7421CCA44AD0A133ABFF0B989FFF&#34;&gt;&lt;a href=&#34;video_flash.html#task_2AF250F1F78444A99770F04353F96467&#34; type=&#34;task&#34; format=&#34;dita&#34; scope=&#34;local&#34; otherprops=&#34;onpage&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_8E0DBF6A9DC34EC6AB40507A84EE16E2&#34;&gt;&lt;a href=&#34;video_osmf.html#concept_49720D8D6FB14642961861F47C12A89D&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; otherprops=&#34;onpage&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_DA7F6C64F4BE4B46A0C44269FAD32E3A&#34;&gt;&lt;a href=&#34;video_silverlight.html#concept_98BA5ABFE86A43B3B3DE8361554DDD46&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; otherprops=&#34;onpage&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_348FF0760D314FA69DDD4C7EE4C82EB4&#34;&gt;&lt;a href=&#34;video_other_players.html#concept_3CE6B48FDA4B40B4B6399789C818C10B&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; otherprops=&#34;onpage&#34; /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Step 3 &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Measure additional metrics and review the variable and method&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; reference. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;ul id=&#34;ul_ECB7D0E060034139A7980D4A0BD1C05F&#34;&gt;&lt;li id=&#34;li_96F822E46DF843C7BD6C36E29D287E2D&#34;&gt;&lt;a href=&#34;video_mediamonitor.html#concept_6B10C4127F844D84A1FD0F59D818054F&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; otherprops=&#34;onpage&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_39510641C8A446CA908BE05E62EC30E7&#34;&gt;&lt;a href=&#34;video_ref_variables.html#concept_338A9CA5EC1F4054B9BD07A5FF4F7DAE&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; otherprops=&#34;onpage&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_7D79C9A242954F83A9A88B6011A52C7C&#34;&gt;&lt;a href=&#34;video_ref_methods.html#concept_30874334BCB54B6D8A8D49388D7F06FF&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; otherprops=&#34;onpage&#34; /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;"/>
         </par>
      </jcr:content>
      <video_flash jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Flash Video Playback"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p id=&#34;context_460BE88735BB4FFBA6F1E304E0DE5929&#34;&gt;&lt;p&gt;To display Flash video, FLV files are added to a Flash Professional&#xA;&#x9;&#x9;  project that can be viewed using the Flash Player. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;This section contains instructions to measure video that are displayed&#xA;&#x9;&#x9;  in the Flash Player. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;"/>
            </par>
         </jcr:content>
         <video_flash_download jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Download AppMeasurement for Flash"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_ECD264C5EEE9473B8E674ED6972CD62C&#34;&gt;&lt;p&gt;The AppMeasurement libraries for Flash are available in Code Manager. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_09E7F69DE81D4AA9A92176AD942FD942&#34;&gt;&lt;li id=&#34;step_9760EAA29A674DB4A3551CD8D702A184&#34;&gt;&lt;b&gt;In &#xA;&#x9;&#x9;&#x9; &lt;a href=&#34;https://sc.omniture.com/login/&#34; format=&#34;https&#34; scope=&#34;external&#34;&gt;Marketing Reports &amp; Analytics&lt;/a&gt;, click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Admin Tools&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Code Manager&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_97B3B704C5A04A4388FFD4E2DB5A29D0&#34;&gt;&lt;b&gt;Click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Flash, Flex, &amp; AIR&lt;/b&gt; to download the Flash&#xA;&#x9;&#x9;&#x9; SDK. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_C8AF2635BBD44FDFA3EABDD59719D553&#34;&gt;&lt;b&gt;Extract the zip you downloaded and copy &#xA;&#x9;&#x9;&#x9; &lt;i&gt;AppMeasurement.swc&lt;/i&gt; to a location that is accessible&#xA;&#x9;&#x9;&#x9; to your Flash project. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_736ADEE71F3D4856B30612D36148D33D&#34;&gt;&lt;p&gt;&lt;b&gt;Next step:&lt;/b&gt;&lt;a href=&#34;../../video_flash_config.html#task_1A701C1D041F46228299B24C694B3E23&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/example&gt;"/>
               </par>
            </jcr:content>
         </video_flash_download>
         <video_flash_config jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Add the AppMeasurement for Flash Library to a Project"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;ul id=&#34;steps_4A22529C75514B49AEEB319FFF041F9C&#34;&gt;&lt;li id=&#34;step_95E22D3045C34B68BB8B45B2A0A467CD&#34;&gt;&lt;b&gt;Launch Flash Professional and open the Flash project where you&#xA;&#x9;&#x9;&#x9; want to include a Flash video. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_84A27322F5ED4C17953C60FA98DA868A&#34;&gt;&lt;b&gt;Click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;File&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Publish Settings&lt;/b&gt;, and then open &#xA;&#x9;&#x9;&#x9; &lt;b&gt;ActionScript Settings&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;img src=&#34;../../graphics/video-flash-publish-settings.png&#34; placement=&#34;break&#34; align=&#34;center&#34; width=&#34;500px&#34; id=&#34;image_3D05606D5DC14E9EBE3ADA7238D1BBF8&#34; /&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_9BB939315B7749E8ADE1F370DD0C9AA9&#34;&gt;&lt;b&gt;Add the &#xA;&#x9;&#x9;&#x9; &lt;i&gt;AppMeasurement.swc&lt;/i&gt; library to your project. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;img src=&#34;../../graphics/video-flash-library-path.png&#34; placement=&#34;break&#34; align=&#34;center&#34; id=&#34;image_39F884C0ADA14D6C904796BF366EB35A&#34; /&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_33EC20D69252478C843EA4B3DB1AB06A&#34;&gt;&lt;b&gt;In the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Timeline&lt;/b&gt; pane, select a frame that is&#xA;&#x9;&#x9;&#x9; available to the entire Flash application and open &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Actions&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_0ABCC936FAE64E1099228DABBEA981AB&#34;&gt;&lt;b&gt;To test that the library was added successfully, add the following&#xA;&#x9;&#x9;&#x9; ActionScript code to the Actions: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;import com.omniture.AppMeasurement;&#xA;&#xA;var s:AppMeasurement = new AppMeasurement();&#xA;s.account&lt;/code&gt;&lt;p&gt;As you type &#34;&lt;i&gt;s.account&lt;/i&gt;&#34;, auto complete should&#xA;&#x9;&#x9;&#x9;&#x9;appear. This indicates that the library is being found successfully. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;img src=&#34;../../graphics/video-flash-verify-library.png&#34; placement=&#34;break&#34; align=&#34;center&#34; id=&#34;image_92163C2649914E8C850151348768D22D&#34; /&gt;&lt;p&gt;Take a quick look at the methods and variables in the &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media&lt;/i&gt; namespace, since that is where you'll spend&#xA;&#x9;&#x9;&#x9;&#x9;most of your time as you configure video: &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;img src=&#34;../../graphics/video-flash-verify-library-media.png&#34; placement=&#34;break&#34; align=&#34;center&#34; id=&#34;image_5DF5AA0A799A4388BD9743A4716D536E&#34; /&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_195A4458BAFF4433A29CEBF6B41F9308&#34;&gt;&lt;p&gt;&lt;b&gt;Next step:&lt;/b&gt;&lt;a href=&#34;../../video_flash_config_core.html#task_1D29FC9D72AB4D53A703230FE4D9FEAB&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/example&gt;"/>
               </par>
            </jcr:content>
         </video_flash_config>
         <video_flash_config_core jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Configure AppMeasurement"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_E786A11F732D4716BDE47AD6FE628F3F&#34;&gt;&lt;p&gt;Flash video measurement uses ActionScript, and is configured&#xA;&#x9;&#x9;  identically to the JavaScript implementation on your website. The standard &#xA;&#x9;&#x9;  &lt;a href=&#34;https://marketing.adobe.com/resources/help/en_US/sc/implement/?f=c_sc_variables&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;Analytics Variables&lt;/a&gt; are all available in&#xA;&#x9;&#x9;  Flash. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_F1DDD0C3987C4EC6B4798FBBC4FFDEA1&#34;&gt;&lt;li id=&#34;step_B679F65A1BFD45149D9436768304B35F&#34;&gt;&lt;b&gt;Define an AppMeasurement object and add it as a child: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;import com.omniture.AppMeasurement;&#xA;var s:AppMeasurement = new AppMeasurement();&#xA;addChild(s);&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_2E2E471FAF9F43B783EF4DF0C5FDCD85&#34;&gt;&lt;b&gt;Populate the following required configuration variables: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;ul id=&#34;ul_BF0202BBCE114B4EB8DBE26284A805B6&#34;&gt;&lt;li id=&#34;li_641F047064E04C6A94B09881638A5417&#34;&gt;s.account &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_192E37CEE8604317A3ADDC4B77AA38CF&#34;&gt;s.trackingServer &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;These values can be copied directly from your s_code.js file. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_C6FD5A741A9B41ECBE99B82D98CF6429&#34;&gt;&lt;p&gt;&lt;b&gt;Next step:&lt;/b&gt;&lt;a href=&#34;../../video_flash_mapping.html#task_3D50EAA204F54A1991490FC650B1F300&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/example&gt;"/>
               </par>
            </jcr:content>
         </video_flash_config_core>
         <video_flash_mapping jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Map Analytics Variables and Events"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_B9120B01F0BC41DAB030F3F13812E42E&#34;&gt;&lt;p&gt;If the Web Analytics team filled out the &#xA;&#x9;&#x9;  &lt;a href=&#34;../../video_worksheet.html#concept_0A7B2FAC52B04AE6BFD8747B57D56222&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;,&#xA;&#x9;&#x9;  you might have a list similar to the following: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_B7643E8CEAE3442ABD39D775A09E1CDA&#34;&gt;&lt;li id=&#34;li_6D5AC3493D5E4CE5AE7A543F0C0D314B&#34;&gt;Video Name (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar2&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_FCDE2B604D0B4C9CADC63EAA0EEEEA46&#34;&gt;Video Name (Prop): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;prop2&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_B8319B86E8734F6BAFD1030FB63ECB7C&#34;&gt;Segments (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar3&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_95D1DE3AB45A4AA4829170965D36E82C&#34;&gt;Content Type (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar1&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_A3EDA5CDF48C4300AD961098DB47920A&#34;&gt;Video Time (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event3&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_983373973BA7431297AF7DEF46153B5B&#34;&gt;Video Views (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event1&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_6BBD8E106D4F40979FAB42F9893C46BD&#34;&gt;Video Completes (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event7&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_75B44CD364A94FDEB874625033C9601E&#34;&gt;Video Segment Views&#xA;&#x9;&#x9;&#x9; (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event2&lt;/userinput&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Complete the following to map conversion variables and events: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_C36661FC1A8741268B41EC913059F1A3&#34;&gt;&lt;li id=&#34;step_7D0F94B008704D45ABFD243E0B7E86FF&#34;&gt;&lt;b&gt;Add the &#xA;&#x9;&#x9;&#x9; &lt;i&gt;s.Media.trackUsingContextData&lt;/i&gt; variable and set it to&#xA;&#x9;&#x9;&#x9; true: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackUsingContextData = true;&#xA;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_0824B1E4992A4F04A75840C0A9E9A2E1&#34;&gt;&lt;b&gt;Add the &#xA;&#x9;&#x9;&#x9; &lt;i&gt;s.Media.contextDataMapping&lt;/i&gt; variable and map the&#xA;&#x9;&#x9;&#x9; parameters it contains with the SiteCatalyst variables and events you selected:&#xA;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackUsingContextData = true&#xA;s.Media.contextDataMapping = {&#xA;  &#34;a.media.name&#34;:&#34;eVar2,prop2&#34;,&#xA;  &#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;  &#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;  &#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;  &#34;a.media.view&#34;:&#34;event1&#34;,&#xA;  &#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA;  &#34;a.media.complete&#34;:&#34;event7&#34;&#xA;};&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_3271D9DED33D4BDDB7F89F17E4F00F13&#34;&gt;&lt;p&gt;&lt;b&gt;Next step:&lt;/b&gt;&lt;a href=&#34;../../video_flash_milestones.html#task_8205951B2EF04789AF09C3B5F957C266&#34; type=&#34;task&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/p&gt;&lt;/example&gt;"/>
               </par>
            </jcr:content>
         </video_flash_mapping>
         <video_flash_milestones jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Configure Milestones"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_D3C4CCA5C2AF446CA88F8866D479055A&#34;&gt;&lt;p&gt; If the web analytics team filled out the &#xA;&#x9;&#x9;  &lt;a href=&#34;../../video_worksheet.html#concept_0A7B2FAC52B04AE6BFD8747B57D56222&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;,&#xA;&#x9;&#x9;  you might have a list similar to the following: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;Number of seconds between measurement calls (increments of 5): &#xA;&#x9;&#x9;  &lt;userinput&gt;30&lt;/userinput&gt;&lt;/p&gt;&lt;p&gt;Milestones to track (as a % of video length): &#xA;&#x9;&#x9;  &lt;userinput&gt;25%, 50%, 75%&lt;/userinput&gt;&lt;/p&gt;&lt;p&gt;Divide each video into segments based on: ______________ &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;Review &#xA;&#x9;&#x9;  &lt;a href=&#34;../../video_arch_intervals.html#concept_E09565C188AD44DF9EAC6F64C3433A6A&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&#xA;&#x9;&#x9;  then complete the following to define the collection interval: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_186E4B5CC76D4347B6B01C798823F163&#34;&gt;&lt;li id=&#34;step_823FA71A4C954719BAAAD9A3517ED74C&#34;&gt;&lt;b&gt;(Optional) To track using seconds, add the following: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackSeconds = 30;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_B78B4FAE9BDE41BC9D9D6433D2AA33D2&#34;&gt;&lt;b&gt;(Optional) To track using milestones, add additional milestone&#xA;&#x9;&#x9;&#x9; events to the milestones parameter of your contextDataMapping variable: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackUsingContextData = true&#xA;s.Media.contextDataMapping = {&#xA;  &#34;a.media.name&#34;:&#34;eVar2,prop2&#34;,&#xA;  &#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;  &#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;  &#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;  &#34;a.media.view&#34;:&#34;event1&#34;,&#xA;  &#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA;  &#34;a.media.complete&#34;:&#34;event7&#34;,&#xA;  &#34;a.media.milestones&#34;:{&#xA;     25: &#34;event4&#34;,&#xA;     50: &#34;event5&#34;,&#xA;     75:&#34;event6&#34;&#xA;     }&#xA;};&#xA;s.Media.trackMilestones = &#34;25,50,75&#34;;&lt;/code&gt;&lt;p&gt;This example measures an event for the 25%, 50%, and 75%&#xA;&#x9;&#x9;&#x9;&#x9;milestones. Each milestone you track must also be specified in &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;trackMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;You can also track using offset milestones instead: &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;code&gt;&#34;a.media.milestones&#34;:{&#xA;     30: &#34;event4&#34;, // 30 seconds from start of video &#xA;     60: &#34;event5&#34;, // 60 seconds from start of video&#xA;     120:&#34;event6&#34;  // 120 seconds from start of video&#xA;     }&#xA;};&#xA;s.Media.trackOffsetMilestones = &#34;30,60,120&#34;;&lt;/code&gt;&lt;p&gt;This example measures an event 30, 60, and 120 seconds from the&#xA;&#x9;&#x9;&#x9;&#x9;start of the video. Each offset milestone you track must also be specified in &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;trackOffsetMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_6CDE2EF23C7B4FFDAADD304630DF13EA&#34;&gt;&lt;b&gt;You can use &#xA;&#x9;&#x9;&#x9; &lt;i&gt;segmentByMilestones&lt;/i&gt; to have the media module create&#xA;&#x9;&#x9;&#x9; segments automatically based on your milestones. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;SegmentByMilestones = true;&lt;/code&gt;&lt;p&gt;If you do not enable &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;segmentByMilestones&lt;/i&gt; to define segments, you must&#xA;&#x9;&#x9;&#x9;&#x9;use a manual implementation (not &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;autoTrack&lt;/i&gt;) and send in the segment details with &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.play&lt;/i&gt;. If the web analytics team has defined&#xA;&#x9;&#x9;&#x9;&#x9;segments to track, you can define milestones that correspond to each segment&#xA;&#x9;&#x9;&#x9;&#x9;then enable &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;segmentByMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_C6FD5A741A9B41ECBE99B82D98CF6429&#34;&gt;&lt;p&gt;&lt;b&gt;Next step:&lt;/b&gt;&lt;a href=&#34;../../video_flash_autotrack.html#task_CBF553B502414830BA175DD96A697DF2&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/example&gt;"/>
               </par>
            </jcr:content>
         </video_flash_milestones>
         <video_flash_autotrack jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Track Player Events Using AutoTrack"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_7942D0D81D1F417BB41F6E47E8077496&#34;&gt;&lt;p&gt;This prevents you from needing to manually track these events and call&#xA;&#x9;&#x9;  the open, play, stop, and close methods directly. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;See &#xA;&#x9;&#x9;  &lt;a href=&#34;../../video_ref_faq.html#concept_2209A170CE424C94986E01631BF7FC6A/section_734551C1360F4A53B8E4DA7584196E78&#34; type=&#34;section&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_64A8F0A2AE0644A8A9ACA8C5718408DF&#34;&gt;&lt;li id=&#34;step_0AED1E12F2584BE18CAAF7E089BF4586&#34;&gt;&lt;b&gt;Add the &#xA;&#x9;&#x9;&#x9; &lt;i&gt;s.Media.autoTrack&lt;/i&gt; variable and set it to &#xA;&#x9;&#x9;&#x9; &lt;i&gt;true&lt;/i&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.autoTrack = true;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_C6FD5A741A9B41ECBE99B82D98CF6429&#34;&gt;&lt;p&gt;&lt;b&gt;Next step:&lt;/b&gt;&lt;a href=&#34;../../video_flash_test.html#task_9B7A519F3E2242B2946229B8D08AB02B&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/example&gt;"/>
               </par>
            </jcr:content>
         </video_flash_autotrack>
         <video_flash_test jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Test Your Video Measurement Code"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;ul id=&#34;steps_2ABB7B0080034F9DA5D38F956CA7624B&#34;&gt;&lt;li id=&#34;step_0EADC6EF243E4CBB994F641F9D776DF5&#34;&gt;&lt;b&gt;Verify that AppMeasurement &#xA;&#x9;&#x9;&#x9; &lt;i&gt;debugTracking&lt;/i&gt; is enabled in your ActionScript: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;/* Turn on and configure debugging here */&#xA;s.debugTracking = true;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_C4A5435B6FF7498A87BE052D7DDA4420&#34;&gt;&lt;b&gt;Press &#xA;&#x9;&#x9;&#x9; &lt;b&gt;F2&lt;/b&gt; to display the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Output&lt;/b&gt; pane. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_A31A6067B6BF4E30BCD6F2A5AEF69F08&#34;&gt;&lt;b&gt;Click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;File&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Publish Preview&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Flash.&lt;/b&gt;&lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_7771EC25FF9D492296987250421CA2FC&#34;&gt;&lt;b&gt;Each server call appears in the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;AppMeasurement Debug&lt;/b&gt; output similar to the&#xA;&#x9;&#x9;&#x9; following: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;AppMeasurement Debug: http://democorp.112.2o7.net/b/ss/democorpscdoc/&#xA;0/FAS-3.4.3-AS3/s03319123252294?AQB=1&amp;ndh=1&amp;t=28/6/2011%2013%3A33%3A2%204%20360&#xA;&amp;ce=UTF-8&amp;pageName=video%20test&amp;g=file%3A///F%7C/sandbox/Video/video%2520test.swf&#xA;&amp;cc=USD&amp;events=event1%2C%2C&amp;v1=video&amp;c2=Clip14-tahoe.f4v&amp;v2=Clip14-tahoe.f4v&#xA;&amp;pe=m_s&amp;pev3=video&amp;s=1680x1050&amp;AQE=1&#xA;&#x9;http://democorp.112.2o7.net/b/ss/democorpscdoc/0/FAS-3.4.3-AS3/s03319123252294?AQB=1&#xA;&#x9;ndh=1&#xA;&#x9;t=28/6/2011 13:33:2 4 360&#xA;&#x9;ce=UTF-8&#xA;&#x9;pageName=video test&#xA;&#x9;g=file:///F|/sandbox/Video/video%20test.swf&#xA;&#x9;cc=USD&#xA;&#x9;events=event1,,&#xA;&#x9;v1=video&#xA;&#x9;c2=Clip14.f4v&#xA;&#x9;v2=Clip14.f4v&#xA;&#x9;pe=m_s&#xA;&#x9;pev3=video&#xA;&#x9;s=1680x1050&#xA;&#x9;AQE=1&lt;/code&gt;&lt;p&gt;This example server call is from a video start. In the previous&#xA;&#x9;&#x9;&#x9;&#x9;example, event1 is selected to track video views. If you are tracking&#xA;&#x9;&#x9;&#x9;&#x9;milestones, play through your video and watch for a hit that contains the event&#xA;&#x9;&#x9;&#x9;&#x9;you selected for that milestone. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;code&gt;events=event3=8,event6&lt;/code&gt;&lt;p&gt;In the previous example, &#xA;&#x9;&#x9;&#x9;&#x9;&lt;userinput&gt;event3&lt;/userinput&gt; is selected to track time viewed, and&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&lt;userinput&gt;event6&lt;/userinput&gt; is selected for the milestone. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_8D9284202D19482EA055E70806BAD259&#34;&gt;&lt;p&gt;If you can't get your project to work, you can create a simple video&#xA;&#x9;&#x9;  test project:&#xA;&#x9;&#x9;&lt;/p&gt;&lt;ol id=&#34;ol_69C775DFFCB147B2BE9FB26E6E46765B&#34;&gt;&lt;li id=&#34;li_B5815D15B35340038FF65E8711F609CC&#34;&gt;Create a new &#xA;&#x9;&#x9;&#x9; &lt;b&gt;ActionScript 3.0&lt;/b&gt; project and then &#xA;&#x9;&#x9;&#x9; &lt;a href=&#34;../../video_flash_config.html#task_1A701C1D041F46228299B24C694B3E23&#34; format=&#34;dita&#34; scope=&#34;local&#34;&gt;Add the AppMeasurement for Flash Library&lt;/a&gt;.&#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_804686395A0A4985A193E51829D5A470&#34;&gt;Drag and drop a local&#xA;&#x9;&#x9;&#x9; video file on your project. Click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Next&lt;/b&gt;, &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Next&lt;/b&gt;, then &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Finish&lt;/b&gt; to add the video using the default&#xA;&#x9;&#x9;&#x9; options.&#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_656C5A7911FB4750BBC700D0BD5D5D37&#34;&gt;Press F9 to open &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Actions&lt;/b&gt;, and then paste the &#xA;&#x9;&#x9;&#x9; &lt;a href=&#34;../../video_flash_sample.html#concept_BBDB825EB2D6400C8900F03DCEEAA544&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&#xA;&#x9;&#x9;&#x9; into the actions window.&#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_4F86B9732122426182A280F58F09DA71&#34;&gt;Click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Debug&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Debug Movie&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Debug&lt;/b&gt; to run the project. AppMeasurement debug&#xA;&#x9;&#x9;&#x9; call appear in the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Output&lt;/b&gt; window (press &#xA;&#x9;&#x9;&#x9; &lt;b&gt;F2&lt;/b&gt; if you can't see it). Note that this data&#xA;&#x9;&#x9;&#x9; does not go to any report suite.&#xA;&#x9;&#x9;  &lt;/li&gt;&lt;/ol&gt;&lt;/example&gt;"/>
               </par>
            </jcr:content>
         </video_flash_test>
         <video_flash_sample jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="ActionScript Sample Code"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p type=&#34;important&#34;&gt;Change &#xA;&#x9;&#x9;&lt;i&gt;s.account&lt;/i&gt;, &#xA;&#x9;&#x9;&lt;i&gt;s.trackingServer&lt;/i&gt;, and the variables in &#xA;&#x9;&#x9;&lt;i&gt;s.Media.contextDataMapping&lt;/i&gt; before you use this code. &#xA;&#x9; &lt;/p&gt;&lt;code outputclass=&#34;syntax javascript&#34;&gt;/* Import line for ActionScript 3 */&#xA;import com.omniture.AppMeasurement;&#xA;&#xA;var s:AppMeasurement = new AppMeasurement();&#xA;addChild(s);&#xA;&#xA;/* Specify the Report Suite ID(s) to track here */&#xA;s.account = &#34;myrsid&#34;; // CHANGE THIS!&#xA;&#xA;/* Turn on and configure debugging here - turn this off for production deployment */&#xA;s.debugTracking = true;&#xA;s.trackLocal = true;&#xA;&#xA;/* You may add or alter any code config here */&#xA;s.pageName = &#34;&#34;;&#xA;s.pageURL = &#34;&#34;;&#xA;s.charSet = &#34;UTF-8&#34;;&#xA;s.currencyCode = &#34;USD&#34;;&#xA;&#xA;/* Turn on and configure ClickMap tracking here */&#xA;s.trackClickMap = false;&#xA;&#xA;/* WARNING: Changing any of the below variables will cause drastic changes&#xA;to how your visitor data is collected.  Changes should only be made&#xA;when instructed to do so by your account manager.*/&#xA;&#xA;/* These values can be copied from your s_code.js file. Your trackign server varies based on&#xA;1st or 3rd party cookies, and if you are using SSL. If using first party cookies, &#xA;trackingServer will be on your domain, for example metrics.mysite.com */&#xA;&#xA;s.visitorNamespace = &#34;yourNamespace&#34;;&#xA;s.trackingServer=&#34;mycompany.112.2o7.net&#34;; // CHANGE THIS!&#xA;s.trackingServerSecure=&#34;&#34;; //might not be needed&#xA;&#xA;/* Configure Media Module Functions */&#xA;&#xA;// events, and every variable you track in video, including Media.monitor, should be in this list.&#xA;s.Media.trackVars=&#34;events,eVar45,eVar46,eVar47&#34;; // CHANGE THESE!&#xA;&#xA;// every event you track in video, including Media.monitor, should be in this list&#xA;s.Media.trackEvents=&#34;event45,event46,event47,event48&#34;; // CHANGE THESE!&#xA;s.Media.autoTrack=true;&#xA;s.Media.trackMilestones=&#34;25,50,75&#34;;&#xA;s.Media.playerName=&#34;Video Test 1&#34;;&#xA;s.Media.trackUsingContextData=true;&#xA;s.Media.segmentByMilestones=true;&#xA;s.Media.contextDataMapping= { // CHANGE THESE!&#xA;  &#34;a.media.name&#34;:&#34;eVar45&#34;,&#xA;  &#34;a.media.segment&#34;:&#34;eVar46&#34;,&#xA;  &#34;a.contentType&#34;:&#34;eVar47&#34;,&#xA;  &#34;a.media.timePlayed&#34;:&#34;event45&#34;,&#xA;  &#34;a.media.view&#34;:&#34;event46&#34;,&#xA;  &#34;a.media.segmentView&#34;:&#34;event48&#34;,&#xA;  &#34;a.media.complete&#34;:&#34;event49&#34;,&#xA;  &#34;a.media.milestones&#34;:{&#xA;    25:&#34;event50&#34;,&#xA;    50:&#34;event51&#34;,&#xA;    75:&#34;event52&#34;&#xA;}&#xA;};&#xA;&#xA;s.Media.monitor = function (s,media){&#xA;&#xA;  if(media.event==&#34;OPEN&#34;) {&#xA;    trace(&#34;Media Open: &#34; + media.name);&#xA;&#xA;  /* the following code is an example of tracking an eVar on media open&#xA;  you can do something similar for any Media.monitor event&#xA;  don't forget to add any eVars and events used in Media.monitor to&#xA;  Media.trackVars and Media.trackEvents */&#xA;&#xA;  // s.eVar48=s.Media.playerName;&#xA;  // s.Media.track(media.name);&#xA;  }&#xA;  if (media.event == &#34;MILESTONE&#34;) {&#xA;    trace(&#34;Media Milestone Reached: &#34; + media.milestone );&#xA;  }                &#xA;  if(media.event==&#34;CLOSE&#34;) {&#xA;    trace(&#34;Media Close: &#34; + media.name);&#xA;  }&#xA;}&lt;/code&gt;"/>
               </par>
            </jcr:content>
         </video_flash_sample>
      </video_flash>
      <video_osmf jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Open Source Media Framework (OSMF)"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p&gt; This plug-in provides an instance of AppMeasurement auto-track support&#xA;&#x9;&#x9;for OSMF players, and adds a reference plug-in to OSMF players that captures&#xA;&#x9;&#x9;media data and events. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;First, &#xA;&#x9;&#x9;&lt;a href=&#34;../video_osmf_download.html#task_C318D1EDA2824C1BA2C1A325F359F85F&#34; type=&#34;task&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;You can add video measurement for OSMF using one of the following methods: &#xA;&#x9; &lt;/p&gt;&lt;table id=&#34;table_2F574F59F15146C096C3BF51F826643C&#34;&gt;&lt;tgroup cols=&#34;3&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;1.70*&#34; /&gt;&lt;colspec colnum=&#34;3&#34; colname=&#34;col3&#34; colwidth=&#34;1.35*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;Implementation Method &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Description &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;Guide &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;Dynamic Plug-in &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;The dynamic implementation links the plug-in&#xA;&#x9;&#x9;&#x9;&#x9;  into your Flash project at run-time. A dynamic implementation lets you manage&#xA;&#x9;&#x9;&#x9;&#x9;  the OSMF player separately from AppMeasurement tracking code using an XML&#xA;&#x9;&#x9;&#x9;&#x9;  configuration file. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;a href=&#34;../video_osmf_dynamic.html#concept_20417E8BA5FE45D0A2DA8A271669E559&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;Custom Dynamic Plug-in &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;This lets you extend the dynamic plug-in if&#xA;&#x9;&#x9;&#x9;&#x9;  you need to send additional metrics using Media.Monitor. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;a href=&#34;../video_osmf_dynamic_custom.html#concept_B00E2B15A2EF4F46A89FA887929FFCFD&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;Static &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;The static implementation links&#xA;&#x9;&#x9;&#x9;&#x9;  AppMeasurement_Media_AutoTrackOSMF.swc into your Flash project. You can then&#xA;&#x9;&#x9;&#x9;&#x9;  configure video measurement using the library directly. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;a href=&#34;../video_osmf_static.html#concept_982C32CC35CE44F8A3543DF9AD741C83&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;"/>
            </par>
         </jcr:content>
         <video_osmf_download jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Download the Media Module for OSMF"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;ul id=&#34;steps_1528918718C0443584BEB91C278945C4&#34;&gt;&lt;li id=&#34;step_9305D2FD0EB8473FAC3AC5DB95D1CC10&#34;&gt;&lt;b&gt;In the Adobe Marketing Cloud, click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Admin&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Admin Console&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Code Manager&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_31979842DA8746DBA45B948024052FCF&#34;&gt;&lt;b&gt;In the Select the type of code to generate field, select &#xA;&#x9;&#x9;&#x9; &lt;b&gt;ActionScript (Flash/Flex)&lt;/b&gt;, provide the&#xA;&#x9;&#x9;&#x9; requested information, and then click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Generate Code&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_4DD256F9FCC4466698E946A3DB4AA99F&#34;&gt;&lt;b&gt;Select the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Component Files&lt;/b&gt; Tab, then save the necessary&#xA;&#x9;&#x9;&#x9; AppMeasurement component files to your local system: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;choicetable id=&#34;choicetable_FB3C4A5BE2E0405AABAD963D4A2F3B31&#34;&gt;&lt;chhead&gt;&lt;choptionhd&gt;Option&lt;/choptionhd&gt;&lt;chdeschd&gt;Description&lt;/chdeschd&gt;&lt;/chhead&gt;&lt;chrow&gt;&lt;choption&gt;Dynamic Implementation&lt;/choption&gt;&lt;chdesc&gt;&lt;ul id=&#34;ul_168F709F3EA040A4A158042648562ADE&#34;&gt;&lt;li id=&#34;li_196391A59A3343A4BD4E74C51EB4207F&#34;&gt;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AppMeasurementExtensionOSMF.swf &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;/ul&gt;&lt;/chdesc&gt;&lt;/chrow&gt;&lt;chrow&gt;&lt;choption&gt;Custom Dynamic Implementation&lt;/choption&gt;&lt;chdesc&gt;&lt;ul id=&#34;ul_E3802EB82FF74F95A272168A6BF8DB5B&#34;&gt;&lt;li id=&#34;li_C393DDB9ACC9469FB2FF59E1895F25AC&#34;&gt;AppMeasurementExtensionOSMF.swc &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;/ul&gt;&lt;/chdesc&gt;&lt;/chrow&gt;&lt;chrow&gt;&lt;choption&gt;Static Implementation&lt;/choption&gt;&lt;chdesc&gt;&lt;ul id=&#34;ul_D06E3DAC32154B2986DA841D4B0762DC&#34;&gt;&lt;li id=&#34;li_20A5C1D4DE7F4108A77175829DD82886&#34;&gt;AppMeasurement_Media_AutoTrackOSMF.swc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_109CF8A3358E404EAA3E2E258EA6FE8F&#34;&gt;AppMeasurement.swc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;/ul&gt;&lt;/chdesc&gt;&lt;/chrow&gt;&lt;/choicetable&gt;&lt;/li&gt;&lt;/ul&gt;"/>
               </par>
            </jcr:content>
         </video_osmf_download>
         <video_osmf_dynamic jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Dynamic Implementation"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p&gt; A dynamic implementation lets you manage the OSMF player separately&#xA;&#x9;&#x9;from AppMeasurement tracking code, including the AppMeasurement plug-in for&#xA;&#x9;&#x9;OSMF. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;To do this, load &#xA;&#x9;&#x9;&lt;i&gt;AppMeasurementExtensionOSMF.swf&lt;/i&gt; and specify a&#xA;&#x9;&#x9;configuration URL that points to an XML config file in the URL query-string.&#xA;&#x9;&#x9;The config file contains all the media tracking settings to be used by your&#xA;&#x9;&#x9;OSMF player. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;For example, given an OSMF player with a &#xA;&#x9;&#x9;&lt;i&gt;MediaFactory&lt;/i&gt;, the dynamic implementation code might look&#xA;&#x9;&#x9;like the following: &#xA;&#x9; &lt;/p&gt;&lt;code&gt;mediaFactory.loadPlugin(new URLResource(&#34;http://www.corp1.com/AppMeasurementExtensionOSMF.swf?s.configURL=http%3A%2F%2Fwww.corp1.com%2Fasconfig.xml&#34;));&lt;/code&gt;&lt;p&gt;This code tells MediaFactory to load the SWF. The SWF then loads the&#xA;&#x9;&#x9;config file, which populates the AppMeasurement instance inside the SWF. This&#xA;&#x9;&#x9;effectively performs the same integration process described in the static&#xA;&#x9;&#x9;implementation (adding the AppMeasurement OSMF bridge and creating the&#xA;&#x9;&#x9;reference plug-in). The &#xA;&#x9;&#x9;&lt;i&gt;s.configURL&lt;/i&gt; parameter name in the query string is&#xA;&#x9;&#x9;case-sensitive. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;See the following section for details on the XML configuration file. &#xA;&#x9; &lt;/p&gt;&lt;section id=&#34;section_EFA781861B5845738A10E4CCC992A2DE&#34;&gt;&lt;title&gt;XML Configuration File&lt;/title&gt;&lt;p&gt;When using a dynamic OSMF implementation, you can use an XML config&#xA;&#x9;&#x9;  file to bind variables to OSMF metadata. AppMeasurement uses the following&#xA;&#x9;&#x9;  variable binding syntax: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;&lt;variable&gt;{media.player.metadata(namespace,key)}&lt;/variable&gt;&lt;/code&gt;&lt;p&gt;&lt;b&gt;variable&lt;/b&gt;: The name of the variable you wish to set (for&#xA;&#x9;&#x9;  example, eVar6). &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;&lt;b&gt;namespace&lt;/b&gt;: (Optional) The OSMF metadata namespace you want to&#xA;&#x9;&#x9;  use. If you do not specify a namespace, the AppMeasurement OSMF plug-in uses&#xA;&#x9;&#x9;  the first matching key it locates in any namespace. When looking for keys, the&#xA;&#x9;&#x9;  plug-in looks first at MediaElement metadata, then at MediaResource metadata. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;&lt;b&gt;key&lt;/b&gt;: The specific metadata value you want to use. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;The following section contains a sample XML configuration file. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_42BDF9DAA142493789960FACDB075C6F&#34;&gt;&lt;li id=&#34;li_3D18AD2B69054C9681DC16CA4B4F92AF&#34;&gt;The &#xA;&#x9;&#x9;&#x9; &lt;i&gt;trackSeconds&lt;/i&gt; and &#xA;&#x9;&#x9;&#x9; &lt;i&gt;milestone&lt;/i&gt; sections are optional. See &#xA;&#x9;&#x9;&#x9; &lt;a href=&#34;../../video_arch_intervals.html#concept_E09565C188AD44DF9EAC6F64C3433A6A&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;/ul&gt;&lt;p&gt; If the Web Analytics team filled out the &#xA;&#x9;&#x9;  &lt;a href=&#34;../../video_worksheet.html#concept_0A7B2FAC52B04AE6BFD8747B57D56222&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;,&#xA;&#x9;&#x9;  you might have a list similar to the following: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_B7643E8CEAE3442ABD39D775A09E1CDA&#34;&gt;&lt;li id=&#34;li_6D5AC3493D5E4CE5AE7A543F0C0D314B&#34;&gt;Video Name (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar2&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_FCDE2B604D0B4C9CADC63EAA0EEEEA46&#34;&gt;Video Name (Prop): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;prop2&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_B8319B86E8734F6BAFD1030FB63ECB7C&#34;&gt;Segments (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar3&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_95D1DE3AB45A4AA4829170965D36E82C&#34;&gt;Content Type (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar1&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_A3EDA5CDF48C4300AD961098DB47920A&#34;&gt;Video Time (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event3&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_983373973BA7431297AF7DEF46153B5B&#34;&gt;Video Views (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event1&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_6BBD8E106D4F40979FAB42F9893C46BD&#34;&gt;Video Completes (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event7&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_75B44CD364A94FDEB874625033C9601E&#34;&gt;Video Segment Views&#xA;&#x9;&#x9;&#x9; (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event2&lt;/userinput&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Map these variables to the appropriate &#xA;&#x9;&#x9;  &lt;i&gt;a.media&lt;/i&gt; variable in the &#xA;&#x9;&#x9;  &lt;i&gt;contextDataMapping&lt;/i&gt; section. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;&lt;config&gt;&#xA;&lt;account&gt;myrsid&lt;/account&gt;&#xA;&lt;debugTracking&gt;true&lt;/debugTracking&gt;&#xA;&lt;visitorNamespace&gt;corp1&lt;/visitorNamespace&gt;&#xA;&lt;trackingServer&gt;corp1.d1.sc.omtrdc.net&lt;/trackingServer&gt;&#xA;&lt;Media&gt;&#xA;    &lt;autoTrack&gt;true&lt;/autoTrack&gt;&#xA;    &lt;trackMilestones&gt;25,50,75&lt;/trackMilestones&gt;&#xA;    &lt;trackVars&gt;events,eVar1,eVar2,eVar3,prop2&lt;/trackVars&gt;&#xA;    &lt;trackEvents&gt;event1,event2,event3,event4,event5,event6,event7&lt;/trackEvents&gt;&#xA;    &lt;segmentByMilestones&gt;true&lt;/segmentByMilestones&gt;&#xA;    &lt;trackUsingContextData&gt;true&lt;/trackUsingContextData&gt;&#xA;    &lt;contextDataMapping&gt;&#xA;            &lt;a.media.name&gt;eVar2,prop2&lt;/a.media.name&gt;&#xA;            &lt;a.media.segment&gt;eVar3&lt;/a.media.segment&gt;&#xA;            &lt;a.contentType&gt;eVar1&lt;/a.contentType&gt;&#xA;            &lt;a.media.timePlayed&gt;event3&lt;/a.media.timePlayed&gt;&#xA;            &lt;a.media.view&gt;event1&lt;/a.media.view&gt;&#xA;            &lt;a.media.segmentView&gt;event2&lt;/a.media.segmentView&gt;&#xA;            &lt;a.media.complete&gt;event7&lt;/a.media.complete&gt;&#xA;            &lt;a.media.milestones&gt;&#xA;                &lt;item name=&#34;25&#34;&gt;event4&lt;/item&gt;&#xA;                &lt;item name=&#34;50&#34;&gt;event5&lt;/item&gt;&#xA;                &lt;item name=&#34;75&#34;&gt;event6&lt;/item&gt;&#xA;            &lt;/a.media.milestones&gt;&#xA;    &lt;/contextDataMapping&gt;&#xA;&lt;/Media&gt;&#xA;&lt;/config&gt;&lt;/code&gt;&lt;/section&gt;"/>
               </par>
            </jcr:content>
            <video_osmf_troubleshooting jcr:primaryType="cq:Page">
               <jcr:content jcr:primaryType="nt:unstructured"
                            jcr:title="Troubleshooting a Dynamic OSMF Implementation"
                            sling:resourceType="wcm/foundation/components/page">
                  <par jcr:primaryType="nt:unstructured"
                       sling:resourceType="wcm/foundation/components/parsys">
                     <text jcr:primaryType="nt:unstructured"
                           sling:resourceType="wcm/foundation/components/text"
                           textIsRich="true"
                           text="&lt;ul id=&#34;ul_6047D55D46AA4DEAA2DB88F8A8487043&#34;&gt;&lt;li id=&#34;li_92CBF50FC3B944DD93B97DAEF22E31EB&#34;&gt;When using a dynamic&#xA;&#x9;&#x9;  implementation, you cannot load the plug-in from a local drive. You must load&#xA;&#x9;&#x9;  it from a Web server to avoid Flash security errors. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_A3315ACD7D7E41429E732C26DEAF481F&#34;&gt;When testing the dynamic&#xA;&#x9;&#x9;  implementation, listen for the pluginLoadError event in MediaFactory. This&#xA;&#x9;&#x9;  event captures any load errors related to the plug-in. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Be aware of the following issues when using the configURL parameter: &#xA;&#x9; &lt;/p&gt;&lt;ul id=&#34;ul_55C627BB9DF944C0A2C5C7F6DADE0218&#34;&gt;&lt;li id=&#34;li_DCAFEE1A6C5A4CFDB9CBD8CE84989997&#34;&gt;XML tags are case sensitive.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_5ACFF86BCC2548AEB7D23BAE4BF83C51&#34;&gt;Do not enclose strings in&#xA;&#x9;&#x9;  quotes. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_9F951B1459D642248F6E935D7270E47D&#34;&gt;Booleans can be set to true&#xA;&#x9;&#x9;  or false. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_64B67BDF04A44EA993A0E5D76F688F1A&#34;&gt;Use entities for special&#xA;&#x9;&#x9;  characters. For example: &amp;lt; for &#34;&lt;&#34;, &amp;gt; for &#34;&gt;&#34;, and&#xA;&#x9;&#x9;  &amp;amp; for &#34;&amp;&#34;. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_A1F77B32E66F42808AA61C64A05CB40A&#34;&gt;Before using configURL, you&#xA;&#x9;&#x9;  might need to configure Flash security to suport using a configuration file&#xA;&#x9;&#x9;  from an external domain. For more information about Flash security, search for&#xA;&#x9;&#x9;  crossdomain at &#xA;&#x9;&#x9;  &lt;a href=&#34;http://www.adobe.com/support/flashplayer/&#34; scope=&#34;external&#34; format=&#34;html&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/li&gt;&lt;/ul&gt;"/>
                  </par>
               </jcr:content>
            </video_osmf_troubleshooting>
         </video_osmf_dynamic>
         <video_osmf_dynamic_custom jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Custom Dynamic Implementation"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p&gt;Along with the prebuilt &#xA;&#x9;&#x9;&lt;i&gt;AppMeasurementExtensionOSMF.swf&lt;/i&gt;, you can also&#xA;&#x9;&#x9;download &#xA;&#x9;&#x9;&lt;i&gt;AppMeasurementExtensionOSMF.swc&lt;/i&gt;, which is a Flash&#xA;&#x9;&#x9;library that provides an AppMeasurementExtension class for subclassing to build&#xA;&#x9;&#x9;a custom dynamic plug-in. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;The custom dynamic plug-in should do the following. Once compiled, you&#xA;&#x9;&#x9;can use it like the pre-built dynamic plug-in. &#xA;&#x9; &lt;/p&gt;&lt;ol id=&#34;ol_25446111065445D3967792F2EF6D4EC5&#34;&gt;&lt;li id=&#34;li_8683BB39B9C04AB58DEE57D85224E1F8&#34;&gt;Import&#xA;&#x9;&#x9;  com.omniture.AppMeasurementExtension. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_F42F58E963EE42CD85B92652CED285C7&#34;&gt;Define a class that will be&#xA;&#x9;&#x9;  the SWF that extends AppMeasurementExtension. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_2DDE27A3F0574B1DAF9FD9522893B4E0&#34;&gt;Override the public function&#xA;&#x9;&#x9;  customizeExtension():void method. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_3324858091EF46469D603F3927EE94F8&#34;&gt;Inside of your&#xA;&#x9;&#x9;  customizeExtension method, update the “s” member as needed. The “s” member is&#xA;&#x9;&#x9;  the instance of AppMeasurement inside of the AppMeasurementExtension. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_D1E0B7AC14C14E808A02C6D1BF63CB9B&#34;&gt;Compile your custom SWF&#xA;&#x9;&#x9;  linking against AppMeasurementExtensionOSMF.swc. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For example, the following ActionScript code for a custom dynamic&#xA;&#x9;&#x9;plug-in does the following: &#xA;&#x9; &lt;/p&gt;&lt;ol id=&#34;ol_7ECD8365614745E990C40CF85489AEE0&#34;&gt;&lt;li id=&#34;li_8770B4BE80D8470797F836FAFB17F192&#34;&gt;Overrides the video name&#xA;&#x9;&#x9;  tracked with the episodeID from the OSMF metadata. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_1E9DFF55D76F467D9023D2B18F1B29FF&#34;&gt;In the Media.monitor method,&#xA;&#x9;&#x9;  sets eVar1 to the “series” key, eVar2 to the “season” key, and eVar3 to the&#xA;&#x9;&#x9;  “episode” key in the http://www.corp1.com/ namespace. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_284F388B2CAE4C6EA427F6C12C73BD4D&#34;&gt;In the Media.monitor method,&#xA;&#x9;&#x9;  sends in custom events “event1” as video starts and “event2” as video stops. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;/ol&gt;&lt;code&gt;package {&#xA;    import com.omniture.AppMeasurementExtension;&#xA;    public class CustomPlugin extends AppMeasurementExtension {&#xA;        public function customizeExtension():void {&#xA;            super();&#xA;            s.Media.autoTrackMediaName = &#34;{media.player.metadata(http://www.corp1.com/&#xA;                ,episodeID)&#34;&#xA;            s.Media.monitor = function (s:Object,media:Object) {&#xA;                s.trackVars = &#34;events,eVar1,eVar2,eVar3&#34;;&#xA;                s.trackEvents = &#34;event1,event2&#34;;&#xA;                s.eVar1 = media.player.metadata(&#34;http://www.corp1.com/&#34;,&#34;series&#34;);&#xA;                s.eVar2 = media.player.metadata(&#34;http://www.corp1.com/&#34;,&#34;season&#34;);&#xA;                s.eVar3 = media.player.metadata(&#34;http://www.corp1.com/&#34;,&#34;episode&#34;);&#xA;                if (media.mediaEvent == &#34;OPEN&#34;) {&#xA;                    s.events = &#34;event1&#34;;&#xA;                    s.Media.track(media.name);&#xA;                } else if (media.mediaEvent == &#34;CLOSE&#34;) {&#xA;                    s.events = &#34;event2&#34;;&#xA;                    s.Media.track(media.name);&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&lt;/code&gt;"/>
               </par>
            </jcr:content>
            <video_osmf_metadata jcr:primaryType="cq:Page">
               <jcr:content jcr:primaryType="nt:unstructured"
                            jcr:title="OSMF Metadata"
                            sling:resourceType="wcm/foundation/components/page">
                  <par jcr:primaryType="nt:unstructured"
                       sling:resourceType="wcm/foundation/components/parsys">
                     <text jcr:primaryType="nt:unstructured"
                           sling:resourceType="wcm/foundation/components/text"
                           textIsRich="true"
                           text="&lt;p&gt;To use OSMF metadata inside of your Media.monitor method, call&#xA;&#x9;&#x9;media.player.metadata(namespace,key), where: &#xA;&#x9; &lt;/p&gt;&lt;p&gt;&lt;b&gt;namespace&lt;/b&gt;: (Optional) The OSMF metadata namespace you want to&#xA;&#x9;&#x9;use. If you do not specify a namespace, the AppMeasurement OSMF plug-in uses&#xA;&#x9;&#x9;the first matching key it locates in any namespace. When looking for keys, the&#xA;&#x9;&#x9;plug-in looks first at MediaElement metadata, then at MediaResource metadata. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;&lt;b&gt;key&lt;/b&gt;: The specific metadata value you want to use. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;For example, the following custom Media.monitor method sets eVar1 to the&#xA;&#x9;&#x9;“series” key, eVar2 to the “season” key, and eVar3 to the “episode” key in the&#xA;&#x9;&#x9;http://www.corp1.com/ namespace: &#xA;&#x9; &lt;/p&gt;&lt;code&gt;s.Media.monitor = function (s:Object,media:Object) {&#xA;    s.trackVars = &#34;events,eVar1,eVar2,eVar3&#34;;&#xA;    s.trackEvents = &#34;event1,event2&#34;;&#xA;    s.eVar1 = media.player.metadata(&#34;http://www.corp1.com/&#34;,&#34;series&#34;);&#xA;    s.eVar2 = media.player.metadata(&#34;http://www.corp1.com/&#34;,&#34;season&#34;);&#xA;    s.eVar3 = media.player.metadata(&#34;http://www.corp1.com/&#34;,&#34;episode&#34;);&#xA;    if (media.mediaEvent == &#34;OPEN&#34;) {&#xA;        s.events = &#34;event1&#34;;&#xA;        s.Media.track(media.name);&#xA;    } else if (media.mediaEvent == &#34;CLOSE&#34;) {&#xA;        s.events = &#34;event2&#34;;&#xA;        s.Media.track(media.name);&#xA;    }&#xA;}&lt;/code&gt;"/>
                  </par>
               </jcr:content>
            </video_osmf_metadata>
         </video_osmf_dynamic_custom>
         <video_osmf_static jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Static Implementation"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p&gt; AppMeasurement_Media_AutoTrackOSMF.swc includes the bridge class&#xA;&#x9;&#x9;AutoTrackOSMF. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;For example, once you have linked both AppMeasurement and the&#xA;&#x9;&#x9;AppMeasurement plug-in for OSMF into the Flash project that includes an OSMF&#xA;&#x9;&#x9;player with a MediaFactory, the tracking code implementation might look like&#xA;&#x9;&#x9;the following: &#xA;&#x9; &lt;/p&gt;&lt;code&gt;import com.omniture.AppMeasurement; //1&#xA;import com.omniture.media.AutoTrackOSMF; //2&#xA;&#xA;var s:AppMeasurement = new AppMeasurement();&#xA;s.debugTracking = true;&#xA;s.trackLocal = true;&#xA;s.account = &#34;jdoe&#34;;&#xA;s.visitorNamespace = “corp1”;&#xA;s.trackingServer = &#34;corp1.d1.sc.omtrdc.net&#34;;&#xA;s.pageName = &#34;OSMF Player&#34;;&#xA;&#xA;s.Media.trackSeconds = 15;&#xA;s.Media.addAutoTrackHandler(new AutoTrackOSMF()); //3&#xA;s.Media.autoTrack = true;&#xA;&#xA;mediaFactory.loadPlugin(s.Media.AutoTrackOSMF.pluginResource); //4&lt;/code&gt;&lt;p&gt;The highlighted code performs the linking of AppMeasurement to the OSMF&#xA;&#x9;&#x9;player, including: &#xA;&#x9; &lt;/p&gt;&lt;ol id=&#34;ol_976B6F6AD9554A04BD5C7CBA9013FDCC&#34;&gt;&lt;li id=&#34;li_F3081B67D7404118A49F3FD02042A44A&#34;&gt;Import the AppMeasurement&#xA;&#x9;&#x9;  class &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_DABF3E89A74C4CDEB02DE776D38AF4DC&#34;&gt;Import the AppMeasurement&#xA;&#x9;&#x9;  plug-in for OSMF class &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_59F34F1D65AE4BF5B78B08F62BD86B0D&#34;&gt;Add the auto-track support&#xA;&#x9;&#x9;  for OSMF to an instance of AppMeasurement &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_60DFEA5B4EE34AC59BF44D36EE0067DB&#34;&gt;Loading the reference&#xA;&#x9;&#x9;  plug-in into the OSMF MediaFactory. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;/ol&gt;"/>
               </par>
            </jcr:content>
            <video_flash_mapping jcr:primaryType="cq:Page">
               <jcr:content jcr:primaryType="nt:unstructured"
                            jcr:title="Map Analytics Variables and Events"
                            sling:resourceType="wcm/foundation/components/page">
                  <par jcr:primaryType="nt:unstructured"
                       sling:resourceType="wcm/foundation/components/parsys">
                     <text jcr:primaryType="nt:unstructured"
                           sling:resourceType="wcm/foundation/components/text"
                           textIsRich="true"
                           text="&lt;p id=&#34;context_B9120B01F0BC41DAB030F3F13812E42E&#34;&gt;&lt;p&gt;If the Web Analytics team filled out the &#xA;&#x9;&#x9;  &lt;a href=&#34;../../../video_worksheet.html#concept_0A7B2FAC52B04AE6BFD8747B57D56222&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;,&#xA;&#x9;&#x9;  you might have a list similar to the following: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_B7643E8CEAE3442ABD39D775A09E1CDA&#34;&gt;&lt;li id=&#34;li_6D5AC3493D5E4CE5AE7A543F0C0D314B&#34;&gt;Video Name (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar2&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_FCDE2B604D0B4C9CADC63EAA0EEEEA46&#34;&gt;Video Name (Prop): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;prop2&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_B8319B86E8734F6BAFD1030FB63ECB7C&#34;&gt;Segments (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar3&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_95D1DE3AB45A4AA4829170965D36E82C&#34;&gt;Content Type (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar1&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_A3EDA5CDF48C4300AD961098DB47920A&#34;&gt;Video Time (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event3&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_983373973BA7431297AF7DEF46153B5B&#34;&gt;Video Views (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event1&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_6BBD8E106D4F40979FAB42F9893C46BD&#34;&gt;Video Completes (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event7&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_75B44CD364A94FDEB874625033C9601E&#34;&gt;Video Segment Views&#xA;&#x9;&#x9;&#x9; (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event2&lt;/userinput&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Complete the following to map conversion variables and events: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_C36661FC1A8741268B41EC913059F1A3&#34;&gt;&lt;li id=&#34;step_7D0F94B008704D45ABFD243E0B7E86FF&#34;&gt;&lt;b&gt;Add the &#xA;&#x9;&#x9;&#x9; &lt;i&gt;s.Media.trackUsingContextData&lt;/i&gt; variable and set it to&#xA;&#x9;&#x9;&#x9; true: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackUsingContextData = true;&#xA;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_0824B1E4992A4F04A75840C0A9E9A2E1&#34;&gt;&lt;b&gt;Add the &#xA;&#x9;&#x9;&#x9; &lt;i&gt;s.Media.contextDataMapping&lt;/i&gt; variable and map the&#xA;&#x9;&#x9;&#x9; parameters it contains with the SiteCatalyst variables and events you selected:&#xA;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackUsingContextData = true&#xA;s.Media.contextDataMapping = {&#xA;  &#34;a.media.name&#34;:&#34;eVar2,prop2&#34;,&#xA;  &#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;  &#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;  &#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;  &#34;a.media.view&#34;:&#34;event1&#34;,&#xA;  &#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA;  &#34;a.media.complete&#34;:&#34;event7&#34;&#xA;};&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_3271D9DED33D4BDDB7F89F17E4F00F13&#34;&gt;&lt;p&gt;&lt;b&gt;Next step:&lt;/b&gt;&lt;a href=&#34;../../../video_flash_milestones.html#task_8205951B2EF04789AF09C3B5F957C266&#34; type=&#34;task&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/p&gt;&lt;/example&gt;"/>
                  </par>
               </jcr:content>
            </video_flash_mapping>
            <video_flash_milestones jcr:primaryType="cq:Page">
               <jcr:content jcr:primaryType="nt:unstructured"
                            jcr:title="Configure Milestones"
                            sling:resourceType="wcm/foundation/components/page">
                  <par jcr:primaryType="nt:unstructured"
                       sling:resourceType="wcm/foundation/components/parsys">
                     <text jcr:primaryType="nt:unstructured"
                           sling:resourceType="wcm/foundation/components/text"
                           textIsRich="true"
                           text="&lt;p id=&#34;context_D3C4CCA5C2AF446CA88F8866D479055A&#34;&gt;&lt;p&gt; If the web analytics team filled out the &#xA;&#x9;&#x9;  &lt;a href=&#34;../../../video_worksheet.html#concept_0A7B2FAC52B04AE6BFD8747B57D56222&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;,&#xA;&#x9;&#x9;  you might have a list similar to the following: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;Number of seconds between measurement calls (increments of 5): &#xA;&#x9;&#x9;  &lt;userinput&gt;30&lt;/userinput&gt;&lt;/p&gt;&lt;p&gt;Milestones to track (as a % of video length): &#xA;&#x9;&#x9;  &lt;userinput&gt;25%, 50%, 75%&lt;/userinput&gt;&lt;/p&gt;&lt;p&gt;Divide each video into segments based on: ______________ &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;Review &#xA;&#x9;&#x9;  &lt;a href=&#34;../../../video_arch_intervals.html#concept_E09565C188AD44DF9EAC6F64C3433A6A&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&#xA;&#x9;&#x9;  then complete the following to define the collection interval: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_186E4B5CC76D4347B6B01C798823F163&#34;&gt;&lt;li id=&#34;step_823FA71A4C954719BAAAD9A3517ED74C&#34;&gt;&lt;b&gt;(Optional) To track using seconds, add the following: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackSeconds = 30;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_B78B4FAE9BDE41BC9D9D6433D2AA33D2&#34;&gt;&lt;b&gt;(Optional) To track using milestones, add additional milestone&#xA;&#x9;&#x9;&#x9; events to the milestones parameter of your contextDataMapping variable: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackUsingContextData = true&#xA;s.Media.contextDataMapping = {&#xA;  &#34;a.media.name&#34;:&#34;eVar2,prop2&#34;,&#xA;  &#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;  &#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;  &#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;  &#34;a.media.view&#34;:&#34;event1&#34;,&#xA;  &#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA;  &#34;a.media.complete&#34;:&#34;event7&#34;,&#xA;  &#34;a.media.milestones&#34;:{&#xA;     25: &#34;event4&#34;,&#xA;     50: &#34;event5&#34;,&#xA;     75:&#34;event6&#34;&#xA;     }&#xA;};&#xA;s.Media.trackMilestones = &#34;25,50,75&#34;;&lt;/code&gt;&lt;p&gt;This example measures an event for the 25%, 50%, and 75%&#xA;&#x9;&#x9;&#x9;&#x9;milestones. Each milestone you track must also be specified in &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;trackMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;You can also track using offset milestones instead: &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;code&gt;&#34;a.media.milestones&#34;:{&#xA;     30: &#34;event4&#34;, // 30 seconds from start of video &#xA;     60: &#34;event5&#34;, // 60 seconds from start of video&#xA;     120:&#34;event6&#34;  // 120 seconds from start of video&#xA;     }&#xA;};&#xA;s.Media.trackOffsetMilestones = &#34;30,60,120&#34;;&lt;/code&gt;&lt;p&gt;This example measures an event 30, 60, and 120 seconds from the&#xA;&#x9;&#x9;&#x9;&#x9;start of the video. Each offset milestone you track must also be specified in &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;trackOffsetMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_6CDE2EF23C7B4FFDAADD304630DF13EA&#34;&gt;&lt;b&gt;You can use &#xA;&#x9;&#x9;&#x9; &lt;i&gt;segmentByMilestones&lt;/i&gt; to have the media module create&#xA;&#x9;&#x9;&#x9; segments automatically based on your milestones. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;SegmentByMilestones = true;&lt;/code&gt;&lt;p&gt;If you do not enable &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;segmentByMilestones&lt;/i&gt; to define segments, you must&#xA;&#x9;&#x9;&#x9;&#x9;use a manual implementation (not &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;autoTrack&lt;/i&gt;) and send in the segment details with &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.play&lt;/i&gt;. If the web analytics team has defined&#xA;&#x9;&#x9;&#x9;&#x9;segments to track, you can define milestones that correspond to each segment&#xA;&#x9;&#x9;&#x9;&#x9;then enable &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;segmentByMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_C6FD5A741A9B41ECBE99B82D98CF6429&#34;&gt;&lt;p&gt;&lt;b&gt;Next step:&lt;/b&gt;&lt;a href=&#34;../../../video_flash_autotrack.html#task_CBF553B502414830BA175DD96A697DF2&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/example&gt;"/>
                  </par>
               </jcr:content>
            </video_flash_milestones>
            <video_flash_autotrack jcr:primaryType="cq:Page">
               <jcr:content jcr:primaryType="nt:unstructured"
                            jcr:title="Track Player Events Using AutoTrack"
                            sling:resourceType="wcm/foundation/components/page">
                  <par jcr:primaryType="nt:unstructured"
                       sling:resourceType="wcm/foundation/components/parsys">
                     <text jcr:primaryType="nt:unstructured"
                           sling:resourceType="wcm/foundation/components/text"
                           textIsRich="true"
                           text="&lt;p id=&#34;context_7942D0D81D1F417BB41F6E47E8077496&#34;&gt;&lt;p&gt;This prevents you from needing to manually track these events and call&#xA;&#x9;&#x9;  the open, play, stop, and close methods directly. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;See &#xA;&#x9;&#x9;  &lt;a href=&#34;../../../video_ref_faq.html#concept_2209A170CE424C94986E01631BF7FC6A/section_734551C1360F4A53B8E4DA7584196E78&#34; type=&#34;section&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_64A8F0A2AE0644A8A9ACA8C5718408DF&#34;&gt;&lt;li id=&#34;step_0AED1E12F2584BE18CAAF7E089BF4586&#34;&gt;&lt;b&gt;Add the &#xA;&#x9;&#x9;&#x9; &lt;i&gt;s.Media.autoTrack&lt;/i&gt; variable and set it to &#xA;&#x9;&#x9;&#x9; &lt;i&gt;true&lt;/i&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.autoTrack = true;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_C6FD5A741A9B41ECBE99B82D98CF6429&#34;&gt;&lt;p&gt;&lt;b&gt;Next step:&lt;/b&gt;&lt;a href=&#34;../../../video_flash_test.html#task_9B7A519F3E2242B2946229B8D08AB02B&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/example&gt;"/>
                  </par>
               </jcr:content>
            </video_flash_autotrack>
         </video_osmf_static>
         <video_osmf_override_name jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Using OSMF Metadata to Override a Video Name"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p&gt; You can override this with OSMF metadata by using variable binding to&#xA;&#x9;&#x9;bind &#xA;&#x9;&#x9;&lt;i&gt;Media.autoTrackMediaName&lt;/i&gt; to the OSMF metadata of your&#xA;&#x9;&#x9;choice. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;You can do this using either an XML config file, or using ActionScript.&#xA;&#x9;&#x9;Both of the following examples override the video name with the episodeID from&#xA;&#x9;&#x9;the OSMF metadata. &#xA;&#x9; &lt;/p&gt;&lt;section id=&#34;section_FC80C0729040429690DBC919A7D15D1A&#34;&gt;&lt;title&gt;Example config.xml (dynamic implementation)&lt;/title&gt;&lt;code&gt;&lt;autoTrackMediaName&gt;{media.player.metadata(http://www.corp1.com/,episodeID)}&lt;/autoTrackMediaName&gt;&lt;/code&gt;&lt;/section&gt;&lt;section id=&#34;section_92077560AE204D58B898F8C1EEFFA9C4&#34;&gt;&lt;title&gt;Example ActionScript (static implementation)&lt;/title&gt;&lt;code&gt;s.Media.addAutoTrackHandler(new AutoTrackOSMF());&#xA;s.Media.autoTrackMediaName = &#34;{media.player.metadata(http://www.corp1.com/,episodeID)}&#34;&#xA;s.Media.autoTrack = true;&lt;/code&gt;&lt;/section&gt;&lt;section id=&#34;section_C1D3AA64577146699E081667C4B1A3BB&#34;&gt;&lt;title&gt;Variable Binding&lt;/title&gt;&lt;p&gt;These examples use curly braces ( &#xA;&#x9;&#x9;  &lt;i&gt;{ }&lt;/i&gt; ) to populate an XML tag with a variable value. If&#xA;&#x9;&#x9;  you need to include curly braces at the beginning and end of a literal tag&#xA;&#x9;&#x9;  value, set the &#xA;&#x9;&#x9;  &lt;i&gt;autoBind&lt;/i&gt; attribute to &#xA;&#x9;&#x9;  &lt;i&gt;false&lt;/i&gt; on the tag: &#xA;&#x9;&#x9;  &lt;i&gt;&lt;autoTrackMediaName&#xA;&#x9;&#x9;&#x9; autoBind=false&gt;{123}&lt;/autoTrackMediaName&gt;&lt;/i&gt;&lt;/p&gt;&lt;/section&gt;"/>
               </par>
            </jcr:content>
         </video_osmf_override_name>
      </video_osmf>
      <video_ios jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Apple iOS"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p&gt;These instructions are for version 2.x of AppMeasurement for iOS,&#xA;&#x9;&#x9;which is available in Code Manager in Admin Console and documented &#xA;&#x9;&#x9;&lt;a href=&#34;https://marketing.adobe.com/resources/help/en_US/sc/appmeasurement/ios/oms_sc_appmeasure_ios.pdf&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;here&lt;/a&gt;. Version 3.x of the AppMeasurement&#xA;&#x9;&#x9;Libraries for iOS are not covered in this guide, they are documented &#xA;&#x9;&#x9;&lt;a href=&#34;https://marketing.adobe.com/resources/help/en_US/sc/appmeasurement/ios/index.html&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;here&lt;/a&gt;. &#xA;&#x9; &lt;/p&gt;"/>
            </par>
         </jcr:content>
         <video_ios_download jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Download the Media Module for iOS"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_13663FAA771F4513BA492777875B6E32&#34;&gt;&lt;p&gt;The Media Module is part of the standard AppMeasurement libraries for&#xA;&#x9;&#x9;  iOS.&#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_1528918718C0443584BEB91C278945C4&#34;&gt;&lt;li id=&#34;step_9305D2FD0EB8473FAC3AC5DB95D1CC10&#34;&gt;&lt;b&gt;In the Adobe Marketing Cloud, click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Admin&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Admin Console&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Code Manager&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_31979842DA8746DBA45B948024052FCF&#34;&gt;&lt;b&gt;In the Select the type of code to generate field, select &#xA;&#x9;&#x9;&#x9; &lt;b&gt;iOS (iPhone and iPad)&lt;/b&gt;, provide the requested&#xA;&#x9;&#x9;&#x9; information, and then click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Generate Code&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_B34AC09F98114150ADE3ECA82CCD7BA0&#34;&gt;&lt;b&gt;In the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;iPhone Config Text&lt;/b&gt; section, save the &#xA;&#x9;&#x9;&#x9; &lt;i&gt;s.account&lt;/i&gt; and &#xA;&#x9;&#x9;&#x9; &lt;i&gt;s.trackingServer&lt;/i&gt; variable and value. These variables&#xA;&#x9;&#x9;&#x9; are required for implementation.&#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_4DD256F9FCC4466698E946A3DB4AA99F&#34;&gt;&lt;b&gt;Select the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Component Files&lt;/b&gt; Tab, then save the&#xA;&#x9;&#x9;&#x9; AppMeasurement_iOS.zip to your local system.&#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;"/>
               </par>
            </jcr:content>
         </video_ios_download>
         <video_ios_config jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Add the iOS Media Module to a Project"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;ul id=&#34;steps_C38A675C1F1F41D781CA8D20BD01DE8E&#34;&gt;&lt;li id=&#34;step_FB977CA8E6FB488E83AA50266ACB3F71&#34;&gt;&lt;b&gt;Launch the Xcode IDE.&#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_A118B43281364479A250D31DC7CEB2A6&#34;&gt;&lt;b&gt;In the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Groups &amp; Files&lt;/b&gt; panel, right-click on the&#xA;&#x9;&#x9;&#x9; project and then click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Add Files To &#34;Project Name&#34;&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;p&gt;Select the following options:&#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;ul id=&#34;ul_0039C86D42B34C248B95533D0832E933&#34;&gt;&lt;li id=&#34;li_7BDB8F584D3743899C30836FCDE938E0&#34;&gt;Select &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;copy items into destination group's folder&lt;/b&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_252C24EFADC1423AA6EE2A41E2E92ABB&#34;&gt;Select &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;create groups&lt;/b&gt; for any added folders. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_7D2A217AF02949119F0B37D751DE37D3&#34;&gt;Set Reference Type to &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;Default.&lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;li_4131BF1DB02B40E0BB9324157B908FA7&#34;&gt;Set Text Encoding to &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;Unicode (UTF-8)&lt;/b&gt;.&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_0751EC237D424830BC1C7DC9C6C67D2D&#34;&gt;Select &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;Recursively create groups for any added&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; folders&lt;/b&gt;.&#xA;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_01CE4340674A4AEB8F92E2524A979323&#34;&gt;In the &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;Add To Targets&lt;/b&gt; section, make sure your&#xA;&#x9;&#x9;&#x9;&#x9;  project is selected. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_EF87F41B1917463AA12112CA6F470760&#34;&gt;&lt;b&gt;Browse to &#xA;&#x9;&#x9;&#x9; &lt;i&gt;AppMeasurement.h&lt;/i&gt;, then click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Add.&lt;/b&gt;&lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_1F3B4D391477408D8292735F6A482D0C&#34;&gt;&lt;b&gt;Navigate to the Build Phases tab of your desired target and then&#xA;&#x9;&#x9;&#x9; Expand the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Link Binary with Libraries&lt;/b&gt; item. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_7C48870495F1445298926CA4E338163E&#34;&gt;&lt;b&gt;Click the + button and click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Add Other&lt;/b&gt;. Browse to the &#xA;&#x9;&#x9;&#x9; &lt;i&gt;libAppMeasurement.a&lt;/i&gt; file and click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Open.&lt;/b&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;"/>
               </par>
            </jcr:content>
         </video_ios_config>
         <video_ios_mapping jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Map Conversion Variables and Events"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_6A064853CC9A4AA2A20895E3BC5000B2&#34; conref=&#34;video_flash_mapping.xml#task_3D50EAA204F54A1991490FC650B1F300/context_B9120B01F0BC41DAB030F3F13812E42E&#34;&gt;&lt;p /&gt;&lt;/p&gt;&lt;ul id=&#34;steps_4048225F63074254BA79A74BB10C34D3&#34; conref=&#34;video_flash_mapping.xml#task_3D50EAA204F54A1991490FC650B1F300/steps_C36661FC1A8741268B41EC913059F1A3&#34;&gt;&lt;li id=&#34;step_5660EF032C2F4C1FA2E6D140882C07AF&#34;&gt;&lt;b /&gt;&lt;/li&gt;&lt;/ul&gt;"/>
               </par>
            </jcr:content>
         </video_ios_mapping>
         <video_ios_milestones jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Configure Milestones"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_94EF5EC85F624BC4B767F4CE9069867A&#34; conref=&#34;video_flash_milestones.xml#task_8205951B2EF04789AF09C3B5F957C266/context_D3C4CCA5C2AF446CA88F8866D479055A&#34;&gt;&lt;p /&gt;&lt;/p&gt;&lt;ul id=&#34;steps_1B15CAC9FC724D22AD60EDBCDF1FD739&#34; conref=&#34;video_flash_milestones.xml#task_8205951B2EF04789AF09C3B5F957C266/steps_186E4B5CC76D4347B6B01C798823F163&#34;&gt;&lt;li id=&#34;step_E84EC2AD3D474900A8ACC4887B20DC6E&#34;&gt;&lt;b /&gt;&lt;/li&gt;&lt;/ul&gt;"/>
               </par>
            </jcr:content>
         </video_ios_milestones>
         <video_ios_autotrack jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Track Player Events Using AutoTrack"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_07C3006A6A274C2E977B17FDEB8BA6E5&#34; conref=&#34;video_flash_autotrack.xml#task_CBF553B502414830BA175DD96A697DF2/context_7942D0D81D1F417BB41F6E47E8077496&#34;&gt;&lt;p /&gt;&lt;/p&gt;&lt;ul id=&#34;steps_9476ECB9B5244A4D9081B6EABA806E59&#34; conref=&#34;video_flash_autotrack.xml#task_CBF553B502414830BA175DD96A697DF2/steps_64A8F0A2AE0644A8A9ACA8C5718408DF&#34;&gt;&lt;li id=&#34;step_C95C4FF692B84E5986C6F672184351B5&#34;&gt;&lt;b /&gt;&lt;/li&gt;&lt;/ul&gt;"/>
               </par>
            </jcr:content>
         </video_ios_autotrack>
         <video_ios_sample jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="iOS Sample Code"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;code outputclass=&#34;syntax c&#34;&gt;#import &#34;ADMS_MediaMeasurement.h&#34;&#xA;s.Media.trackUsingContextData = YES;&#xA;s.Media.contextDataMapping = [NSDictionary dictionaryWithObjectsAndKeys:&#xA;          @&#34;eVar2,prop2&#34;,@&#34;a.media.name&#34;,&#xA;          @&#34;eVar3&#34;,@&#34;a.media.segment&#34;,&#xA;          @&#34;eVar1&#34;,@&#34;a.contentType&#34;,&#xA;          @&#34;event3&#34;,@&#34;a.media.timePlayed&#34;,&#xA;          @&#34;event1&#34;,@&#34;a.media.view&#34;,&#xA;          @&#34;event2&#34;,@&#34;a.media.segmentView&#34;,&#xA;          @&#34;event7&#34;,@&#34;a.media.complete&#34;,&#xA;           _milestoneMappingDict, @&#34;a.media.milestones&#34;,&#xA;          _offsetMilestoneMappingDict, @&#34;a.media.offsetMilestones&#34;,&#xA;          nil];&#xA;&#xA;NSDictionary *_milestoneMappingDict = [NSDictionary dictionaryWithObjectsAndKeys:&#xA;                                            @&#34;event4&#34;,@&#34;25&#34;,&#xA;                                            @&#34;event5&#34;, @&#34;50&#34;,&#xA;                                            @&#34;event6&#34;, @&#34;75&#34;,&#xA;                                            nil];&#xA;NSDictionary *_offsetMilestoneMappingDict = [NSDictionary dictionaryWithObjectsAndKeys:&#xA;                                             @&#34;event8&#34;,@&#34;20&#34;,&#xA;                                             @&#34;event9&#34;, @&#34;40&#34;,&#xA;                                             @&#34;event10&#34;, @&#34;60&#34;,&#xA;                                             nil];&#xA;//Track By Milestones:&#xA;s.Media.trackMilestones = @&#34;25,50,75&#34;;&#xA;&#xA;// track Milestones &amp; segmentByMilestones:&#xA;s.Media.trackMilestones = @&#34;25,50,75&#34;;&#xA;s.Media.segmentByMilestones = YES;&#xA;&#xA;// track by seconds:&#xA;s.Media.trackSeconds = 15;&#xA;&#xA;// track Milestones &amp; segmentByMilestones &amp; seconds:&#xA;s.Media.trackMilestones = @&#34;25,50,75&#34;;&#xA;s.Media.segmentByMilestones = YES;&#xA;s.Media.trackSeconds = 15;&#xA;&#xA;// track offsetMilestones &amp; segmentByOffsetMilestones:&#xA;s.Media.trackOffsetMilestones = @&#34;15,30,45,60,75,90&#34;;&#xA;s.Media.segmentByOffsetMilestones = YES;&#xA;&#xA;// track offsetMilestones:&#xA;s.Media.trackOffsetMilestones = @&#34;5,15,45&#34;;&lt;/code&gt;"/>
               </par>
            </jcr:content>
         </video_ios_sample>
      </video_ios>
      <video_android jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Android"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p&gt;Version 1.x of AppMeasurement for Android, which is available in Code&#xA;&#x9;&#x9;Manager in Admin Console and documented &#xA;&#x9;&#x9;&lt;a href=&#34;https://marketing.adobe.com/resources/help/en_US/sc/appmeasurement/android/oms_sc_appmeasure_android.pdf&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;here&lt;/a&gt;, does not support video measurement.&#xA;&#x9;&#x9;Version 3.x of the AppMeasurement Libraries for Android supports video&#xA;&#x9;&#x9;measurement and is documented &#xA;&#x9;&#x9;&lt;a href=&#34;https://marketing.adobe.com/resources/help/en_US/sc/appmeasurement/android/index.html&#34; format=&#34;http&#34; scope=&#34;external&#34;&gt;here&lt;/a&gt;. &#xA;&#x9; &lt;/p&gt;"/>
            </par>
         </jcr:content>
      </video_android>
      <video_silverlight jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Silverlight"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text=""/>
            </par>
         </jcr:content>
         <video_silverlight_download jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Download the Media Module for Silverlight"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_ECD264C5EEE9473B8E674ED6972CD62C&#34;&gt;&lt;p&gt; To add the &#xA;&#x9;&#x9;  &lt;b&gt;media module&lt;/b&gt; for Silverlight you download the&#xA;&#x9;&#x9;  component libraries and include them in your project. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_09E7F69DE81D4AA9A92176AD942FD942&#34;&gt;&lt;li id=&#34;step_9760EAA29A674DB4A3551CD8D702A184&#34;&gt;&lt;b&gt;In the Adobe Marketing Cloud, click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Admin&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Admin Console&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Code Manager&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_97B3B704C5A04A4388FFD4E2DB5A29D0&#34;&gt;&lt;b&gt;Select &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Windows Phone, Silverlight, and .NET&lt;/b&gt;, provide&#xA;&#x9;&#x9;&#x9; the requested information, and then click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Generate Code&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_C8AF2635BBD44FDFA3EABDD59719D553&#34;&gt;&lt;b&gt;From the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;C# Example&lt;/b&gt; Tab, copy the sample to a text file&#xA;&#x9;&#x9;&#x9; and save it. This code can be copied to your Silverlight Project later. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_232F7BDA0AD4422CA6D4E388D26AFCC8&#34;&gt;&lt;b&gt;From the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Component Files&lt;/b&gt; Tab, download &#xA;&#x9;&#x9;&#x9; &lt;i&gt;AppMeasurement_Silverlight.dll&lt;/i&gt; and &#xA;&#x9;&#x9;&#x9; &lt;i&gt;AppMeasurement_Silverlight_Debug.dll&lt;/i&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;/ul&gt;"/>
               </par>
            </jcr:content>
         </video_silverlight_download>
         <video_silverlight_config jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Add the Silverlight Media Module to a Project"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_4C141865C4964A9FB4CD4EC7E33BD07E&#34;&gt;&lt;p&gt;The following task uses the Microsoft Web Developer 2008 Express&#xA;&#x9;&#x9;  Edition. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_D374085176BE4BE08A3888DDDF32E900&#34;&gt;&lt;li id=&#34;step_0A42ED7D4C8A4FF7B50F8AF0F4C15040&#34;&gt;&lt;b&gt;In &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Visual Web Developer&lt;/b&gt;, Click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;File&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9; &lt;b&gt;New Project&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_76D09752CDF044ACB9F8E2B1BB06734C&#34;&gt;&lt;b&gt;Select &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Silverlight Application&lt;/b&gt;, then click OK. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_9D1DE8A760ED466EA8B6F34B5073B9D5&#34;&gt;&lt;b&gt;Deselect &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Host the Silverlight application in a new Web&#xA;&#x9;&#x9;&#x9;&#x9;site&lt;/b&gt;, then click OK. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_A947EB7E522A40978DDF144809B15F0B&#34;&gt;&lt;b&gt;In the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Solution Explorer&lt;/b&gt;, right-click &#xA;&#x9;&#x9;&#x9; &lt;b&gt;References&lt;/b&gt;, then select &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Add Reference&lt;/b&gt;. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_E7FAD295D4974650B82D8132901A8F3A&#34;&gt;&lt;b&gt;Select the &#xA;&#x9;&#x9;&#x9; &lt;b&gt;Browse&lt;/b&gt; tab, browse to and select the&#xA;&#x9;&#x9;&#x9; appropriate AppMeasurement for Silverlight library, then click OK. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;/ul&gt;"/>
               </par>
            </jcr:content>
         </video_silverlight_config>
         <video_silverlight_mapping jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Map Conversion Variables and Events"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_6A064853CC9A4AA2A20895E3BC5000B2&#34; conref=&#34;video_flash_mapping.xml#task_3D50EAA204F54A1991490FC650B1F300/context_B9120B01F0BC41DAB030F3F13812E42E&#34;&gt;&lt;p /&gt;&lt;/p&gt;&lt;ul id=&#34;steps_4048225F63074254BA79A74BB10C34D3&#34; conref=&#34;video_flash_mapping.xml#task_3D50EAA204F54A1991490FC650B1F300/steps_C36661FC1A8741268B41EC913059F1A3&#34;&gt;&lt;li id=&#34;step_5660EF032C2F4C1FA2E6D140882C07AF&#34;&gt;&lt;b /&gt;&lt;/li&gt;&lt;/ul&gt;"/>
               </par>
            </jcr:content>
         </video_silverlight_mapping>
         <video_silverlight_milestones jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Configure Milestones"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_94EF5EC85F624BC4B767F4CE9069867A&#34; conref=&#34;video_flash_milestones.xml#task_8205951B2EF04789AF09C3B5F957C266/context_D3C4CCA5C2AF446CA88F8866D479055A&#34;&gt;&lt;p /&gt;&lt;/p&gt;&lt;ul id=&#34;steps_1B15CAC9FC724D22AD60EDBCDF1FD739&#34; conref=&#34;video_flash_milestones.xml#task_8205951B2EF04789AF09C3B5F957C266/steps_186E4B5CC76D4347B6B01C798823F163&#34;&gt;&lt;li id=&#34;step_E84EC2AD3D474900A8ACC4887B20DC6E&#34;&gt;&lt;b /&gt;&lt;/li&gt;&lt;/ul&gt;"/>
               </par>
            </jcr:content>
         </video_silverlight_milestones>
         <video_silverlight_autotrack jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Track Player Events Using AutoTrack"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_07C3006A6A274C2E977B17FDEB8BA6E5&#34; conref=&#34;video_flash_autotrack.xml#task_CBF553B502414830BA175DD96A697DF2/context_7942D0D81D1F417BB41F6E47E8077496&#34;&gt;&lt;p /&gt;&lt;/p&gt;&lt;ul id=&#34;steps_9476ECB9B5244A4D9081B6EABA806E59&#34; conref=&#34;video_flash_autotrack.xml#task_CBF553B502414830BA175DD96A697DF2/steps_64A8F0A2AE0644A8A9ACA8C5718408DF&#34;&gt;&lt;li id=&#34;step_C95C4FF692B84E5986C6F672184351B5&#34;&gt;&lt;b /&gt;&lt;/li&gt;&lt;/ul&gt;"/>
               </par>
            </jcr:content>
         </video_silverlight_autotrack>
         <video_sliverlight_setinterface jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Using the setInterface Method"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p&gt;The &#xA;&#x9;&#x9;&lt;i&gt;setInterface&lt;/i&gt; method is available only in the Silverlight&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;media module. Finding the root is necessary for&#xA;&#x9;&#x9;certain advanced features such as autoTrack. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;The following example shows how to set the root layout object using &#xA;&#x9;&#x9;&lt;i&gt;setInterface&lt;/i&gt;: &#xA;&#x9; &lt;/p&gt;&lt;code&gt;s.setInterface(interface);&lt;/code&gt;"/>
               </par>
            </jcr:content>
         </video_sliverlight_setinterface>
         <video_silverlight_sample jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Silverlight Sample Code"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p /&gt;&lt;code&gt;using com.omniture;&#xA;&#xA;namespace AppMeasurementExample {&#xA;  public partial class Page : UserControl {&#xA;    AppMeasurement s;&#xA;&#xA;    public Page() {&#xA;      InitializeComponent();&#xA;&#xA;      s = new AppMeasurement();&#xA;&#xA;      /* Specify the Report Suite ID(s) to track here */&#xA;      s.account = &#34;myreportsuiteID&#34;;&#xA;      /* Turn on and configure debugging here */&#xA;      s.debugTracking = true;&#xA;      /* You may add or alter any code config here */&#xA;      s.pageName = &#34;&#34;;&#xA;      s.pageURL = &#34;&#34;;&#xA;      s.charSet = &#34;UTF-8&#34;;&#xA;      s.currencyCode = &#34;USD&#34;;&#xA;      s.Media.trackMilestones=&#34;25,50,75&#34;;&#xA;      s.Media.playerName=&#34;My Media Player&#34;;&#xA;      s.Media.trackUsingContextData = true&#xA;      s.Media.segmentByMilestones = true;&#xA;      s.Media.contextDataMapping = new Dictionary&lt;string,object&gt; {&#xA;       &#34;a.media.name&#34;:&#34;eVar2,prop2&#34;,&#xA;       &#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;       &#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;       &#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;       &#34;a.media.view&#34;:&#34;event1&#34;,&#xA;       &#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA;       &#34;a.media.complete&#34;:&#34;event7&#34;,&#xA;       &#34;a.media.milestones&#34;:{&#xA;          25:&#34;event4&#34;,&#xA;          50:&#34;event5&#34;,&#xA;          75:&#34;event6&#34;&#xA;        }&#xA;      };&#xA;      s.Media.autoTrack = true;&#xA;      s.Media.attach(mediaElement);    &#xA;&#xA;      ... //other page code&#xA;      }&#xA;    }&#xA;}&#xA;&lt;/code&gt;"/>
               </par>
            </jcr:content>
         </video_silverlight_sample>
      </video_silverlight>
      <video_js jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Using JavaScript to Track a Video Player"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p&gt; JavaScript can be used to track a wide variety of players. To track&#xA;&#x9;&#x9;using JavaScript, you add code to the web page that contains your player and&#xA;&#x9;&#x9;track the player using event handlers.&#xA;&#x9; &lt;/p&gt;&lt;p&gt;This section contains instructions to measure video using JavaScript. &#xA;&#x9; &lt;/p&gt;"/>
            </par>
         </jcr:content>
         <video_js_download jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Download the Media Module for JavaScript"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_A2397B204BCE4CEF934FE1BB6FCF4A4F&#34;&gt;&lt;p&gt;If you are using AppMeasurement for JavaScript 1.x, paste the contents&#xA;&#x9;&#x9;  of &#xA;&#x9;&#x9;  &lt;i&gt;AppMeasurement_Module_Media.js&lt;/i&gt; just above the &#xA;&#x9;&#x9;  &lt;i&gt;============== DO NOT ALTER ANYTHING BELOW THIS LINE !&#xA;&#x9;&#x9;&#x9; ===============&lt;/i&gt; comment.&#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;If you are using H Code, find the media module and remove the&#xA;&#x9;&#x9;  surrounding comments:&#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;/***** UNCOMMENT TO USE THE Media MODULE *****&#xA;...&#xA;**** END Media MODULE COMMENT ***/&lt;/code&gt;&lt;/p&gt;"/>
               </par>
            </jcr:content>
         </video_js_download>
         <video_js_config jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Add the JavaScript Media Module to a Web Page"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;ul id=&#34;steps_98D04918574D41799A2174BBC9AB29E1&#34;&gt;&lt;li id=&#34;step_7F9BAEB98A9B4859808B4C9556834B2E&#34;&gt;&lt;b&gt;Add a call to &#xA;&#x9;&#x9;&#x9; &lt;i&gt;s.loadModule&lt;/i&gt; to load the Media module. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;/*********Media Module Calls**************/&#xA;s.loadModule(&#34;Media&#34;)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_EC3B19A588864E569BE4964F1CA8FF2D&#34;&gt;&lt;b&gt;Insert the Media module code into the modules section. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;/****************************** MODULES **************************/&#xA;/* Insert the media module tracking code here. */&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_F1653D1D0AB14232BD54828BB611A216&#34;&gt;&lt;p&gt;See &#xA;&#x9;&#x9;  &lt;a href=&#34;../../video_js_sample.html#concept_7B17ACCC514C4B8A9847AB799A2E29F4&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/example&gt;"/>
               </par>
            </jcr:content>
         </video_js_config>
         <video_flash_mapping jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Map Analytics Variables and Events"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_B9120B01F0BC41DAB030F3F13812E42E&#34;&gt;&lt;p&gt;If the Web Analytics team filled out the &#xA;&#x9;&#x9;  &lt;a href=&#34;../../video_worksheet.html#concept_0A7B2FAC52B04AE6BFD8747B57D56222&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;,&#xA;&#x9;&#x9;  you might have a list similar to the following: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_B7643E8CEAE3442ABD39D775A09E1CDA&#34;&gt;&lt;li id=&#34;li_6D5AC3493D5E4CE5AE7A543F0C0D314B&#34;&gt;Video Name (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar2&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_FCDE2B604D0B4C9CADC63EAA0EEEEA46&#34;&gt;Video Name (Prop): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;prop2&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_B8319B86E8734F6BAFD1030FB63ECB7C&#34;&gt;Segments (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar3&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_95D1DE3AB45A4AA4829170965D36E82C&#34;&gt;Content Type (eVar): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;eVar1&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_A3EDA5CDF48C4300AD961098DB47920A&#34;&gt;Video Time (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event3&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_983373973BA7431297AF7DEF46153B5B&#34;&gt;Video Views (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event1&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_6BBD8E106D4F40979FAB42F9893C46BD&#34;&gt;Video Completes (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event7&lt;/userinput&gt;&lt;/li&gt;&lt;li id=&#34;li_75B44CD364A94FDEB874625033C9601E&#34;&gt;Video Segment Views&#xA;&#x9;&#x9;&#x9; (Event): &#xA;&#x9;&#x9;&#x9; &lt;userinput&gt;event2&lt;/userinput&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Complete the following to map conversion variables and events: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_C36661FC1A8741268B41EC913059F1A3&#34;&gt;&lt;li id=&#34;step_7D0F94B008704D45ABFD243E0B7E86FF&#34;&gt;&lt;b&gt;Add the &#xA;&#x9;&#x9;&#x9; &lt;i&gt;s.Media.trackUsingContextData&lt;/i&gt; variable and set it to&#xA;&#x9;&#x9;&#x9; true: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackUsingContextData = true;&#xA;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_0824B1E4992A4F04A75840C0A9E9A2E1&#34;&gt;&lt;b&gt;Add the &#xA;&#x9;&#x9;&#x9; &lt;i&gt;s.Media.contextDataMapping&lt;/i&gt; variable and map the&#xA;&#x9;&#x9;&#x9; parameters it contains with the SiteCatalyst variables and events you selected:&#xA;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackUsingContextData = true&#xA;s.Media.contextDataMapping = {&#xA;  &#34;a.media.name&#34;:&#34;eVar2,prop2&#34;,&#xA;  &#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;  &#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;  &#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;  &#34;a.media.view&#34;:&#34;event1&#34;,&#xA;  &#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA;  &#34;a.media.complete&#34;:&#34;event7&#34;&#xA;};&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_3271D9DED33D4BDDB7F89F17E4F00F13&#34;&gt;&lt;p&gt;&lt;b&gt;Next step:&lt;/b&gt;&lt;a href=&#34;../../video_flash_milestones.html#task_8205951B2EF04789AF09C3B5F957C266&#34; type=&#34;task&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/p&gt;&lt;/example&gt;"/>
               </par>
            </jcr:content>
         </video_flash_mapping>
         <video_flash_milestones jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Configure Milestones"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p id=&#34;context_D3C4CCA5C2AF446CA88F8866D479055A&#34;&gt;&lt;p&gt; If the web analytics team filled out the &#xA;&#x9;&#x9;  &lt;a href=&#34;../../video_worksheet.html#concept_0A7B2FAC52B04AE6BFD8747B57D56222&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;,&#xA;&#x9;&#x9;  you might have a list similar to the following: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;Number of seconds between measurement calls (increments of 5): &#xA;&#x9;&#x9;  &lt;userinput&gt;30&lt;/userinput&gt;&lt;/p&gt;&lt;p&gt;Milestones to track (as a % of video length): &#xA;&#x9;&#x9;  &lt;userinput&gt;25%, 50%, 75%&lt;/userinput&gt;&lt;/p&gt;&lt;p&gt;Divide each video into segments based on: ______________ &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;Review &#xA;&#x9;&#x9;  &lt;a href=&#34;../../video_arch_intervals.html#concept_E09565C188AD44DF9EAC6F64C3433A6A&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&#xA;&#x9;&#x9;  then complete the following to define the collection interval: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/p&gt;&lt;ul id=&#34;steps_186E4B5CC76D4347B6B01C798823F163&#34;&gt;&lt;li id=&#34;step_823FA71A4C954719BAAAD9A3517ED74C&#34;&gt;&lt;b&gt;(Optional) To track using seconds, add the following: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackSeconds = 30;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_B78B4FAE9BDE41BC9D9D6433D2AA33D2&#34;&gt;&lt;b&gt;(Optional) To track using milestones, add additional milestone&#xA;&#x9;&#x9;&#x9; events to the milestones parameter of your contextDataMapping variable: &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;s.Media.trackUsingContextData = true&#xA;s.Media.contextDataMapping = {&#xA;  &#34;a.media.name&#34;:&#34;eVar2,prop2&#34;,&#xA;  &#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;  &#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;  &#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;  &#34;a.media.view&#34;:&#34;event1&#34;,&#xA;  &#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA;  &#34;a.media.complete&#34;:&#34;event7&#34;,&#xA;  &#34;a.media.milestones&#34;:{&#xA;     25: &#34;event4&#34;,&#xA;     50: &#34;event5&#34;,&#xA;     75:&#34;event6&#34;&#xA;     }&#xA;};&#xA;s.Media.trackMilestones = &#34;25,50,75&#34;;&lt;/code&gt;&lt;p&gt;This example measures an event for the 25%, 50%, and 75%&#xA;&#x9;&#x9;&#x9;&#x9;milestones. Each milestone you track must also be specified in &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;trackMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;You can also track using offset milestones instead: &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;code&gt;&#34;a.media.milestones&#34;:{&#xA;     30: &#34;event4&#34;, // 30 seconds from start of video &#xA;     60: &#34;event5&#34;, // 60 seconds from start of video&#xA;     120:&#34;event6&#34;  // 120 seconds from start of video&#xA;     }&#xA;};&#xA;s.Media.trackOffsetMilestones = &#34;30,60,120&#34;;&lt;/code&gt;&lt;p&gt;This example measures an event 30, 60, and 120 seconds from the&#xA;&#x9;&#x9;&#x9;&#x9;start of the video. Each offset milestone you track must also be specified in &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;trackOffsetMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&#34;step_6CDE2EF23C7B4FFDAADD304630DF13EA&#34;&gt;&lt;b&gt;You can use &#xA;&#x9;&#x9;&#x9; &lt;i&gt;segmentByMilestones&lt;/i&gt; to have the media module create&#xA;&#x9;&#x9;&#x9; segments automatically based on your milestones. &#xA;&#x9;&#x9;  &lt;/b&gt;&lt;p&gt;&lt;code&gt;SegmentByMilestones = true;&lt;/code&gt;&lt;p&gt;If you do not enable &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;segmentByMilestones&lt;/i&gt; to define segments, you must&#xA;&#x9;&#x9;&#x9;&#x9;use a manual implementation (not &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;autoTrack&lt;/i&gt;) and send in the segment details with &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.play&lt;/i&gt;. If the web analytics team has defined&#xA;&#x9;&#x9;&#x9;&#x9;segments to track, you can define milestones that correspond to each segment&#xA;&#x9;&#x9;&#x9;&#x9;then enable &#xA;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;segmentByMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;example id=&#34;example_C6FD5A741A9B41ECBE99B82D98CF6429&#34;&gt;&lt;p&gt;&lt;b&gt;Next step:&lt;/b&gt;&lt;a href=&#34;../../video_flash_autotrack.html#task_CBF553B502414830BA175DD96A697DF2&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/example&gt;"/>
               </par>
            </jcr:content>
         </video_flash_milestones>
         <video_js_events jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="Track Video Player Events"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;p&gt; This lets you call &#xA;&#x9;&#x9;&lt;i&gt;Media.open&lt;/i&gt;, &#xA;&#x9;&#x9;&lt;i&gt;Media.play&lt;/i&gt;, &#xA;&#x9;&#x9;&lt;i&gt;Media.stop&lt;/i&gt;, and &#xA;&#x9;&#x9;&lt;i&gt;Media.close&lt;/i&gt; at the appropriate times. For example: &#xA;&#x9; &lt;/p&gt;&lt;p&gt;&lt;b&gt;Load&lt;/b&gt;: Call &#xA;&#x9;&#x9;&lt;i&gt;Media.open&lt;/i&gt; and &#xA;&#x9;&#x9;&lt;i&gt;Media.play&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Pause&lt;/b&gt;: Call &#xA;&#x9;&#x9;&lt;i&gt;Media.stop&lt;/i&gt;. For example, if a user pauses a video after&#xA;&#x9;&#x9;15 seconds, call &#xA;&#x9;&#x9;&lt;i&gt;s.Media.stop(&#34;Video1&#34;,15)&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Buffer&lt;/b&gt;: Call &#xA;&#x9;&#x9;&lt;i&gt;Media.stop&lt;/i&gt; while the video buffers. Call &#xA;&#x9;&#x9;&lt;i&gt;Media.play&lt;/i&gt; when playback resumes. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;&lt;b&gt;Resume&lt;/b&gt;: Call &#xA;&#x9;&#x9;&lt;i&gt;Media.play&lt;/i&gt;. For example, when a user resumes a video&#xA;&#x9;&#x9;after initially playing 15 seconds of the video, call &#xA;&#x9;&#x9;&lt;i&gt;s.Media.play(&#34;Video1&#34;,15)&lt;/i&gt;. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;&lt;b&gt;Scrub (slider)&lt;/b&gt;: When the user drags the video slider, call &#xA;&#x9;&#x9;&lt;i&gt;Media.stop&lt;/i&gt;. When the user releases the video slider,&#xA;&#x9;&#x9;call &#xA;&#x9;&#x9;&lt;i&gt;Media.play&lt;/i&gt;. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;&lt;b&gt;End&lt;/b&gt;: Call &#xA;&#x9;&#x9;&lt;i&gt;Media.stop&lt;/i&gt;, then &#xA;&#x9;&#x9;&lt;i&gt;Media.close&lt;/i&gt;. For example, at the end of a 100-second&#xA;&#x9;&#x9;video, call &#xA;&#x9;&#x9;&lt;i&gt;s.Media.stop(&#34;Video1&#34;,100)&lt;/i&gt;, then &#xA;&#x9;&#x9;&lt;i&gt;s.Media.close(&#34;Video1&#34;)&lt;/i&gt;. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;To accomplish this,you can define four custom functions that you can&#xA;&#x9;&#x9;call from the media player event handlers. The various parameters passed into &#xA;&#x9;&#x9;&lt;i&gt;Media.open&lt;/i&gt;, &#xA;&#x9;&#x9;&lt;i&gt;Media.play&lt;/i&gt;, &#xA;&#x9;&#x9;&lt;i&gt;Media.stop&lt;/i&gt;, and &#xA;&#x9;&#x9;&lt;i&gt;Media.close&lt;/i&gt; come from the player. The following&#xA;&#x9;&#x9;pseudocode demonstrates how this might be done: &#xA;&#x9; &lt;/p&gt;&lt;code&gt;/*Call on video load*/&#xA;function startMovie(){&#x9;&#xA;&#x9;s.Media.open(mediaName,mediaLength,mediaPlayerName);&#xA;&#x9;playMovie();&#x9;&#xA;}&#xA;&#xA;/*Call on video resume from pause and slider release*/&#xA;function playMovie(){&#xA;&#x9;s.Media.play(mediaName,mediaOffset, segmentNum, segment, segmentLength);&#xA;}&#xA;&#xA;/*Call on video pause and slider grab*/&#xA;function stopMovie(){&#xA;&#x9;s.Media.stop(mediaName,mediaOffset);&#xA;}&#xA;&#xA;/*Call on video end*/&#xA;function endMovie(){&#xA;&#x9;stopMovie();&#xA;&#x9;s.Media.close(mediaName);&#xA;}&lt;/code&gt;&lt;section id=&#34;section_9CF7793ECA7E4CF68FE8D4942C1643B3&#34;&gt;&lt;title&gt;JavaScript AutoTrack&lt;/title&gt;&lt;p&gt;The JavaScript &#xA;&#x9;&#x9;  media module for identifies all &#xA;&#x9;&#x9;  &lt;i&gt;&lt;embed&gt;&lt;/i&gt; or &#xA;&#x9;&#x9;  &lt;i&gt;&lt;object&gt;&lt;/i&gt; tags in the page HTML. It then searches&#xA;&#x9;&#x9;  the data in each tag to determine which media player, if any, is being used. If&#xA;&#x9;&#x9;  the player is Windows Media Player, Quicktime, or Real Player, &#xA;&#x9;&#x9;  &lt;i&gt;autoTrack&lt;/i&gt; can be used, though autoTrack for Windows&#xA;&#x9;&#x9;  media player works only with Internet Explorer. Manual tracking for Windows&#xA;&#x9;&#x9;  Media Player is required to support all other browsers. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;You must have the &#xA;&#x9;&#x9;  &lt;i&gt;classid&lt;/i&gt; attribute set on the object you want to track.&#xA;&#x9;&#x9;  The &#xA;&#x9;&#x9;  &lt;i&gt;classid&lt;/i&gt; is required to expose the event handlers used&#xA;&#x9;&#x9;  by the Media Module to automatically track the video.&#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;s.Media.autoTrack = true&lt;/code&gt;&lt;/section&gt;"/>
               </par>
            </jcr:content>
         </video_js_events>
         <video_js_sample jcr:primaryType="cq:Page">
            <jcr:content jcr:primaryType="nt:unstructured"
                         jcr:title="JavaScript Sample Code"
                         sling:resourceType="wcm/foundation/components/page">
               <par jcr:primaryType="nt:unstructured"
                    sling:resourceType="wcm/foundation/components/parsys">
                  <text jcr:primaryType="nt:unstructured"
                        sling:resourceType="wcm/foundation/components/text"
                        textIsRich="true"
                        text="&lt;code outputclass=&#34;syntax javascript&#34;&gt;s.usePlugins=true&#xA;function s_doPlugins(s) {&#xA;&#xA;    /* Add manual calls to modules and plugins here */&#xA;}&#xA;s.doPlugins=s_doPlugins&#xA;&#xA;/*********Media Module Calls**************/&#xA;s.loadModule(&#34;Media&#34;)&#xA;&#xA;/*Configure Media Module Functions */&#xA;s.Media.autoTrack= true;&#xA;s.Media.trackVars=&#34;events,prop2,eVar1,eVar2,eVar3&#34;;&#xA;s.Media.trackEvents=&#34;event1,event2,event3,event4,event5,event6,event7&#34;&#xA;s.Media.trackMilestones=&#34;25,50,75&#34;;&#xA;s.Media.playerName=&#34;My Media Player&#34;;&#xA;s.Media.segmentByMilestones = true;&#xA;s.Media.trackUsingContextData = true;&#xA;s.Media.contextDataMapping = {&#xA;  &#34;a.media.name&#34;:&#34;eVar2,prop2&#34;,&#xA;  &#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;  &#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;  &#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;  &#34;a.media.view&#34;:&#34;event1&#34;,&#xA;  &#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA;  &#34;a.media.complete&#34;:&#34;event7&#34;,&#xA;  &#34;a.media.milestones&#34;:{&#xA;     25:&#34;event4&#34;,&#xA;     50:&#34;event5&#34;,&#xA;     75:&#34;event6&#34;&#xA;  }&#xA;}&#xA;    &#xA;  s.Media.monitor = function (s,media){ //If Needed&#xA;  }&#xA;&#xA;  /* Turn on and configure debugging here */&#xA;  s.debugTracking = true;&#xA;  s.trackLocal = true;&#xA;&#xA;  /* WARNING: Changing any of the below variables will cause drastic changes to how your visitor data is collected.  Changes should only be made     when instructed to do so by your account manager.*/&#xA;  s.visitorNamespace = &#34;yourNamespace&#34;;&#xA;  s.trackingServer=&#34;metrics.mysite.com&#34; //Use only if using first party cookies&#xA;  s.trackingServerSecure=&#34;smetrics.mysite.com&#34; //Use only if useing first party cookies in conjunction with SSL&#xA;  s.dc = '122';&#xA;&#xA;  /************************** PLUGINS SECTION *************************/&#xA;  /* Insert any plugins code you want to use here. */&#xA;&#xA;  /****************************** MODULES *****************************/&#xA;  /* Insert the media module tracking code here. */&lt;/code&gt;"/>
               </par>
            </jcr:content>
         </video_js_sample>
      </video_js>
      <video_html jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="HTML 5 Video"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p&gt;To measure HTML 5 video, follow the instructions provided in &#xA;&#x9;&#x9;&lt;a href=&#34;../video_js.html#concept_BC13BBCAA737434996BD09238F6B6EBF&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&#xA;&#x9;&#x9;to configure video tracking using JavaScript. For example, add the Media Module&#xA;&#x9;&#x9;to your &#xA;&#x9;&#x9;&lt;i&gt;s_code&lt;/i&gt; file, configure conversion variables, events, and&#xA;&#x9;&#x9;milestones, and so on. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;As described in &#xA;&#x9;&#x9;&lt;a href=&#34;../video_js_events.html#concept_65FF1DB802D0437DAB672D89A279E49F&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;,&#xA;&#x9;&#x9;you must manually track the HTML 5 video events. The HTML 5 specification&#xA;&#x9;&#x9;provides a large number of predefined event handlers you can use to manually&#xA;&#x9;&#x9;track HTML 5 video. The following site provides details on the HTML 5 video&#xA;&#x9;&#x9;events: &#xA;&#x9; &lt;/p&gt;&lt;p&gt;&lt;a href=&#34;http://www.w3.org/2010/05/video/mediaevents.html&#34; scope=&#34;external&#34; format=&#34;html&#34; /&gt;&lt;/p&gt;&lt;p&gt;Using these event handlers, you can make calls to open, play, stop, and&#xA;&#x9;&#x9;close to measure video. The following code provides some examples of using the&#xA;&#x9;&#x9;HTML 5 video event handlers: &#xA;&#x9; &lt;/p&gt;&lt;code&gt;var video = document.getElementsByTagName('video')[0];&#xA;&#xA;video.play = function(e) {&#xA;s.Media.play(mediaName,mediaOffset, segmentNum, segment, segmentLength);&#xA;}&#xA;&#xA;video.pause = function(e) {&#xA;s.Media.stop(mediaName,mediaOffset);&#xA;}&#xA;&#xA;video.onended = function(e) {&#xA;s.Media.close(mediaName);&#xA;}&#xA;&lt;/code&gt;"/>
            </par>
         </jcr:content>
      </video_html>
      <video_other_players jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Other Video Players"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p&gt;. Many 3rd party Flash-based players are built on OSMF and can use the&#xA;&#x9;&#x9;OSMF dynamic plug-in. Other players that expose a JavaScript event interface&#xA;&#x9;&#x9;can use the JavaScript media module. &#xA;&#x9; &lt;/p&gt;&lt;ul id=&#34;ul_E55A56A21F9C4905A25E0E94AA5D5EF1&#34;&gt;&lt;li id=&#34;li_8A72E53C321C4D319D96CA22F9221589&#34;&gt;&lt;a href=&#34;../video_osmf.html#concept_49720D8D6FB14642961861F47C12A89D&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_8AFC499C546E452CAC6024A99714E9C1&#34;&gt;&lt;a href=&#34;../video_js.html#concept_BC13BBCAA737434996BD09238F6B6EBF&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_65E24E668B7246AD83B1A8DC4BC049A6&#34;&gt;&lt;a href=&#34;../video_other_players.html#concept_3CE6B48FDA4B40B4B6399789C818C10B/section_7EA9FD8BDE7B458494F678DF2F67BB4D&#34; type=&#34;section&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_801BEAAC09D74520BC481177F3BC669E&#34;&gt;&lt;a href=&#34;../video_other_players.html#concept_3CE6B48FDA4B40B4B6399789C818C10B/section_6E4E508717C14D13BEF688BD1144BDAD&#34; type=&#34;section&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section id=&#34;section_7EA9FD8BDE7B458494F678DF2F67BB4D&#34;&gt;&lt;title&gt;Custom Flash NetStream Player&lt;/title&gt;&lt;p&gt;Flash 10.3 introduced new functionality to the NetStream component&#xA;&#x9;&#x9;  that enables enhanced video tracking. If you are using a custom Flash NetStream&#xA;&#x9;&#x9;  player you can enable the following variable to enable player tracking&#xA;&#x9;&#x9;  functionality similar to autoTrack. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;s.Media.autoTrackNetStreams = true&lt;/code&gt;&lt;p&gt;The process you follow is similar to the process described in &#xA;&#x9;&#x9;  &lt;a href=&#34;../video_flash.html#task_2AF250F1F78444A99770F04353F96467&#34; type=&#34;task&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  You can modify these instructions to download the correct Flash AppMeasurement&#xA;&#x9;&#x9;  library for your development library and configure video measurement. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;See &#xA;&#x9;&#x9;  &lt;a href=&#34;http://www.adobe.com/devnet/video/articles/media-measurement-flash.html &#34; scope=&#34;external&#34; format=&#34;html&#34;&gt;Measuring video consumption in Flash&lt;/a&gt;. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;&lt;section id=&#34;section_6E4E508717C14D13BEF688BD1144BDAD&#34;&gt;&lt;title&gt;Brightcove&lt;/title&gt;&lt;p&gt;Brightcove provides an interface for 3rd party analytics solutions&#xA;&#x9;&#x9;  using an analytics SWF Flash component. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;http://support.brightcove.com/en/docs/editing-settings-players-plug-ins-tab&#34; scope=&#34;external&#34; format=&#34;html&#34;&gt;http://support.brightcove.com/en/docs/editing-settings-players-plug-ins-tab&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Adobe provides an analytics SWF, &#xA;&#x9;&#x9;  &lt;i&gt;AppMeasurementExtension.swf&lt;/i&gt;, for this purpose. To&#xA;&#x9;&#x9;  complete a Brightcove integration you need the following files: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;table id=&#34;table_037B2290AF884CF3B1D34987E4507465&#34;&gt;&lt;tgroup cols=&#34;2&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;2.22*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;File &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Instructions &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;AppMeasurementExtension.swf&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;ol id=&#34;ol_155C76BB686F423B9EEB7F843BD915BE&#34;&gt;&lt;li id=&#34;li_3D3015E7775B44CA85C5B3D4E3ED578B&#34;&gt;In the Adobe&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  Marketing Cloud, click &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;Admin&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;Admin Console&lt;/b&gt; &gt; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;Code Manager&lt;/b&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_BF2E355E9AD645B1992700BBE1A0E55D&#34;&gt;Select &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;ActionScript (Flash/Flex)&lt;/b&gt;, provide&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  the requested information, and then click &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;Generate Code&lt;/b&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_3BE74C9EAA3C448EA27F717A405EA4C5&#34;&gt;From the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;b&gt;Component Files&lt;/b&gt; Tab, download &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;i&gt;AppMeasurementExtension.swf&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;/ol&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;XML Configuration File &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;An XML configuration file is used to map the SiteCatalyst&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;variables you want to use for video, and define milestones. See the section&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;below. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;&lt;/section&gt;&lt;section id=&#34;section_60DF847DA8664A2185539C7A9779E07A&#34; conref=&#34;video_osmf_dynamic.xml#concept_20417E8BA5FE45D0A2DA8A271669E559/section_EFA781861B5845738A10E4CCC992A2DE&#34;&gt;&lt;title /&gt;&lt;p /&gt;&lt;/section&gt;&lt;section id=&#34;section_7D067DB244974A2FB64DE3B48DB3A384&#34;&gt;&lt;p&gt;Be aware of the following if you are using Brightcove Players: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_4BEF0BB768BB4BE098D9482221D29626&#34;&gt;&lt;li id=&#34;li_E0CAE42769D1468D9B0718A1BA894D2B&#34;&gt;&lt;i&gt;Media.autoTrack&lt;/i&gt;&#xA;&#x9;&#x9;&#x9; supports externally loaded video players, such as Brightcove, that might not be&#xA;&#x9;&#x9;&#x9; instantiated when the Flash creates the AppMeasurement instance. To recognize&#xA;&#x9;&#x9;&#x9; an external video player, &#xA;&#x9;&#x9;&#x9; &lt;i&gt;Media.autoTrack&lt;/i&gt; periodically rechecks for a video&#xA;&#x9;&#x9;&#x9; player if it does not initially find one. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_9C960683906B48A1B7ABE2AFDA830298&#34;&gt;AppMeasurement tracks&#xA;&#x9;&#x9;&#x9; Brightcove video playback using the Brightcove video ID, prefixed with either&#xA;&#x9;&#x9;&#x9; Brightcove 2: or Brightcove 3: (depending on the Brightcove API version). For&#xA;&#x9;&#x9;&#x9; example, a Brightcove 3 video ID of abc123667 gets a video name of Brightcove&#xA;&#x9;&#x9;&#x9; 3:abc123667. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_AD1A6536F57240B6A5A3491DDFC94CBF&#34;&gt;AppMeasurement gets the&#xA;&#x9;&#x9;&#x9; video ID from the video DTO calling getCurrentVideo or getCurrentTitle. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_3E481A29941A44548837A180DFC1804F&#34;&gt;To improve video name&#xA;&#x9;&#x9;&#x9; readability, you can upload classifications that assign the video a friendly&#xA;&#x9;&#x9;&#x9; name. For example, Brightcove 3:abc123667 could be classified as On-line Auto&#xA;&#x9;&#x9;&#x9; Ad #1. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you are already building a more complex Flash movie and using the&#xA;&#x9;&#x9;  Brightcove video player with your movie, you can also implement AppMeasurement&#xA;&#x9;&#x9;  using the instructions in &#xA;&#x9;&#x9;  &lt;a href=&#34;../video_flash.html#task_2AF250F1F78444A99770F04353F96467&#34; type=&#34;task&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  This lets AppMeasurement detect the Brightcove video player in your movie when&#xA;&#x9;&#x9;  it loads. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;"/>
            </par>
         </jcr:content>
      </video_other_players>
      <video_manual_track jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Manually Tagging a Video Player"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p&gt;See &#xA;&#x9;&#x9;&lt;a href=&#34;../video_ref_faq.html#concept_2209A170CE424C94986E01631BF7FC6A/section_734551C1360F4A53B8E4DA7584196E78&#34; type=&#34;section&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9; &lt;/p&gt;"/>
            </par>
         </jcr:content>
      </video_manual_track>
      <video_mediamonitor jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Measuring Additional Metrics using Media.monitor"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p&gt;A custom &#xA;&#x9;&#x9;&lt;i&gt;Media.monitor&lt;/i&gt; method gives you the most granular control&#xA;&#x9;&#x9;over video tracking. AppMeasurement automatically calls the &#xA;&#x9;&#x9;&lt;i&gt;Media.monitor&lt;/i&gt; method in the following circumstances: &#xA;&#x9; &lt;/p&gt;&lt;ul id=&#34;ul_2821128D7F464671A314AD6F873727FA&#34;&gt;&lt;li id=&#34;li_FC915A11D7F74651B065C0386E7C83C6&#34;&gt;Every second while the video&#xA;&#x9;&#x9;  is playing. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_D3785F89E26A477D97192AF12816FD7D&#34;&gt;When an autoTrack&#xA;&#x9;&#x9;  implementation, such as the OSMF plug-in, captures a player event like&#xA;&#x9;&#x9;  scrubbing, pausing or resuming, end of video playback, etc. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_45F33DA9FA114869B2C55DD6E76557F3&#34;&gt;When a non-autoTrack&#xA;&#x9;&#x9;  (manual) implementation calls &#xA;&#x9;&#x9;  &lt;i&gt;Media.open&lt;/i&gt;, &#xA;&#x9;&#x9;  &lt;i&gt;Media.play&lt;/i&gt;, &#xA;&#x9;&#x9;  &lt;i&gt;Media.stop&lt;/i&gt;, or &#xA;&#x9;&#x9;  &lt;i&gt;Media.close&lt;/i&gt;. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use this functionality to monitor the status of each video that is&#xA;&#x9;&#x9;currently playing. With it, you can setup additional variables (Props, eVars,&#xA;&#x9;&#x9;Events) and call &#xA;&#x9;&#x9;&lt;i&gt;Media.track&lt;/i&gt; based on the current state of the video as&#xA;&#x9;&#x9;it is playing. &#xA;&#x9; &lt;/p&gt;&lt;code&gt;s.Media.monitor(s, media)&lt;/code&gt;&lt;p&gt;This method takes the following parameters: &#xA;&#x9; &lt;/p&gt;&lt;p&gt;&lt;b&gt;s&lt;/b&gt;: The AppMeasurement instance. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;&lt;b&gt;media&lt;/b&gt;: An object with members providing the state of the video.&#xA;&#x9;&#x9;These members include: &#xA;&#x9; &lt;/p&gt;&lt;table id=&#34;table_8CF4CC7B333645DA89DAA9EF381EDC1D&#34;&gt;&lt;tgroup cols=&#34;2&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;2.67*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt; State Property &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Description &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.name&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;The name of the video given in the call to &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;i&gt;Media.open&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.length&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;The length of the video in seconds given in&#xA;&#x9;&#x9;&#x9;&#x9;  the call to &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;i&gt;Media.open&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.openTime&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;A Date object set to the time video tracking&#xA;&#x9;&#x9;&#x9;&#x9;  started. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.offset&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;The current offset into the video, in&#xA;&#x9;&#x9;&#x9;&#x9;  seconds. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.percent&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;The current offset into the video, as a&#xA;&#x9;&#x9;&#x9;&#x9;  percentage of the video length ((media.offset / media.length) * 100). &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.timePlayed&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;The total video playback time, in seconds.&#xA;&#x9;&#x9;&#x9;&#x9;  This includes replay time due to rewind, and excludes time skipped by fast&#xA;&#x9;&#x9;&#x9;&#x9;  forwarding. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.playerName&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;The name of the media player given in the&#xA;&#x9;&#x9;&#x9;&#x9;  call to &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;i&gt;Media.open&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.mediaEvent&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;The event that initiated the call to the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.monitor&lt;/i&gt; method. Options include the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; following: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;OPEN&lt;/b&gt;: The start of video playback. For a non-autoTrack&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; (manual) implementation, this is the first time &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.play&lt;/i&gt; is called after calling &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.open&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;PLAY&lt;/b&gt;: Video playback restarted. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;STOP&lt;/b&gt;: Video playback stopped due to pause, seek forward&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; or backwards, scrubbing started, etc. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;CLOSE&lt;/b&gt;: The end of video playback. For a non-autoTrack&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; (manual) implementation, this is when &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.close&lt;/i&gt; is called.&#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;MONITOR&lt;/b&gt;: A check of the video state, which occurs every&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; second. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;MILESTONE&lt;/b&gt;: A video milestone was reached, as defined by&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.trackMilestones&lt;/i&gt; method. The &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;media.milestone&lt;/i&gt; property identifies the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; specific milestone that was reached. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;SECONDS&lt;/b&gt;: The playback time specified by &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;media.trackSeconds&lt;/i&gt; has been reached. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.eventFirstTime&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;A boolean property. When set to true,&#xA;&#x9;&#x9;&#x9;&#x9;  indicates the &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;i&gt;media.mediaEven&lt;/i&gt;t occurred for the first time. If&#xA;&#x9;&#x9;&#x9;&#x9;  media.mediaEvent = &#34;MILESTONE&#34; a true value indicates that this is the first&#xA;&#x9;&#x9;&#x9;&#x9;  time to reach the video milestone identified in media.milestone. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.milestone&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;The milestone reached during video playback, as defined in the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.trackMilestones&lt;/i&gt; method. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;This property is only set when &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;media.mediaEvent&lt;/i&gt; is set to &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;userinput&gt;&#34;MILESTONE&#34;&lt;/userinput&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.player&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Player-specific data created by some&#xA;&#x9;&#x9;&#x9;&#x9;  autoTrack implementations. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;media.player.metadata&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Player-specific method for retrieving video&#xA;&#x9;&#x9;&#x9;&#x9;  metadata from the player. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;&lt;p&gt;A custom &#xA;&#x9;&#x9;&lt;i&gt;Media.monitor&lt;/i&gt; method should do similar to the following:&#xA;&#x9;&#x9;&#xA;&#x9; &lt;/p&gt;&lt;ul id=&#34;ul_173C942E52D64DCC905ACFBDEBF74B8E&#34;&gt;&lt;li id=&#34;li_276D145CE43E4746A342D7859ED30083&#34;&gt;Check the media object to&#xA;&#x9;&#x9;  see if this is a point where you want to customize your video tracking. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_6A0D608282BF4BEAAECFFF323B7C2D31&#34;&gt;Set custom props, eVars, and&#xA;&#x9;&#x9;  events to customize your tracking. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_C15950D5A7DC43D5B8EA9E97CAAEDB47&#34;&gt;Set &#xA;&#x9;&#x9;  &lt;i&gt;s.Media.trackVars&lt;/i&gt; and &#xA;&#x9;&#x9;  &lt;i&gt;s.Media.trackEvents&lt;/i&gt; filters to match the custom props,&#xA;&#x9;&#x9;  eVars, and events you with to track along with the video data. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_74E326DD2E97455A9E8E3FC131FAD7E9&#34;&gt;Call &#xA;&#x9;&#x9;  &lt;i&gt;s.Media.track(media.name)&lt;/i&gt; to send off the video data&#xA;&#x9;&#x9;  collected up to the current point along with your custom props, eVars, and&#xA;&#x9;&#x9;  events. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;/ul&gt;&lt;section id=&#34;section_9072BCD06A054C3AB11E3DE3DEF361EC&#34;&gt;&lt;title&gt;Define a method or function for Media.monitor&lt;/title&gt;&lt;p&gt;To create a custom &#xA;&#x9;&#x9;  &lt;i&gt;Media.monitor&lt;/i&gt; method you can set &#xA;&#x9;&#x9;  &lt;i&gt;Media.monitor&lt;/i&gt; to an anonymous function or a class&#xA;&#x9;&#x9;  method. The anonymous function or class method you define should take the&#xA;&#x9;&#x9;  AppMeasurement instance and media object as shown in the media monitor&#xA;&#x9;&#x9;  reference. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;//JavaScript or Flash anonymous function example&#xA;s.Media.monitor = function (s,media)  {&#xA;...&#xA;}&lt;/code&gt;&lt;code&gt;//Silverlight class method example&#xA;s.Media.monitor = new AppMeasurement_Media_Monitor(myMediaMonitor);&lt;/code&gt;&lt;code&gt;//OSMF anonymous function example&#xA;s.Media.monitor = function (s:Object,media:Object) {&#xA;...&#xA;}&lt;/code&gt;&lt;/section&gt;&lt;section id=&#34;section_BDAFE64513AF4B23A1E9DC6DFC2725A4&#34;&gt;&lt;title&gt;Media.monitor Code Sample&lt;/title&gt;&lt;p&gt;The following code sample demonstrates using Media.monitor to send&#xA;&#x9;&#x9;  custom variables. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;/* Import line for ActionScript 3 */&#xA;import com.omniture.AppMeasurement;&#xA;&#xA;/* Uncomment for ActionScript 2 with Flash Player 8+ and comment out other import lines */&#xA;/* import com.omniture.AS2.AppMeasurement; */&#xA;&#xA;/* Uncomment for ActionScript 2 with Flash Player 6, 7, or Lite and comment out other import lines */&#xA;/* import com.omniture.AS2.FPL.AppMeasurement; */&#xA;&#xA;var s:AppMeasurement = new AppMeasurement();&#xA;/* Uncomment for Flex and comment out addChild(s); */&#xA;/* rawChildren.addChild(s); */&#xA;addChild(s);&#xA;&#xA;/* Specify the Report Suite ID(s) to track here */&#xA;s.account = &#34;jdoe&#34;;&#xA;/* Turn on and configure debugging here */&#xA;s.debugTracking = true;&#xA;s.trackLocal = true;&#xA;/* You may add or alter any code config here */&#xA;s.pageName = &#34;&#34;;&#xA;s.pageURL = &#34;&#34;;&#xA;s.charSet = &#34;UTF-8&#34;;&#xA;s.currencyCode = &#34;USD&#34;;&#xA;&#xA;s.Media.autoTrack=true;&#xA;s.Media.segmentByMilestones=true;&#xA;s.Media.trackMilestones=&#34;25,50,75&#34;;&#xA;s.Media.trackVars=&#34;eVar2,eVar3,eVar1,events,prop51,prop50&#34;;&#xA;s.Media.trackEvents=&#34;event1,event2,event3,event4,event5,event6,event7&#34;;&#xA;&#xA;/* Turn on and configure ClickMap tracking here */&#xA;s.trackClickMap = true;&#xA;s.movieID = &#34;&#34;;&#xA;&#xA;/* WARNING: Changing any of the below variables will cause drastic changes&#xA;to how your visitor data is collected.  Changes should only be made&#xA;when instructed to do so by your account manager.*/&#xA;s.visitorNamespace = &#34;corp1&#34;;&#xA;s.trackingServer = &#34;corp1.d1.sc.omtrdc.net&#34;;&#xA;var tracked25:Boolean&#xA;var tracked50:Boolean&#xA;var tracked75:Boolean&#xA;var fireRequest:Boolean&#xA;&#xA;s.Media.trackUsingContextData = true;&#xA;&#xA;s.Media.contextDataMapping = {&#xA;&#34;a.media.name&#34;:&#34;eVar2&#34;,&#xA;&#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;&#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;&#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;&#34;a.media.view&#34;:&#34;event1&#34;,&#xA;&#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA;&#34;a.media.complete&#34;:&#34;event7&#34;,&#xA;&#34;a.media.milestones&#34;:{&#xA;25:&#34;event4&#34;,&#xA;50:&#34;event5&#34;,&#xA;75:&#34;event6&#34;&#xA;}&#xA;};&#xA;&#xA;s.Media.monitor = function (s,media){&#xA;  &#xA;    if ((media.event == &#34;MILESTONE&#34;) &amp;&amp; (media.eventFirstTime)) {&#xA;     if (media.milestone == 25) {&#xA;          s.prop51 = media.name+ &#34; : &#34; +&#34;25%&#34;;&#xA;          fireRequest = true;&#xA;     }&#xA;     if (media.milestone == 50) {&#xA;          s.prop51 = media.name+ &#34; : &#34; +&#34;50%&#34;;&#xA;          fireRequest = true;&#xA;     }&#xA;     if (media.milestone == 75) {&#xA;          s.prop51 = media.name+ &#34; : &#34; +&#34;75%&#34;;&#xA;          fireRequest = true;&#xA;     }&#xA;     if (fireRequest) {&#xA;          fireRequest = false;&#xA;          sendRequest();&#xA;     }&#xA;}&#xA;                &#xA;    if(media.event==&#34;OPEN&#34;) {&#xA;        s.prop50=&#34;Home page&#34;&#xA;        sendRequest();&#xA;        s.prop50=&#34;&#34;&#xA;&#xA;    }&#xA;    &#xA;    if(media.event==&#34;CLOSE&#34;) {&#xA;        s.prop51=media.name+ &#34; : &#34; +&#34;100%&#34;&#xA;        sendRequest();&#xA;        s.prop51=&#34;&#34;&#xA;&#xA;    }&#xA;&#xA;    function sendRequest(){&#xA;        s.Media.track(media.name);&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;p&gt;The following custom &#xA;&#x9;&#x9;  &lt;i&gt;Media.monitor&lt;/i&gt; method sets eVar1 to the “series” key,&#xA;&#x9;&#x9;  eVar2 to the “season” key, and eVar3 to the “episode” key in the&#xA;&#x9;&#x9;  http://www.corp1.com/ namespace using OSMF metadata: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;s.Media.monitor = function (s:Object,media:Object) {&#xA;    s.trackVars = &#34;events,eVar1,eVar2,eVar3&#34;;&#xA;    s.trackEvents = &#34;event1,event2&#34;;&#xA;    s.eVar1 = media.player.metadata(&#34;http://www.corp1.com/&#34;,&#34;series&#34;);&#xA;    s.eVar2 = media.player.metadata(&#34;http://www.corp1.com/&#34;,&#34;season&#34;);&#xA;    s.eVar3 = media.player.metadata(&#34;http://www.corp1.com/&#34;,&#34;episode&#34;);&#xA;    if (media.mediaEvent == &#34;OPEN&#34;) {&#xA;        s.events = &#34;event1&#34;;&#xA;        s.Media.track(media.name);&#xA;    } else if (media.mediaEvent == &#34;CLOSE&#34;) {&#xA;        s.events = &#34;event2&#34;;&#xA;        s.Media.track(media.name);&#xA;    }&#xA;}&lt;/code&gt;&lt;p&gt;The following example shows a &#xA;&#x9;&#x9;  &lt;i&gt;Media.monitor&lt;/i&gt; implementation in Silverlight: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;code&gt;s.Media.media = new AppMeasurement_Media_Monitor(myMediaMonitor);&#xA;&#xA;// ...&#xA;&#xA;// custom variables (Props, eVars, Events) are sent automatically on an OPEN event, and when manually tracked here (in media monitor below)&#xA;private void myMediaMonitor(AppMeasurement s,AppMeasurement_Media_State media) {&#xA;     if (media.mediaEvent == &#34;OPEN&#34;) { //executes when the video opens&#xA;          s.Media.trackVars = &#34;eVar1,events&#34;;&#xA;          s.Media.trackEvents = &#34;event1&#34;;&#xA;          s.events = &#34;event1&#34;;&#xA;          s.eVar1 = media.name;&#xA;          s.Media.track(media.name);&#xA;     }&#xA;     if (media.mediaEvent == &#34;CLOSE&#34;) { //executes when the video completes&#xA;          s.Media.trackVars = &#34;eVar1,events&#34;;&#xA;          s.Media.trackEvents = &#34;event4&#34;;&#xA;          s.events = &#34;event4&#34;;&#xA;          s.eVar1 = media.name;&#xA;          s.Media.track(media.name);&#xA;     }&lt;/code&gt;&lt;/section&gt;"/>
            </par>
         </jcr:content>
      </video_mediamonitor>
   </video_developer>
   <video_ref_variables jcr:primaryType="cq:Page">
      <jcr:content jcr:primaryType="nt:unstructured"
                   jcr:title="Media Module Variables"
                   sling:resourceType="wcm/foundation/components/page">
         <par jcr:primaryType="nt:unstructured"
              sling:resourceType="wcm/foundation/components/parsys">
            <text jcr:primaryType="nt:unstructured"
                  sling:resourceType="wcm/foundation/components/text"
                  textIsRich="true"
                  text="&lt;p&gt;You must define values for the variables in the Required Variables&#xA;&#x9;&#x9;table. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;Additionally, to track events in your video player, you must enable&#xA;&#x9;&#x9;autoTrack (for supported players) or implement custom player event tracking&#xA;&#x9;&#x9;using the open, play, stop, and close methods. &#xA;&#x9; &lt;/p&gt;&lt;table id=&#34;table_9E35A29552234DF5B933FB1FA4AB5BDD&#34;&gt;&lt;tgroup cols=&#34;2&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;2.14*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Variable &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Description &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.trackUsingContextData&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.trackUsingContextData = true;&lt;/code&gt;&lt;p&gt;This option enables integrated video tracking. When &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;trackUsingContextData = true&lt;/i&gt;, the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; media module generates context data for&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; media tracking, instead of the legacy pev3 value used in previous versions of&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; video measurement. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;Use &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.contextDataMapping&lt;/i&gt; to map the context&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; data to the selected eVars and Events. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;Defaults to &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;false&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.contextDataMapping&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.contextDataMapping = {&#xA;&#34;a.media.name&#34;:&#34;eVar2,prop2&#34;,&#xA;&#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;&#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;&#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;&#34;a.media.view&#34;:&#34;event1&#34;,&#xA;&#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA;&#34;a.media.complete&#34;:&#34;event7&#34;,&#xA;&#34;a.media.milestones&#34;:{&#xA;  &#x9;25:&#34;event4&#34;,&#xA;  &#x9;50:&#34;event5&#34;,&#xA;  &#x9;75:&#34;event6&#34;&#xA;  }&#xA;};&lt;/code&gt;&lt;p&gt;An object that defines variable mapping to eVars and Events&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; that you want to use for video measurement. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;The object must map the following fields: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.name&lt;/b&gt;: (Required) Populates variables with the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; video name. Provide the eVar that you selected to store the video name, and the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; Custom Insight Video variable (s.prop) you want to use for video pathing.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; Provide the values in a comma-separated list. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.segment&lt;/b&gt;: (Optional) The eVar that you want to&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; store the media segment name. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.contentType&lt;/b&gt;: (Optional) The eVar that you want to&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; store the video value, which contains visit and visitor tracking enabled to&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; generate video visit and visitor reporting. The variable you select is likely&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; already used to store data such as article slide show or product page &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.view&lt;/b&gt;: (Required) The Event that you want to&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; count media views. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.segmentView&lt;/b&gt;: (Optional) The Event that you want&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; to count segment views. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.complete&lt;/b&gt;: (Optional) The Event that you want to&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; count complete views. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.timePlayed&lt;/b&gt;: (Optional, highly recommended) The&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; numeric Event that you want to store the number of video seconds played. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.milestones&lt;/b&gt;: (Optional) An object that maps&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; s.Media.trackMilestones milestones to counter Events. Media.segmentByMilestones&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; should be set to true if you define milestones. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;Ad tracking&lt;/b&gt;&lt;/p&gt;&lt;p&gt;To track ads, the following context data variables are&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; available: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.name&lt;/b&gt;: (Required) Populates variables with the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; ad name. Provide the eVar that you selected to store the ad name, and the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; Custom Insight Video variable (s.prop) you want to use for pathing. Provide the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; values in a comma-separated list. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.pod&lt;/b&gt;: The position in the primary content the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; ad was played. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.podPosition:&lt;/b&gt; The position within the pod&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; where the ad is played. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.CPM:&lt;/b&gt; The CPM or encrypted CPM (prefixed with&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; a &#34;~&#34;) that applies to this playback. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.view:&lt;/b&gt; Works the same as a.media.view. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.clicked:&lt;/b&gt; Count the number of clicks for the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; ad (Media.click calls). &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.timePlayed:&lt;/b&gt; Works the same as&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; a.media.timePlayed. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.complete:&lt;/b&gt; Works the same as a.media.complete.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.segment:&lt;/b&gt; Works the same as a.media.segment. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.segmentView:&lt;/b&gt; Works the same as&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; a.media.segmentView. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.milestones:&lt;/b&gt; Works the same as&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; a.media.milestones. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;a.media.ad.offsetMilestones:&lt;/b&gt; Works the same as&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; a.media.offsetMilestones. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.trackVars&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.trackVars=&#34;events,prop2,eVar1,eVar2,eVar3&#34;;&lt;/code&gt;&lt;p&gt;A comma-separated list of all variables that are set in your&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; video tracking code. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.trackEvents&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.trackEvents=&#34;event1,event2,event3,event4,event5,event6,event7&#34;&lt;/code&gt;&lt;p&gt;A comma-separated list of all events that are set in your&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; video tracking code. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;&lt;p&gt;The following table contains optional variables. &#xA;&#x9; &lt;/p&gt;&lt;section id=&#34;section_8CD2E2121A8C48B09D523D14456AD096&#34;&gt;&lt;title&gt;Optional Variables&lt;/title&gt;&lt;p /&gt;&lt;table id=&#34;table_379CEDB518B948C4B17DC12BAC169792&#34;&gt;&lt;tgroup cols=&#34;2&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;1.61*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Variable &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Description &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.autoTrack&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.autoTrack = true&lt;/code&gt;&lt;p&gt;Enables automatic tracking for supported players. Supported&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;players are as follows: &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;ul id=&#34;ul_BF3BF46ACC3F48F78C46D1FC171A17BB&#34;&gt;&lt;li id=&#34;li_4318B12D11A641CD8D163E48ACCE7869&#34;&gt;Open Source&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  Media Framework (OSMF) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_0D958F9FB19A4AB78B235F3F59E37E7D&#34;&gt;FLVPlayback&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  (Video players created by the import video wizard in Flash Professional) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_EAF29CC667B8491590AAB71CDA0D7606&#34;&gt;Silverlight &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_96F1A6EDB81741B6A20368550B01E99B&#34;&gt;MediaDisplay &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_6E7F95AA4C5C4178AF5F3E6193A4B1DA&#34;&gt;MediaPlayback &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_836F3D05E4C54708BE066ACB97368A77&#34;&gt;Brightcove API&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  versions 2 &amp; 3 (see &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;a href=&#34;video_other_players.html#concept_3CE6B48FDA4B40B4B6399789C818C10B/section_6E4E508717C14D13BEF688BD1144BDAD&#34; type=&#34;section&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_018438AC7B6A413E8E22AE45B7932427&#34;&gt;Windows Media&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  Player, Quicktime, or Real Player using JavaScript &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you are not using one of the above players you can use&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Media.open, Media.play, Media.stop, and Media.close to track player events. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.autoTrackNetStreams&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.autoTrackNetStreams = true&lt;/code&gt;&lt;p&gt;Flash 10.3 introduced new functionality to the NetStream&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;component that enables enhanced video tracking. If you are using a custom Flash&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;NetStream player you can enable this variable to enable functionality similar&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;to autoTrack. This method requires that videos are viewed in Flash 10.3 or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;later. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.completeByCloseOffset&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.completeByCloseOffset = true&lt;/code&gt;&lt;p&gt;This setting lets you count a complete video view a few&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;seconds before the actual end of the video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;The event is sent based on the number of seconds specified&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;completeCloseOffsetThreshold&lt;/i&gt;. This lets you&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;measure completes in video players that never report an offset equal to the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;length of the video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;By default, this value is set to true and the threshold is&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set to 1 second. With these defaults the complete event is sent 1 second before&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the end of the video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.completeCloseOffsetThreshold&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.completeCloseOffsetThreshold = 1&lt;/code&gt;&lt;p&gt;This threshold lets you count a complete video view a few&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;seconds before the actual end of the video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.completeByCloseOffset&lt;/i&gt; must be set to&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;true to use this threshold. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;The integer value you supply determines how far off in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;seconds the offset can be from the length of the video at close and still count&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;as a complete. This lets you measure completes in video players that never&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;report an offset equal to the length of the video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;The default threshold is 1 second. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.playerName&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.playerName = &#34;Custom Player Name&#34;&lt;/code&gt;&lt;p&gt;Specifies a custom video player name. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.trackSeconds&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;code&gt;s.Media.trackSeconds = 15&lt;/code&gt;&lt;p&gt;Defines the interval, in seconds, for sending video tracking&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data to Adobe data collection servers while the video is playing. The value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;must be set in increments of 5 seconds. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Enabling &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.trackSeconds&lt;/i&gt; triggers only the events&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;that are defined in Media.contextDataMapping. To send additional variables&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;outside of those specified for video measurement, you must use Media.Monitor &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.trackMilestones&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Tracks milestones as percentage of the video length. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.trackMilestones = &#34;25,50,75&#34;;&lt;/code&gt;&lt;p&gt;Defines the interval, as a percentage of the video length,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;for sending video tracking data to Adobe data collection servers. Specify the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;milestones as a comma-separated list of whole numbers. For example: 10 = 10%,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;23 = 23%). &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Because these milestones are fixed points in the video, if a&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;visitor views past the 10% milestone, then rewinds and passes the 10% milestone&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;again, the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;media module sends the tracking data&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;multiple times. Similarly, if a visitor fast forwards past a milestone, the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;media module does not send the tracking&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data for that milestone. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Enabling &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.trackMilestones&lt;/i&gt; triggers only the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;events that are defined in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.contextDataMapping&lt;/i&gt;. To send additional&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;variables outside of those specified for video measurement, you must use &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.monitor&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.trackOffsetMilestones&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Tracks milestones as seconds elapsed from the beginning of&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.trackOffsetMilestones = &#34;20,40,60&#34;;&lt;/code&gt;&lt;p&gt;Defines the interval, as seconds elapsed from the beginning&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;of the video, for sending video tracking data to Adobe data collection servers.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Specify the milestones as a comma-separated list of whole numbers. For example:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;20 = 20 seconds, 40 = 40 seconds). &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Because these milestones are fixed points in the video, if a&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;visitor views past the 20 seconds milestone, then rewinds and passes the 20&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;seconds milestone again, the media module sends the tracking data multiple&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;times. Similarly, if a visitor fast forwards past a milestone, the media module&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;does not send the tracking data for that milestone. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Enabling &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.trackOffsetMilestones&lt;/i&gt; triggers only&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the events that are defined in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.contextDataMapping&lt;/i&gt;. To send additional&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;variables outside of those specified for video measurement, you must use &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.monitor&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.segmentByMilestones&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.segmentByMilestones = true;&lt;/code&gt;&lt;p&gt;Automatically generates the segment name, segment number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and segment length data, based on the length of the media and the milestones&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;specified in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.trackMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Segmenting by milestones is the only way to define segments&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when using autoTrack. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Defaults to &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;false&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.segmentByOffsetMilestones&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.segmentByOffsetMilestones = true;&lt;/code&gt;&lt;p&gt;Automatically generates the segment name, segment number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and segment length data, based on the length of the media and the milestones&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;specified in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.trackOffsetMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Segmenting by milestones is the only way to define segments&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when using autoTrack. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Defaults to &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;false&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;&lt;/section&gt;&lt;section id=&#34;section_1EF7D12D42C744A295330346017A6D67&#34;&gt;&lt;title&gt;Ad Tracking Variables&lt;/title&gt;&lt;p&gt;These variables are used to send ad information in conjunction with&#xA;&#x9;&#x9;  the &#xA;&#x9;&#x9;  &lt;i&gt;openAd&lt;/i&gt; method. See &#xA;&#x9;&#x9;  &lt;a href=&#34;video_ads.html#concept_045DCEBBB82144309DF95CF3C4A6B6A8&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;table id=&#34;table_A56EE2E3E7D34A99A63988B8D76F5F86&#34;&gt;&lt;tgroup cols=&#34;2&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;1.63*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;p&gt;Variable &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Description &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.adTrackSeconds&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;code&gt;s.Media.adTrackSeconds = 15&lt;/code&gt;&lt;p&gt;Defines the interval, in seconds, for sending video ad&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;tracking data to Adobe data collection servers while the video is playing. The&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value must be set in increments of 5 seconds. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Enabling &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.adTrackSeconds&lt;/i&gt; triggers only the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;events that are defined in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.contextDataMapping&lt;/i&gt;. To send additional&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;variables outside of those specified for video measurement, you must use &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.Monitor&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.adTrackMilestones&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Tracks ad milestones as percentage of the ad length. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.adTrackMilestones = &#34;25,50,75&#34;;&lt;/code&gt;&lt;p&gt;Defines the interval, as a percentage of the ad length, for&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sending ad tracking data to Adobe data collection servers. Specify the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;milestones as a comma-separated list of whole numbers. For example: 10 = 10%,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;23 = 23%). &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Because these milestones are fixed points in the ad, if a&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;visitor views past the 10% milestone, then rewinds and passes the 10% milestone&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;again, the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;media module sends the tracking data&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;multiple times. Similarly, if a visitor fast forwards past a milestone, the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;media module does not send the tracking&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data for that milestone. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Enabling &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.adTrackMilestones&lt;/i&gt; triggers only the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;events that are defined in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.contextDataMapping&lt;/i&gt;. To send additional&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;variables outside of those specified for video measurement, you must use &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.monitor&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.adTrackOffsetMilestones&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;p&gt;Tracks ad milestones as seconds elapsed from the beginning&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;of the ad. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.adTrackOffsetMilestones = &#34;20,40,60&#34;;&lt;/code&gt;&lt;p&gt;Defines the interval, as seconds elapsed from the beginning&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;of the ad, for sending ad tracking data to Adobe data collection servers.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Specify the milestones as a comma-separated list of whole numbers. For example:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;20 = 20 seconds, 40 = 40 seconds). &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Because these milestones are fixed points in the ad, if a&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;visitor views past the 20 seconds milestone, then rewinds and passes the 20&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;seconds milestone again, the media module sends the tracking data multiple&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;times. Similarly, if a visitor fast forwards past a milestone, the media module&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;does not send the tracking data for that milestone. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Enabling &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.adTrackOffsetMilestones&lt;/i&gt; triggers only&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the events that are defined in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.contextDataMapping&lt;/i&gt;. To send additional&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;variables outside of those specified for video measurement, you must use &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.monitor&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.adSegmentByMilestones&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.adSegmentByMilestones = true;&lt;/code&gt;&lt;p&gt;Automatically generates the segment name, segment number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and segment length data, based on the length of the media and the milestones&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;specified in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.adTrackMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Segmenting by milestones is the only way to define segments&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when using autoTrack. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Defaults to &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;false&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.adSegmentByOffsetMilestones&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.adSegmentByOffsetMilestones = true;&lt;/code&gt;&lt;p&gt;Automatically generates the segment name, segment number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and segment length data, based on the length of the media and the milestones&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;specified in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;Media.adTrackOffsetMilestones&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Segmenting by milestones is the only way to define segments&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when using autoTrack. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;p&gt;Defaults to &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;i&gt;false&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;&lt;/section&gt;"/>
         </par>
      </jcr:content>
   </video_ref_variables>
   <video_ref_methods jcr:primaryType="cq:Page">
      <jcr:content jcr:primaryType="nt:unstructured"
                   jcr:title="Media Module Methods"
                   sling:resourceType="wcm/foundation/components/page">
         <par jcr:primaryType="nt:unstructured"
              sling:resourceType="wcm/foundation/components/parsys">
            <text jcr:primaryType="nt:unstructured"
                  sling:resourceType="wcm/foundation/components/text"
                  textIsRich="true"
                  text="&lt;p&gt;If you are using &#xA;&#x9;&#x9;&lt;i&gt;Media.autoTrack&lt;/i&gt; and are not tracking additional metrics,&#xA;&#x9;&#x9;you do not need to call any of these methods directly. All arguments are&#xA;&#x9;&#x9;required unless specified as optional. &#xA;&#x9; &lt;/p&gt;&lt;table id=&#34;table_EFB15584EDEF480886EA1966500D3C80&#34;&gt;&lt;tgroup cols=&#34;2&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;2.40*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;Method &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Description &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.open&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.open(mediaName,mediaLength,mediaPlayerName)&lt;/code&gt;&lt;p&gt;Prepares the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; media module to collect video tracking data.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; This method takes the following parameters: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;mediaName&lt;/b&gt;: (required) The name of the video as you want&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; it to appear in video reports. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;mediaLength&lt;/b&gt;: (required) The length of the video in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; seconds. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;mediaPlayerName&lt;/b&gt;: (required) The name of the media&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; player used to view the video, as you want it to appear in video&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; reports. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.openAd&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.openAd(name,length,playerName,parentName,parentPod,parentPodPosition,CPM)&lt;/code&gt;&lt;p&gt;Prepares the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; media module to collect ad tracking data.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; This method takes the following parameters: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: (required) The name or ID of the ad. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;length&lt;/b&gt;: (required) The length of the ad. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;playerName&lt;/b&gt;: (required) The name of the media player&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; used to view the ad. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;parentName&lt;/b&gt;: The name or ID of the primary content where&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; the ad is embedded. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;parentPod&lt;/b&gt;: The position in the primary content the ad&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; was played. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;parentPodPosition&lt;/b&gt;: The position within the pod where&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; the ad is played. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;CPM&lt;/b&gt;: The CPM or encrypted CPM (prefixed with a &#34;~&#34;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; that applies to this playback. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.click&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.click(name,offset)&lt;/code&gt;&lt;p&gt;Track when an ad is clicked in a video. This method takes the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; following parameters: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;name&lt;/b&gt;: The name of the ad. This must match the name used&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; in &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.openAd&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;offset&lt;/b&gt;: The offset into the ad when the click occurred.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.close&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.close(mediaName)&lt;/code&gt;&lt;p&gt;Ends video data collection and sends information to Adobe data&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; collection servers. Call this method at the end of the video. This method takes&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; the following parameters: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;mediaName&lt;/b&gt;: The name of the video. This must match the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; name used in Media.open. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.complete&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.complete(name,offset)&lt;/code&gt;&lt;p&gt;This method manually tracks a complete event. This method is&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; used when you need to trigger events using special logic that can't be handled&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; using &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.completeByCloseOffset&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;For example, if you are measuring a live stream that has no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; defined end, you might trigger a complete after a user views a live stream for&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; X seconds. You might measure a complete using a percentage calculation based on&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; the length and type of content. This method takes the following parameters: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;mediaName&lt;/b&gt;: The name of the video. This must match the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; name used in Media.open. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;mediaOffset&lt;/b&gt;: The number of seconds into the video when&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; the complete event should be sent. Specify the offset based on the video&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; starting at second zero. If your media player tracks using milliseconds, make&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; sure the value is converted to seconds before you call Media.complete. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;If you plan to call complete manually, set &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;s.Media.completeByCloseOffset = false&lt;/i&gt; to&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; disable automatic triggering of the complete event. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.play&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.play(name,offset,segmentNum,segment, segmentLength)&lt;/code&gt;&lt;p&gt;Call this method anytime a video starts playing. When using&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; manual video measurement, you can provide the current segment data when sending&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; video measurement data. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;If your player changes from one segment to another, for&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; whatever reason, you should call Media.stop before calling Media.play again for&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; the new segment. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;This method takes the following parameters: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;mediaName&lt;/b&gt;: The name of the video. This must match the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; name used in Media.open. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;mediaOffset&lt;/b&gt;: The number of seconds into the video that&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; play begins. Specify the offset based on the video starting at second zero. If&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; your media player tracks using milliseconds, make sure the value is converted&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; to seconds before you call Media.play. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;segmentNum&lt;/b&gt;: (Optional) The current segment number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; which marketing reports use to order the display of segments in reports. The&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; segmentNum parameter must be greater than zero. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;segment&lt;/b&gt;: (Optional) The current segment name. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;segmentLength&lt;/b&gt;: (Optional) The current segment length,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; in seconds. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;For example: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;code&gt;s.Media.play(&#34;My Video&#34;,1800,2,&#34;Second Quarter&#34;,1800)&#xA;s.Media.play(&#34;My Video&#34;,0,1,&#34;Preroll&#34;,30)&lt;/code&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.stop&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.stop(mediaName,mediaOffset)&lt;/code&gt;&lt;p&gt;Tracks a stop event (stop, pause, etc.) for the specified&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; video. This method takes the following parameters: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;mediaName&lt;/b&gt;: The name of the video. This must match the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; name used in Media.open. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;mediaOffset&lt;/b&gt;: The number of seconds into the video that&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; the stop or pause event occurs. Specify the offset based on the video starting&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; at second zero. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.monitor&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.monitor(s, media)&lt;/code&gt;&lt;p&gt;&lt;b&gt;Silverlight Syntax:&lt;/b&gt;&lt;/p&gt;&lt;code&gt;s.Media.monitor = new AppMeasurement_Media_Monitor(myMediaMonitor);&lt;/code&gt;&lt;p&gt;The Silverlight app media monitor implements the Objective-C&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; delegate design pattern. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;myMediaMonitor&lt;/i&gt; is a class method that takes&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; the &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;s&lt;/i&gt; and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;media&lt;/i&gt; parameters. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;Use this method to send additional video metrics. You can&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; setup additional variables (Props, eVars, Events) and send them using &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.track&lt;/i&gt; based on the current state of the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; video as it is playing. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;See &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;a href=&#34;video_mediamonitor.html#concept_6B10C4127F844D84A1FD0F59D818054F&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;This method takes the following parameters: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;s&lt;/b&gt;: The AppMeasurement instance (or JavaScript s&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; object). &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;media&lt;/b&gt;: An object with members providing the state of&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; the video. These members include: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;ul id=&#34;ul_0EBD6D1DF653498D835D7665E551D1A4&#34;&gt;&lt;li id=&#34;li_E3FDC5FE3FF04AC1A92E305A8E863313&#34;&gt;&lt;b&gt;media.name&lt;/b&gt;:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;The name of the video. This must match the name used in Media.open. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_51D7F5B2DC364C1FA4A6254D3FCF87D9&#34;&gt;&lt;b&gt;media.length&lt;/b&gt;: The length of the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;video in seconds given in the call to Media.open. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_FEBDEC773C714901BD1AD5050C1F1B3C&#34;&gt;&lt;b&gt;media.playerName&lt;/b&gt;: The name of&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the media player given in the call to Media.open. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_EFC1B46EE6E44FE8878F1D3A8BF674A6&#34;&gt;&lt;b&gt;media.mediaEvent&lt;/b&gt;: A string&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;containing the event name that caused the monitor call. These events are: &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;ul id=&#34;ul_1CF6E02037C14556B42278A0C97E4F54&#34;&gt;&lt;li id=&#34;li_724D2E74D1A649EE93A56598B808A726&#34;&gt;&lt;b&gt;OPEN&lt;/b&gt;:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; When playback is first observed through &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.autoTrack&lt;/i&gt; or a call to &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.play&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_9342E2C17E184C6CB9AB8DE4AC1B5F10&#34;&gt;&lt;b&gt;CLOSE&lt;/b&gt;:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; When playback ends at the completion of the video through &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.autoTrack&lt;/i&gt; or at a call to&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Media.close. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_2C4800A58C1146639A5D5EC38A678EA0&#34;&gt;&lt;b&gt;PLAY&lt;/b&gt;:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; When playback resumes after being paused or scrubbing through &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.autoTrack&lt;/i&gt; or a second call to &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.play&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_E801CFB78F7B4E45A4995719FC14E142&#34;&gt;&lt;b&gt;STOP&lt;/b&gt;:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; When playback stops due to a pause of the beginning of scrubbing through&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Media.autoTrack or a call to Media.stop. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_85F0BAEA6F0F4388947174B252224890&#34;&gt;&lt;b&gt;MONITOR&lt;/b&gt;: When our automatic&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; monitoring checks the state of the video while it's playing (every second). &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_313024C2491C4AC398A86B8DC5D01E73&#34;&gt;&lt;b&gt;SECONDS&lt;/b&gt;: At the second interval&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; defined by the Media.trackSeconds variable. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_D5F54CC1681747C5A5A7255B690A066A&#34;&gt;&lt;b&gt;MILESTONE&lt;/b&gt;: At the milestones&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; defined by the Media.trackMilestones variable. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li id=&#34;li_198E5B40AF56495CA6D519B3BEB75DE0&#34;&gt;&lt;b&gt;media.openTime&lt;/b&gt;: An NSDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;object containing data about when Media.open was called. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_64F6848142124258BEA8C36D57620E4F&#34;&gt;&lt;b&gt;media.offset&lt;/b&gt;: The current&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;offset, in seconds, (actual point in the video) into the video. The offset&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;starts at zero (the first second of the video is second 0). &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_4CCAF10762C5452B84CC0A03EFB6F3B7&#34;&gt;&lt;b&gt;media.percent&lt;/b&gt;: The current&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;percentage of the video that has played, based on the video length and the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;current offset. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_D6F2794FB8114FFC8F42095D637B7D5E&#34;&gt;&lt;b&gt;media.timePlayed&lt;/b&gt;: The total&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;number of seconds played so far. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;li id=&#34;li_2C765D58EDD344B2AC82BEE9A7A309E4&#34;&gt;&lt;b&gt;media.eventFirstTime&lt;/b&gt;: Indicates&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if this was the first time this media event was called for this video. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;&lt;i&gt;Media.track&lt;/i&gt;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;&lt;b&gt;Syntax:&lt;/b&gt;&lt;code&gt;s.Media.track(mediaName)&lt;/code&gt;&lt;p&gt;Immediately sends the current video state, along with any &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.trackVars&lt;/i&gt; and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.trackEvents&lt;/i&gt; you've defined. This method&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; is used within &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.monitor&lt;/i&gt;. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;See &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;a href=&#34;video_mediamonitor.html#concept_6B10C4127F844D84A1FD0F59D818054F&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;Call &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.open&lt;/i&gt; and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;Media.play&lt;/i&gt; on the video before calling this&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; method. This method takes the following parameter: &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;b&gt;mediaName&lt;/b&gt;: The name of the video. This must match the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; name used in Media.open. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;This method is the only way to send additional variables while&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; the video is playing. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;This method resets the seconds interval and percent milestone&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; counters to zero to prevent multiple tracking hits. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;"/>
         </par>
      </jcr:content>
   </video_ref_methods>
   <video_ads jcr:primaryType="cq:Page">
      <jcr:content jcr:primaryType="nt:unstructured"
                   jcr:title="VAST Video Ad Tracking"
                   sling:resourceType="wcm/foundation/components/page">
         <par jcr:primaryType="nt:unstructured"
              sling:resourceType="wcm/foundation/components/parsys">
            <text jcr:primaryType="nt:unstructured"
                  sling:resourceType="wcm/foundation/components/text"
                  textIsRich="true"
                  text="&lt;p&gt;Ads are tracked similar to primary content videos, with additional&#xA;&#x9;&#x9;parameters tracked with them to associate them with the primary content in&#xA;&#x9;&#x9;which they are embedded. The extra parameters are: &#xA;&#x9; &lt;/p&gt;&lt;ul id=&#34;ul_63DF49D3655F48C59DAA613B9E5AB5AE&#34;&gt;&lt;li id=&#34;li_8F2EC757239D46AE8C7BF082C108596E&#34;&gt;Primary content video name -&#xA;&#x9;&#x9;  The identifier for the primary content video in which the ad is tracked. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_D80A77A9150E47FC9564FD21D3BC53EB&#34;&gt;Ad pod and pos position -&#xA;&#x9;&#x9;  The pod and position the ad is which the ad is being played in the primary&#xA;&#x9;&#x9;  content video. &#xA;&#x9;&#x9;&lt;/li&gt;&lt;li id=&#34;li_5C4BFFF3B34C49BEA42449D122384E78&#34;&gt;Ad CPM - The CPM or&#xA;&#x9;&#x9;  encrypted CPM for this ad play &#xA;&#x9;&#x9;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Otherwise ads are tracked using the same methods used to track videos.&#xA;&#x9;&#x9;The Ad ID replaces the video name when tracking ads. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;This example shows a method of tracking a VAST ad when no ad length is&#xA;&#x9;&#x9;available. If the ad length is available, you can remove the manual &#xA;&#x9;&#x9;&lt;i&gt;complete&lt;/i&gt; call and include the length in the call to &#xA;&#x9;&#x9;&lt;i&gt;openAd&lt;/i&gt;. &#xA;&#x9; &lt;/p&gt;&lt;code outputclass=&#34;syntax javascript&#34;&gt;//stop primary video&#xA;s.Media.stop(&#34;My Primary Video&#34;, 60) //replace 60 with offset location where ad was displayed&#xA;//play the ad&#xA;s.Media.openAd(&#34;My VAST Ad&#34;,-1,&#34;Freewheel&#34;,&#34;My Primary Video&#34;,&#34;Preroll&#34;,0);&#xA;s.Media.play(&#34;My VAST Ad&#34;,0);&#xA;// 30 seconds later or whenever the Freewheel ad player stops playing&#xA;s.Media.complete(&#34;My VAST Ad&#34;,30);&#xA;s.Media.stop(&#34;My VAST Ad&#34;,30);&#xA;s.Media.close(&#34;My VAST Ad&#34;);&#xA;//start primary video&#xA;s.Media.play(&#34;My Primary Video&#34;, 60)&#xA;&lt;/code&gt;&lt;table id=&#34;table_F4BB8E19A8A84BB48AB347172C22ECA3&#34;&gt;&lt;tgroup cols=&#34;3&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;3.72*&#34; /&gt;&lt;colspec colnum=&#34;3&#34; colname=&#34;col3&#34; colwidth=&#34;6.11*&#34; /&gt;&lt;thead&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;Step &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Task &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;Description &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;/row&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;1 &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Stop the primary content and start the ad. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;Call &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;s.Media.stop(&#34;My Primary Video&#34;...)&lt;/i&gt;, then call&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;s.Media.openAd(&#34;My VAST Ad&#34;...)&lt;/i&gt; as show in the&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; code example above. Since the ad length is unknown, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;-1&lt;/i&gt; is passed as the length. This means that&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; you will need to manually call complete. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;In the case where the video ad is an overlay, you can call &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;i&gt;openAd&lt;/i&gt; without stopping the primary video. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;2 &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Play the ad. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;i&gt;s.Media.play(&#34;My VAST Ad&#34;,0)&lt;/i&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;3 &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;When the ad finishes, call complete, then&#xA;&#x9;&#x9;&#x9;&#x9;  stop. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;Include the ad length as the offset parameter for both calls.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; Offset represents the seconds into the content where the media event occurs,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; starting from 0. &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/p&gt;&lt;p&gt;&lt;i&gt;s.Media.complete(&#34;My VAST Ad&#34;,30);&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;s.Media.stop(&#34;My VAST Ad&#34;,30);&lt;/i&gt;&lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;4 &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Close the ad &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;p&gt;&lt;i&gt;s.Media.close(&#34;My VAST Ad&#34;);&lt;/i&gt;&lt;/p&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td colname=&#34;col1&#34;&gt;5 &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col2&#34;&gt;Resume the primary video. &#xA;&#x9;&#x9;&#x9;&#x9;&lt;/td&gt;&lt;td colname=&#34;col3&#34;&gt;&lt;i&gt;s.Media.play(&#34;My Primary Video&#34;,60)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; //replace 60 with the actual offset location where the ad was&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; displayed&lt;/i&gt;&lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;&lt;p&gt;This same process can be used to track any type of ad, it is not&#xA;&#x9;&#x9;restricted to ads that follow the VAST standard. &#xA;&#x9; &lt;/p&gt;&lt;p&gt;See &#xA;&#x9;&#x9;&lt;i&gt;openAd&lt;/i&gt; in &#xA;&#x9;&#x9;&lt;a href=&#34;video_ref_methods.html#concept_30874334BCB54B6D8A8D49388D7F06FF&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt; and&#xA;&#x9;&#x9;the &#xA;&#x9;&#x9;&lt;a href=&#34;video_ref_variables.html#concept_338A9CA5EC1F4054B9BD07A5FF4F7DAE/section_1EF7D12D42C744A295330346017A6D67&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;. &#xA;&#x9; &lt;/p&gt;&lt;section id=&#34;section_0D6EB6BE57AC4C468273D4B58CAB16C4&#34;&gt;&lt;title&gt;Additional ContextData Mapping for Ad Tracking&lt;/title&gt;&lt;p&gt;The following variables must be configured in the &#xA;&#x9;&#x9;  &lt;i&gt;s.Media.contextDataMapping&lt;/i&gt; object to track ad metrics:&#xA;&#x9;&#x9;&lt;/p&gt;&lt;code outputclass=&#34;syntax javascript&#34;&gt;s.Media.contextDataMapping = {&#xA;&#34;a.media.name&#34;:&#34;eVar2,prop2&#34;,&#xA;&#34;a.media.segment&#34;:&#34;eVar3&#34;,&#xA;&#34;a.contentType&#34;:&#34;eVar1&#34;,&#xA;&#34;a.media.timePlayed&#34;:&#34;event3&#34;,&#xA;&#34;a.media.view&#34;:&#34;event1&#34;,&#xA;&#34;a.media.segmentView&#34;:&#34;event2&#34;,&#xA;&#34;a.media.complete&#34;:&#34;event7&#34;,&#xA;&#34;a.media.milestones&#34;:{  //optionally replace with trackOffsetMilestones&#xA;  &#x9;25:&#34;event4&#34;,&#xA;  &#x9;50:&#34;event5&#34;,&#xA;  &#x9;75:&#34;event6&#34;&#xA;  }&#xA;//ad tracking variables&#xA;&#34;a.media.ad.name&#34;:&#34;eVar4&#34;,&#xA;&#34;a.media.ad.pod&#34;:&#34;eVar5&#34;,&#xA;&#34;a.media.ad.podPosition&#34;:&#34;eVar6&#34;,&#xA;&#34;a.media.ad.CPM&#34;:&#34;eVar7,prop7&#34;,&#xA;&#34;a.media.ad.clicked&#34;:&#34;event14&#34;,&#xA;&#34;a.media.ad.segment&#34;:&#34;eVar8&#34;,&#xA;&#34;a.media.ad.timePlayed&#34;:&#34;event10&#34;,&#xA;&#34;a.media.ad.view&#34;:&#34;event8&#34;,&#xA;&#34;a.media.ad.segmentView&#34;:&#34;event9&#34;,&#xA;&#34;a.media.ad.complete&#34;:&#34;event14&#34;,&#xA;&#34;a.media.ad.milestones&#34;:{  //optionally replace with trackOffsetMilestones&#xA;  &#x9;25:&#34;event11&#34;,&#xA;  &#x9;50:&#34;event12&#34;,&#xA;  &#x9;75:&#34;event13&#34;&#xA;  }&#xA;};&lt;/code&gt;&lt;table id=&#34;table_B969ED67CD444868BE53E38FE45157FB&#34;&gt;&lt;tgroup cols=&#34;3&#34;&gt;&lt;colspec colnum=&#34;1&#34; colname=&#34;col1&#34; colwidth=&#34;1.00*&#34; /&gt;&lt;colspec colnum=&#34;2&#34; colname=&#34;col2&#34; colwidth=&#34;1.18*&#34; /&gt;&lt;colspec colnum=&#34;3&#34; colname=&#34;col3&#34; colwidth=&#34;1.54*&#34; /&gt;&lt;tbody&gt;&lt;row&gt;&lt;td&gt;&lt;b&gt; contextData&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt; Destination&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt; Description&lt;/b&gt;&lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.name &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; eVar w/ full subrelations, visits, and visitors &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; This will be the name or ID of the ad &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.pod &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; eVar &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; The position in the primary content the ad was played &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.podPosition &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; eVar &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; The position within the pod where the ad is played &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.CPM &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt;&lt;b&gt; currency event&lt;/b&gt;&lt;/td&gt;&lt;td&gt; The CPM or encrypted CPM (prefixed with a &#34;~&#34;) that&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; applies to this playback &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.view &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; counter event &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; Works the same as a.media.view &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.clicked &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; counter event &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; Count the number of clicks for the ad (Media.click calls)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.timePlayed &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; counter event &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; Works the same as a.media.timePlayed &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.complete &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; counter event &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; Works the same as a.media.complete &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.segment &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; eVar &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; Works the same as a.media.segment &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.segmentView &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; counter event &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; Works the same as a.media.segmentView &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.milestones &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; counter event &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; Works the same as a.media.milestones &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;row&gt;&lt;td&gt; a.media.ad.offsetMilestones &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; counter event &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;td&gt; Works the same as a.media.offsetMilestones &#xA;&#x9;&#x9;&#x9;&#x9;  &lt;/td&gt;&lt;/row&gt;&lt;/tbody&gt;&lt;/tgroup&gt;&lt;/table&gt;&lt;/section&gt;"/>
         </par>
      </jcr:content>
   </video_ads>
   <video_ref_faq jcr:primaryType="cq:Page">
      <jcr:content jcr:primaryType="nt:unstructured"
                   jcr:title="Measuring Video FAQ"
                   sling:resourceType="wcm/foundation/components/page">
         <par jcr:primaryType="nt:unstructured"
              sling:resourceType="wcm/foundation/components/parsys">
            <text jcr:primaryType="nt:unstructured"
                  sling:resourceType="wcm/foundation/components/text"
                  textIsRich="true"
                  text="&lt;section id=&#34;section_734551C1360F4A53B8E4DA7584196E78&#34;&gt;&lt;title&gt;What is Autotrack?&lt;/title&gt;&lt;p&gt;To effectively measure video, the &#xA;&#x9;&#x9;  media module needs a way to find out what is&#xA;&#x9;&#x9;  happening in your player. For example, when a user starts playing a video, the &#xA;&#x9;&#x9;  media module needs to start counting seconds viewed.&#xA;&#x9;&#x9;  If the user pauses the video, the &#xA;&#x9;&#x9;  media module must also pause the count as well. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;If AutoTrack is supported for your player, it means that the code to&#xA;&#x9;&#x9;  monitor what is happening in your player is already present in the &#xA;&#x9;&#x9;  media module. For a developer, this means that you&#xA;&#x9;&#x9;  do not need to call open, play, stop, or close since the &#xA;&#x9;&#x9;  media module can already track these events. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;If AutoTrack is not supported for your player, it means you need to&#xA;&#x9;&#x9;  add code that tells the &#xA;&#x9;&#x9;  media module when events occur in your player (using&#xA;&#x9;&#x9;  the open, play, stop, and close methods). When a user starts playing a video,&#xA;&#x9;&#x9;  you need to call the play method so the &#xA;&#x9;&#x9;  media module starts counting seconds viewed. If the&#xA;&#x9;&#x9;  user pauses the video, you need to call stop so the count is paused. This is&#xA;&#x9;&#x9;  typically performed using event handlers that are exposed by your player.&#xA;&#x9;&#x9;  Additional details are provided on how to do this in the Implementation Guides&#xA;&#x9;&#x9;  for video players that do not support autotrack. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;&lt;section id=&#34;section_6B2D872ADFB44DBE951EE4548F09DCB8&#34;&gt;&lt;title&gt;What is the Media Module? Is it different from&#xA;&#x9;&#x9;  AppMeasurement?&lt;/title&gt;&lt;p&gt;The &#xA;&#x9;&#x9;  media module refers to the Media class that is part&#xA;&#x9;&#x9;  of the AppMeasurement libraries. All video measurement functionality is part of&#xA;&#x9;&#x9;  the &#xA;&#x9;&#x9;  media module, meaning that you reference video&#xA;&#x9;&#x9;  measurement variables and methods using the Media prefix. For example, If s is&#xA;&#x9;&#x9;  the name of your JavaScript object or AppMeasurement instance, reference &#xA;&#x9;&#x9;  media module components using the s.Media prefix. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;For JavaScript, the &#xA;&#x9;&#x9;  media module must be downloaded and included&#xA;&#x9;&#x9;  separately. For all other languages the &#xA;&#x9;&#x9;  media module is part of the core AppMeasurement&#xA;&#x9;&#x9;  library. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;The &#xA;&#x9;&#x9;  media module is implemented to be as identical as&#xA;&#x9;&#x9;  possible across all AppMeasurement libraries. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;&lt;section id=&#34;section_E8796F8CDB3A46DEB935B20038ACA019&#34;&gt;&lt;title&gt;What is Media.monitor?&lt;/title&gt;&lt;p&gt;Media monitor lets you send additional metrics and perform other&#xA;&#x9;&#x9;  actions during playback. To use &#xA;&#x9;&#x9;  &lt;i&gt;Media.monitor&lt;/i&gt;, you define a function that is&#xA;&#x9;&#x9;  automatically called: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_2821128D7F464671A314AD6F873727FA&#34;&gt;&lt;li id=&#34;li_FC915A11D7F74651B065C0386E7C83C6&#34;&gt;Every second while the&#xA;&#x9;&#x9;&#x9; video is playing. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_D3785F89E26A477D97192AF12816FD7D&#34;&gt;When an autoTrack&#xA;&#x9;&#x9;&#x9; implementation, such as the OSMF plug-in, captures a player event like&#xA;&#x9;&#x9;&#x9; scrubbing, pausing or resuming, end of video playback, etc. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_45F33DA9FA114869B2C55DD6E76557F3&#34;&gt;When a non-autoTrack&#xA;&#x9;&#x9;&#x9; (manual) implementation calls &#xA;&#x9;&#x9;&#x9; &lt;i&gt;Media.open&lt;/i&gt;, &#xA;&#x9;&#x9;&#x9; &lt;i&gt;Media.play&lt;/i&gt;, &#xA;&#x9;&#x9;&#x9; &lt;i&gt;Media.stop&lt;/i&gt;, or &#xA;&#x9;&#x9;&#x9; &lt;i&gt;Media.close&lt;/i&gt;. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Your function is provided a media object that contains details about&#xA;&#x9;&#x9;  the video state, including the event that triggered the call, where playback is&#xA;&#x9;&#x9;  occurring, and so on. You can then send additional metrics based on this&#xA;&#x9;&#x9;  information. For details see &#xA;&#x9;&#x9;  &lt;a href=&#34;video_mediamonitor.html#concept_6B10C4127F844D84A1FD0F59D818054F&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;&lt;section id=&#34;section_F8C606A5851C45D297F981AA2D9CBF8A&#34;&gt;&lt;title&gt;Can I a set video complete before the video reaches 100%?&lt;/title&gt;&lt;p&gt;Yes. For example, if you show credits at the end of your video, you&#xA;&#x9;&#x9;  might want to count a complete view before the end of the video file. To do&#xA;&#x9;&#x9;  this, specify a value for &#xA;&#x9;&#x9;  &lt;i&gt;s.Media.completeCloseOffsetThreshold&lt;/i&gt; equal to the&#xA;&#x9;&#x9;  number of seconds before the end that you want to send a complete event. For&#xA;&#x9;&#x9;  example, if you show 10 seconds of credits at the end of your video, you could&#xA;&#x9;&#x9;  set &#xA;&#x9;&#x9;  &lt;i&gt;s.Media.completeCloseOffsetThreshold = 10&lt;/i&gt;.&#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;For live events and video streams that do not have a defined end, you&#xA;&#x9;&#x9;  can call complete manually. See &#xA;&#x9;&#x9;  &lt;a href=&#34;video_ref_methods.html#concept_30874334BCB54B6D8A8D49388D7F06FF&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;.&#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;&lt;section id=&#34;section_3FEF7DE0876A4BF4BA6E3412F84AAE4A&#34;&gt;&lt;title&gt;Do I have to dedicate a custom event to each milestone?&lt;/title&gt;&lt;p&gt;At a minimum, you should dedicate a custom event for video complete.&#xA;&#x9;&#x9;  Whether you send an event with the other milestones depends on what you want to&#xA;&#x9;&#x9;  track. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;If you want to view fallout for a single video, the Video Detail&#xA;&#x9;&#x9;  report is populated with the segment eVar and Segment View event. This lets you&#xA;&#x9;&#x9;  see fallout without sending events for each milestone. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;Sending in an event with each milestone lets you measure if a&#xA;&#x9;&#x9;  milestone is reached across multiple videos in one report. If you want to view&#xA;&#x9;&#x9;  data about a milestone in other reports or across multiple videos, you should&#xA;&#x9;&#x9;  send an event. If you are interested in viewing fallout for each video&#xA;&#x9;&#x9;  individually you typically don't need to send events for each milestone. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;/section&gt;"/>
         </par>
      </jcr:content>
   </video_ref_faq>
   <video_migrate jcr:primaryType="cq:Page">
      <jcr:content jcr:primaryType="nt:unstructured"
                   jcr:title="Migrating to Integrated Video Tracking"
                   sling:resourceType="wcm/foundation/components/page">
         <par jcr:primaryType="nt:unstructured"
              sling:resourceType="wcm/foundation/components/parsys">
            <text jcr:primaryType="nt:unstructured"
                  sling:resourceType="wcm/foundation/components/text"
                  textIsRich="true"
                  text="&lt;section id=&#34;section_DC7AA753C0F448A394D4DFFD59C0AFDA&#34;&gt;&lt;title&gt;About Integrated Video Tracking&lt;/title&gt;&lt;p /&gt;&lt;p&gt;Integrated video tracking collects video data using Custom Conversion&#xA;&#x9;&#x9;  Variables (eVars) and Events. Using these variables to collect video data lets&#xA;&#x9;&#x9;  you integrate video data with other reporting data on your reports (Legacy&#xA;&#x9;&#x9;  pev3 video data was collected using a custom variable that prevented&#xA;&#x9;&#x9;  integration). This change enhances your ability to analyze the impact of video&#xA;&#x9;&#x9;  on other aspects of your on-line marketing strategy. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;You can implement integrated video tracking on version 14 in&#xA;&#x9;&#x9;  preparation for version 15 migration. Integrated video tracking can be&#xA;&#x9;&#x9;  implemented on version 14 or later, and is required by version 15. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;The following list explains how integrated video tracking is affected&#xA;&#x9;&#x9;  as you migrate from version 14 to 15. &#xA;&#x9;&#x9;&lt;/p&gt;&lt;p&gt;If you remain on version 14: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_408A17E95BCC429D9F394DBDB4A0667D&#34;&gt;&lt;li id=&#34;li_57D58B89277143098B881E2BF1289E31&#34;&gt; You can use existing version 14&#xA;&#x9;&#x9;&#x9; video implementation for existing version 14 reports. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_7414E404AE0C400EB84DDCE2FC4F81C2&#34;&gt;You can upgrade video&#xA;&#x9;&#x9;&#x9; implementation before moving to version 15. (To upgrade, contact your Account&#xA;&#x9;&#x9;&#x9; Manager.) &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_472B10F51D3740B3A63C513849427771&#34;&gt; You will not have access&#xA;&#x9;&#x9;&#x9; to any of the new version 15 features, video or otherwise. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you migrate to version 15 &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_6729808A42F6473C92F53B2F4C6DC5CA&#34;&gt;&lt;li id=&#34;li_E2BBD585EF784EE99BA45FF223857AE3&#34;&gt;To track/view any new&#xA;&#x9;&#x9;&#x9; video data, you must re-implement video module. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_6B0ABD199C1C46DC97B12E86FC5CC5E1&#34;&gt; You can view previous&#xA;&#x9;&#x9;&#x9; video data by logging into version 14, but after the upgrade to v.15, no video data&#xA;&#x9;&#x9;&#x9; will be processed using version 14 platform. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;li id=&#34;li_8259B81675C6483B8E14D5444A356B03&#34;&gt;No integration of version 14&#xA;&#x9;&#x9;&#x9; video data with new data collected in version 15. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Custom solutions created by Consulting Group &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_FA733084444D4D22822B7150E306936D&#34;&gt;&lt;li id=&#34;li_39824929850F4B079456CA675AE9DF27&#34;&gt;Custom solutions might not&#xA;&#x9;&#x9;&#x9; require immediate re-implementation if moving to version 15, but re-implementation is&#xA;&#x9;&#x9;&#x9; required for all new features. &#xA;&#x9;&#x9;  &lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;"/>
         </par>
      </jcr:content>
      <video_migrate_analyst jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Migrating for Web Analysts"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p&gt;For a Web analyst, migrating to integrated video tracking is similar to&#xA;&#x9;&#x9;defining a new implementation. Complete the instructions defined in &#xA;&#x9;&#x9;&lt;a href=&#34;../video_analyst.html#concept_4425679F462942889CB194A5B114823E&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&#xA;&#x9;&#x9;and then fill out the &#xA;&#x9;&#x9;&lt;a href=&#34;../video_worksheet.html#concept_0A7B2FAC52B04AE6BFD8747B57D56222&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&#xA;&#x9;&#x9;to give to your developer. You developer can use the information in this&#xA;&#x9;&#x9;worksheet to migrate your existing implementation.&#xA;&#x9; &lt;/p&gt;"/>
            </par>
         </jcr:content>
      </video_migrate_analyst>
      <video_migrate_developer jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="Flash, Silverlight, and JavaScript Migration Guide"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p id=&#34;context_495BCE3C0C4D4D5AAA86A455BE4C00B8&#34;&gt;&lt;p&gt;Complete the steps in the following list to migrate your video&#xA;&#x9;&#x9;  tracking solution to the new integrated solution. After you complete these&#xA;&#x9;&#x9;  migration steps, you can recompile and test the solution. Sample&#xA;&#x9;&#x9;  implementations are available in these &#xA;&#x9;&#x9;  &lt;a href=&#34;../video_developer.html#concept_150EEA9364D24ED08F07D1359E6134C9&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&#xA;&#x9;&#x9;  sections: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_6A5355C20AB242CDB44F85EA18883D23&#34;&gt;&lt;li id=&#34;li_C315BB0BDF21452FA9F7C8E10A5A683F&#34;&gt;&lt;a href=&#34;../video_flash_sample.html#concept_BBDB825EB2D6400C8900F03DCEEAA544&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_D606B8A969D641FDBA3E4D8B96E19FE6&#34;&gt;&lt;a href=&#34;../video_js_sample.html#concept_7B17ACCC514C4B8A9847AB799A2E29F4&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_260E6E0D0B5745FB9320B53148BFDC6C&#34;&gt;&lt;a href=&#34;../video_silverlight_sample.html#concept_4B8F3D5AD7D84B93A49459988225E53D&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You can reference the following sections as you migrate: &#xA;&#x9;&#x9;&lt;/p&gt;&lt;ul id=&#34;ul_CADB341869EC457097F4B4204B7A3786&#34;&gt;&lt;li id=&#34;li_FB33A811EA5E4489BE29E1BEC821811C&#34;&gt;&lt;a href=&#34;../video_arch.html#concept_69C0067F59DC4AEC81A3603857B1434C&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_408C1F92F6344549982C66CBA64D442F&#34;&gt;&lt;a href=&#34;../video_ref_methods.html#concept_30874334BCB54B6D8A8D49388D7F06FF&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_A856DD939F02459E93D079039B9EC255&#34;&gt;&lt;a href=&#34;../video_ref_variables.html#concept_338A9CA5EC1F4054B9BD07A5FF4F7DAE&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_81314D7A569748B590F619E3B35FB0D9&#34;&gt;&lt;a href=&#34;../video_mediamonitor.html#concept_6B10C4127F844D84A1FD0F59D818054F&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;ul id=&#34;steps_D9E026C943C2466B9CEF92692C1F3DF3&#34;&gt;&lt;li id=&#34;step_1E8562BCB09542CE9A0B8DF28669F1DA&#34;&gt;&lt;b&gt;&lt;a href=&#34;../video_migrate_developer.html#task_3A6F3C055BFA4FDD96789D4913651300&#34; type=&#34;task&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/b&gt;&lt;/li&gt;&lt;li id=&#34;step_4C781C7F462B43BBAEB422D2B83E9C66&#34;&gt;&lt;b&gt;&lt;a href=&#34;../video_migrate_developer.html#task_E9AE46D65B4E489D927AF3A13F2B93DE&#34; type=&#34;task&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_5C87E4E4F0694E3280D7B41A035C0BC0&#34;&gt;&lt;b&gt;&lt;a href=&#34;../video_migrate_developer.html#task_2D70D59881B7483BB0C676CE53EFB2A8&#34; type=&#34;task&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;li id=&#34;step_AB73C783DDA04543B860C4F8AF7892C5&#34;&gt;&lt;b&gt;&lt;a href=&#34;../video_migrate_developer.html#task_A268635E2DB04023A11E505E1FF9244D&#34; type=&#34;task&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/b&gt;&lt;p /&gt;&lt;/li&gt;&lt;/ul&gt;"/>
            </par>
         </jcr:content>
      </video_migrate_developer>
      <video_migrate_developer_osmf jcr:primaryType="cq:Page">
         <jcr:content jcr:primaryType="nt:unstructured"
                      jcr:title="OSMF Migration Guide"
                      sling:resourceType="wcm/foundation/components/page">
            <par jcr:primaryType="nt:unstructured"
                 sling:resourceType="wcm/foundation/components/parsys">
               <text jcr:primaryType="nt:unstructured"
                     sling:resourceType="wcm/foundation/components/text"
                     textIsRich="true"
                     text="&lt;p&gt;Complete the steps in the following list to migrate your video tracking&#xA;&#x9;&#x9;solution to the new integrated solution. After you complete these migration&#xA;&#x9;&#x9;steps, you can recompile and test the solution. Sample implementations are&#xA;&#x9;&#x9;available in these sections: &#xA;&#x9; &lt;/p&gt;&lt;ul id=&#34;ul_6A5355C20AB242CDB44F85EA18883D23&#34;&gt;&lt;li id=&#34;li_C315BB0BDF21452FA9F7C8E10A5A683F&#34;&gt;&lt;a href=&#34;../video_osmf_dynamic.html#concept_20417E8BA5FE45D0A2DA8A271669E559&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_D606B8A969D641FDBA3E4D8B96E19FE6&#34;&gt;&lt;a href=&#34;../video_osmf_dynamic_custom.html#concept_B00E2B15A2EF4F46A89FA887929FFCFD&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_260E6E0D0B5745FB9320B53148BFDC6C&#34;&gt;&lt;a href=&#34;../video_osmf_static.html#concept_982C32CC35CE44F8A3543DF9AD741C83&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You can reference the following sections as you migrate: &#xA;&#x9; &lt;/p&gt;&lt;ul id=&#34;ul_CADB341869EC457097F4B4204B7A3786&#34;&gt;&lt;li id=&#34;li_FB33A811EA5E4489BE29E1BEC821811C&#34;&gt;&lt;a href=&#34;../video_arch.html#concept_69C0067F59DC4AEC81A3603857B1434C&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_408C1F92F6344549982C66CBA64D442F&#34;&gt;&lt;a href=&#34;../video_ref_methods.html#concept_30874334BCB54B6D8A8D49388D7F06FF&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_A856DD939F02459E93D079039B9EC255&#34;&gt;&lt;a href=&#34;../video_ref_variables.html#concept_338A9CA5EC1F4054B9BD07A5FF4F7DAE&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;li id=&#34;li_81314D7A569748B590F619E3B35FB0D9&#34;&gt;&lt;a href=&#34;../video_mediamonitor.html#concept_6B10C4127F844D84A1FD0F59D818054F&#34; type=&#34;concept&#34; format=&#34;dita&#34; scope=&#34;local&#34; /&gt;&lt;/li&gt;&lt;/ul&gt;"/>
            </par>
         </jcr:content>
      </video_migrate_developer_osmf>
   </video_migrate>
</jcr:root>