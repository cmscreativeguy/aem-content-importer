<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_9EFF968DF5D244A887DE94075431C1BE"> 
  <title>General File Structure</title> 
  <shortdesc>Example of a sample classifications data file and detailed
	 information about its structure. 
  </shortdesc> 
  <prolog> 
	 <metadata> 
		<othermeta name="solution" content="Analytics"/> 
		<othermeta name="topic" content="Admin tools"/> 
		<othermeta name="subtopic" content="Classifications"/> </metadata>
  </prolog> 
  <conbody> 
	 <p>The following illustration is a sample data file: 
	 </p> 
	 <p> 
		<image placement="inline" href="graphics/completed saint file.png"
		 id="image_4A12957D76F84773B80ECDF64A1B1064"> <?xm-replace_text Paragraph?>
		</image> 
	 </p> 
	 <p>A data file must adhere to the following structure rules: 
	 </p> 
	 <p> 
	 <ul id="ul_33B9853D651940649AF153B6C6B9FA41"> 
		<li id="li_9F245CF9735948DEBF00F94BE737E7D9">Adobe recommends that you
		  limit the number of import and export columns to 30. 
		</li>
		<li id="li_36BC5CA0D4D14D5CAD01979E221E7423">Uploaded files should use
		  UTF-8 without BOM character encoding. 
		</li> 
		<li id="li_05432B33CFEA4E6B9EEAB044E729039C"> Special characters, such as
		  a tabs, newlines, and quotes can be embedded within a cell provided the v2.1
		  file format is specified and the cell is properly 
		  <xref
			href="t_classifications_escape_data.xml#task_EB47E80063F14F9CB2D186C0CAA9CBAD"
			format="dita" scope="local">escaped</xref>. Special characters include: 
		  <p> 
			 <codeblock>\t     tab character
\r     form feed character
\n    newline character
"       double quote</codeblock> 
		  </p> 
		  <p>The comma is not a special character. 
		  </p> 
		</li> 
		<li id="li_2593812F9AB74FA5BAE2357CF674AAF5">Classifications cannot
		  contain a caret (^) since this character is used to denote a
		  sub-classification. 
		</li> 
		<li id="li_AA0A0A6849F14258A318660CAF7451E9"> Use care when using a
		  hyphen. For example, if you use a hyphen (-) in a Social term, Social
		  recognizes the hyphen as a 
		  <filepath>Not</filepath> operator (the minus sign). For example, if you
		  specify 
		  <term>fragrance-free</term> as a term using the import, Social
		  recognizes the term as fragrance 
		  <term>minus</term> free and collects posts that mention 
		  <term>fragrance</term>, but not 
		  <term>free</term>. 
		</li> 
		<li id="li_8B0342B4D2E64BE6909BE5B1C3D02BA4">Character limits are
		  enforced to classify report data. 
		  <p>For example, if you upload a classifications text file for products
			 (<varname>s.products</varname>) with product names longer than 100 characters
			 (bytes), the products will not display in reporting. Tracking Codes and all
			 custom conversion variables (eVars) allow 255 bytes. 
		  </p> 
		  <p>See 
			 <xref
			 href="http://marketing.adobe.com/resources/help/en_US/home/index.html#kb-using-allowable-characters-limits"
			 format="http" scope="external">Allowable Characters</xref> for more information
			 about character limits. 
		  </p> 
		</li> 
		<li id="li_A1A1E6BFDBA34BD292CCA397B9D04847">Tab-delimited data file
		  (create the template file using any spreadsheet application or text editor). 
		</li> 
		<li id="li_32A82B31A6C44148B49CF4712EC3FB0E">Either a 
		  <filepath>.tab</filepath> or 
		  <filepath>.txt</filepath> file extension. 
		</li> 
		<li id="li_04CFF3CCC1EA4ABB8E3E841A700A6573">A pound sign (#) identifies
		  the line as a user comment. Adobe ignores any line that begins with #. 
		</li> 
		<li id="li_426B8B0C84EB457AA89D14D153CB3B4A">A double-pound sign followed
		  by SC (## SC) identifies the line as a pre-processing header comment used by
		  reporting. Do not delete these lines. 
		</li> 
		<li id="li_73629DB3A3A44F459E3B7F8DDFCE2B4A">Classification exports can
		  have duplicate keys due to newline characters in the key. In an FTP or browser
		  export, this can be resolved by turning on quoting for the FTP account. This
		  will place quotes surrounding each key with newline characters. 
		</li> 
		<li id="li_99DD9542715A4C8ABEB29B359D7A1A28">Cell C1 in the first line of
		  the import file contains a version identifier that determines how
		  classifications handle the use of quotes throughout the remainder of the file. 
		  <ul id="ul_FA27C9549417429087203FF4023FE716"> 
			 <li id="li_E2B4CADAC6394E8E8C83EB56E3A57E45">v2.0 ignores quotes and
				assumes they are all part of the keys and values specified. For example,
				consider this value: "This is ""some value""". v2.0 would interpret this
				literally as: "This is ""some value""". 
			 </li> 
			 <li id="li_910F396A8A9747B78618521FB5D68BBF">v2.1 tells
				classifications to assume that quotes are part of the file formatting used in
				Excel files. So v2.1 would format the above example to: This is "some value". 
			 </li> 
			 <li id="li_6C6F7884B9B0458195FA08269A8CF432">Problems can arise when
				v2.1 is specified in the file, but what is actually wanted is v2.0 - namely,
				when quotes are used in ways that is illegal under Excel formatting. For
				example, if you have a value: "VP NO REPS" S/l Dress w/ Overlay. With v2.1,
				this is incorrect formatting (the value should be surrounded by opening and
				closing quotes and quotes that are part of the actual value should be escaped
				by quotes) and classifications will not work beyond this point. 
			 </li> 
			 <li id="li_3AD3117A3CCF4299848862139C5B820C">Make sure you do one of
				the following: change your file format to v2.0 by changing the header (cell C1)
				in the files you upload, OR properly implement Excel quoting throughout your
				files. 
			 </li> 
		  </ul> 
		</li> 
		<li id="li_F6B04D5425B14899ADD5CFDA81B754EF">The first (non-comment) row
		  of the data file contains the column headings used to identify the
		  classification data in that column. The importer requires a specific format for
		  column headings. For more information, see 
		  <xref
		  href="c_column_heading_format.xml#concept_ADC08C783477451B959782CEA23AF5EF"
		  type="concept" format="dita" scope="local">Column Heading Format</xref>. 
		</li> 
		<li id="li_E216C38B0DF147039EA1055B27C2639C">Immediately following the
		  header row in a data file are the data rows. Each line of data should contain a
		  data field for each column heading. 
		</li> 
		<li id="li_5B67AB106B084765B6618497BD373365">The data file supports the
		  following control codes, which Adobe uses to provide structure to the file, and
		  correctly import classifications data: 
		  <table id="table_0548F2E58B6644208147434EB9B3C21B"> 
			 <tgroup cols="2"><colspec colnum="1" colname="col1"
				colwidth="1.00*"/><colspec colnum="2" colname="col2" colwidth="1.74*"/><thead> 
				  <row> 
					 <entry colname="col1">CONTROL CODE 
					 </entry> 
					 <entry colname="col2">DESCRIPTION 
					 </entry> 
				  </row></thead> 
				<tbody> 
				  <row> 
					 <entry colname="col1"> 
						<p>&lt;Carriage Return&gt; or &lt;New Line&gt; 
						</p> 
					 </entry> 
					 <entry colname="col2"> 
						<p>A carriage return or new line character functions as a
						  separator between data records in the data file. Typically, you only need to
						  specifically insert these characters when writing a program to automatically
						  generate data files. 
						</p> 
					 </entry> 
				  </row> 
				  <row> 
					 <entry colname="col1"> 
						<p>~autogen~ 
						</p> 
					 </entry> 
					 <entry colname="col2"> 
						<p>Requests that Adobe automatically generate a unique id for
						  this element. 
						</p> 
						<p>In the campaign context, this control value instructs
						  Adobe to assign an identifier to each creative element. See 
						  <xref
						  href="c_key.xml#concept_0B77B3079B5C414F9956058688990443"
						  type="concept" format="dita" scope="local">&lt;&lt;“Key” on page
							 12.&gt;&gt;</xref>. 
						</p> 
					 </entry> 
				  </row> 
				  <row> 
					 <entry colname="col1"> 
						<p>~period~ 
						</p> 
					 </entry> 
					 <entry colname="col2"> 
						<p>Designates that the data column represents the date range
						  associated with the item. See 
						  <xref
						  href="c_date.xml#concept_9ECCD5ED97764CDC90C0B7B0F9461825" type="concept"
						  format="dita" scope="local"><?xm-replace_text Date?></xref>. 
						</p> 
					 </entry> 
				  </row> 
				  <row> 
					 <entry colname="col1"> 
						<p>Empty field 
						</p> 
					 </entry> 
					 <entry colname="col2"> 
						<p>Represents a NULL value for the current field. Use this if
						  a particular data column does not apply to the current record. 
						</p> 
					 </entry> 
				  </row> 
				  <row> 
					 <entry colname="col1"> 
						<p>PER Modifiers 
						</p> 
					 </entry> 
					 <entry colname="col2"> 
						<p>Designates that the data column represents a 
						  <wintitle>PER Modifier</wintitle> field. See 
						  <xref
						  href="c_per_modifier_headings.xml#concept_7E199A26E3274B31B07CCAF8DFE3B274"
						  type="concept" format="dita" scope="local"><?xm-replace_text PER Modifier Headings?></xref>.
						  
						</p> 
					 </entry> 
				  </row> 
				</tbody> 
			 </tgroup> 
		  </table> 
		</li> 
	 </ul> 
	 </p> 
  </conbody> 
  <related-links> 
	 <link
	 href="http://marketing.adobe.com/resources/kb/en_US/analytics/kb/common-saint-upload-issues.html"
	 format="http" scope="external"> 
		<linktext>Common SAINT Upload Issues 
		</linktext> 
	 </link> 
  </related-links> 
</concept> 
