<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_4FB5866D8ABC4B37A9D8F6ACD8BFB9B2"> 
  <title>How Processing Rules Work</title> 
  <shortdesc>Processing rules let you make changes to data based on defined
	 conditions. When attributes or values match defined conditions, values can be
	 set and deleted, and events can be set. 
  </shortdesc> 
  <prolog> 
	 <metadata> 
		<othermeta name="solution" content="Analytics"/> 
		<othermeta name="topic" content="Admin tools"/> 
		<othermeta name="subtopic" content="Processing rules"/> </metadata>
  </prolog> 
  <conbody> 
	 <p>Processing rules are applied to data as it is collected, and rules are
		applied to all data that comes through the AppMeasurement libraries and through
		the Data Insertion API. Processing rules also apply to the full and log data
		sources. These sources contain data that represents a 
		<term>hit</term> or an action that a user takes. Processing rules do not
		apply to other data sources. 
	 </p> 
	 <ul id="ul_04F31DA6B3DA42C5A2DB4328E2CF83FB"> 
		<li id="li_B3D4328C356C44F59BDC048BC1660956"> 
		  <xref
			href="processing_rules_about.xml#concept_4FB5866D8ABC4B37A9D8F6ACD8BFB9B2/section_EB138775E7C64C74B0D1D3213F7A823C"
			format="dita" scope="local"> <?xm-replace_text Important Concepts?>
		  </xref> 
		</li> 
		<li id="li_D0C78452143A4034A6B1B81AEA28F92D"> 
		  <xref
			href="processing_rules_about.xml#concept_4FB5866D8ABC4B37A9D8F6ACD8BFB9B2/section_387390EEE9BA4DA98698522A84326DB4"
			format="dita" scope="local"> <?xm-replace_text Processing Rule Conditions?>
		  </xref> 
		</li> 
		<li id="li_E101DABE042543659BBF603762D1552A"> 
		  <xref
			href="processing_rules_about.xml#concept_4FB5866D8ABC4B37A9D8F6ACD8BFB9B2/section_E2285C9D008442C7BF136E52A9A4CC06"
			format="dita" scope="local"> <?xm-replace_text Processing Rule Actions?>
		  </xref> 
		</li> 
	 </ul> 
	 <section id="section_EB138775E7C64C74B0D1D3213F7A823C"> 
		<title>Important Concepts</title> 
		<p>The following table contains key concepts you need to understand when
		  using processing rules: 
		</p> 
		<table id="table_287C606AE26E47AA8F737411990ACEB2"> 
		  <tgroup cols="2"> 
			 <colspec colnum="1" colname="col1" colwidth="*"/> 
			 <colspec colnum="2" colname="col2" colwidth="*"/> 
			 <thead> 
				<row> 
				  <entry colname="col1"> 
					 <p>Concept 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Details 
					 </p> 
				  </entry> 
				</row> 
			 </thead> 
			 <tbody> 
				<row> 
				  <entry colname="col1"> 
					 <p>Rules apply to a single report suite. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> 
						<xref
						 href="t_processing_rules_copy_to_rs.xml#task_6E4B82FCA687409B88F17EAFC353755D"
						 type="task" format="dita" scope="local"> <?xm-replace_text Copy processing rules to another report suite?>
						</xref> 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Processing rules are applied in the order listed. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>If an action changes a value, subsequent conditions use the
						new value. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Processing rules are applied immediately to the report suite
						after they are saved. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Changes from processing rules should be visible in your
						report suite within minutes of saving. When testing processing rules, we
						recommend configuring 
						<xref
						 href="realtime.xml#concept_6E8756BDDAE843F88B6563C09C48B0B6" format="dita"
						 scope="local"><?xm-replace_text Real-Time Reports?></xref> in your test report
						suite so you can quickly see the results of a processing rule. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Processing rules are the only way to access to context data
						variables. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> 
						<xref
						 href="processing_rules_copy_context_data.xml#concept_43AA4980A2D847D6A3BEC50BCC0780E7"
						 format="dita" scope="local"> <?xm-replace_text Copy a Context Data Variable to an eVar?>
						</xref> 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Processing rules are applied before VISTA rules and
						Marketing Channel rules. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> 
						<xref
						 href="processing_rule_order.xml#concept_8A6BBEA7F50C40C8A8D8755D4F579B1E"
						 type="concept" format="dita" scope="local"> <?xm-replace_text Processing Order?>
						</xref> 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Hits cannot be excluded. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>You can use VISTA rules to exclude hits. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>The product string, referrer, and user agent cannot be
						changed. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Referrer and user agent are read-only. The product string is
						not available. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Mobile device attributes and classifications are not
						available. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>The mobile device lookup occurs before processing rules, but
						attributes are not available in processing rules. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Query string parameters cannot be read beyond the first 255
						characters of a URL if you are running JavaScript AppMeasurement H.25.2 or
						earlier. JavaScript AppMeasurement H.25.3 (released January 2013) and later
						provide the full URL including all query string parameters to processing rules.
						
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Upgrade to H.25.3 or later, or read query string parameters
						from long URLs client-side and store values in Context Data variables. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Query string values must be encoded in Unicode or UTF-8 to
						be read by processing rules. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>This might affect multibyte characters that are passed using
						query strings. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>You are limited to 100 rules (expanded from 50 rules in
						February 2014) with 30 conditions each for each report suite. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Processing rule limits are per report suite, not per
						company. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Processing rules must be set up to retrieve context data
						variables before data is sent. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Processing rules are applied as server calls are sent.
						Values stored in context data variables are discarded if they are not copied
						using processing rules. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Value comparisons in the UI are case insensitive. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> 
						<xref
						 href="clean_up_values_in_a_report.xml#concept_958E924BCCBB4BBA91CE91C977FE5151"
						 type="concept" format="dita" scope="local"> <?xm-replace_text Cleaning up Values in a Report?>
						</xref>. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Context data variable names can contain only alphanumeric
						characters, underscores and dots. Any additional characters are stripped out. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>For example, The context data variable 
						<codeph>login_page-home</codeph> automatically becomes 
						<codeph>login_pagehome</codeph>. All data sent to the 
						<codeph>login_page-home</codeph> variable is allocated under 
						<codeph>login_pagehome</codeph>. 
					 </p> 
					 <p>Context data variables that contain unsupported characters
						cannot be added in the Processing Rules interface. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p>Caret (^) is a special character in the processing rules
						system. 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>To match a single caret character, use two caret characters
						(^^). 
					 </p> 
				  </entry> 
				</row> 
			 </tbody> 
		  </tgroup> 
		</table> 
	 </section> 
	 <section id="section_387390EEE9BA4DA98698522A84326DB4"> 
		<title> Processing Rule Conditions</title> 
		<p>Conditions check page variables for a matching value or if a value is
		  present. Multiple conditions can be added and you can select if all conditions
		  must be matched. 
		</p> 
		<p>You can create a rule with no conditions to always execute defined
		  actions. 
		</p> 
		<p>Variables are not automatically checked for values before actions
		  occur. For example, Prop1 contains a value of "something", and eVar1 is empty.
		  If you set Prop1 to equal eVar1 both values will be empty. If you need to avoid
		  this add a condition to check for the presence of a value. 
		</p> 
	 </section> 
	 <section id="section_E2285C9D008442C7BF136E52A9A4CC06"> 
		<title>Processing Rule Actions</title> 
		<p>Actions set page variables, delete page variables, or trigger events.
		  Actions can also concatenate values to display in a report. 
		</p> 
		<p>For example, you might want to display 
		  <codeph>category:product</codeph> by concatenating two variables. 
		</p> 
	 </section> 
  </conbody> 
</concept> 
