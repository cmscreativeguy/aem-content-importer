<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_C02F7AA01DE242F1AA1A4E74022BE9DE"> 
  <title>Conversion Variables (eVar)</title> 
  <shortdesc>The 
	 <varname>Custom Insight Conversion Variable</varname> (or eVar) is placed
	 in the Adobe code on selected web pages of your site. Its primary purpose is to
	 segment conversion success metrics in custom marketing reports. An eVar can be
	 visit-based and function similarly to cookies. Values passed into eVar
	 variables follow the user for a predetermined period of time. 
  </shortdesc> 
  <prolog> 
	 <metadata> 
		<keywords> 
		  <keyword>eVar</keyword> 
		</keywords> 
		<othermeta name="solution" content="Analytics"/> 
		<othermeta name="topic" content="Admin tools"/> </metadata>
  </prolog> 
  <conbody> 
	 <p>When an eVar is set to a value for a visitor, Adobe automatically
		remembers that value until it expires. Any success events that a visitor
		encounters while the eVar value is active are counted toward the eVar value. 
	 </p> 
	 <p>eVars are best used to measure cause and effect, such as: 
	 </p> 
	 <ul id="ul_2596573B7EED41C096285CD66E973BFC"> 
		<li id="li_303817519BC142C1A030C774D67B9FE5"> 
		  <p>Which internal campaigns influenced revenue 
		  </p> 
		</li> 
		<li id="li_D7CC3118161443DEA2762212EF19A905"> 
		  <p>Which banner ads ultimately resulted in a registration 
		  </p> 
		</li> 
		<li id="li_E24911E53D3E4C1BA8625F3A7C167E92"> 
		  <p>The number of times an internal search was used before making an
			 order 
		  </p> 
		</li> 
	 </ul> 
	 <p>If traffic measurement or pathing is desired, using traffic variables is
		recommended. 
	 </p> 
	 <section id="section_7C317BB0287A4B8EB0A1A4ECC40627BF"> 
		<title>Conversion Variables - Descriptions</title> 
		<p>Descriptions of fields used when 
		  <xref
			href="t_conversion_variables_admin.xml#task_051920D9B3E24A00A28F32EEBBB0EF97"
			format="dita" scope="local">editing conversion variables</xref>. 
		</p> 
		<table id="table_E48D50926E6B492183300CA58A886927"> 
		  <tgroup cols="2"> 
			 <colspec colnum="1" colname="col1" colwidth="1.00*"/> 
			 <colspec colnum="2" colname="col2" colwidth="2.36*"/> 
			 <thead> 
				<row> 
				  <entry colname="col1"> 
					 <p>Element 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Description 
					 </p> 
				  </entry> 
				</row> 
			 </thead> 
			 <tbody> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<uicontrol> Name 
						</uicontrol> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>The friendly name of the conversion variable. This name is
						how the eVar is referred to in general reporting, and will be the name of the
						report in the left-hand menu. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<uicontrol>Type</uicontrol> 
					 </p> 
					 <p>(eVar only) 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>The type of variable value: 
					 </p> 
					 <p> 
						<uicontrol>Text String:</uicontrol> Captures text values used
						on your site. 
					 </p> 
					 <p>This is the most common type of eVar, and the default
						setting. It acts similar to other variables, where the value within it is a
						static text string. If you are tracking things such as internal campaigns or
						internal search keywords, this is the recommended setting. 
					 </p> 
					 <p> 
						<uicontrol>Counter:</uicontrol> Counts the number of times an
						action occurs before the success event. 
					 </p> 
					 <p>For example, if you use an eVar to track internal searches
						on your site, set this value to 
						<uicontrol>Text String</uicontrol> to track the use of search
						terms. Set this value to 
						<uicontrol>Counter</uicontrol> to count the number of
						searches made, regardless of search terms used. For example, you can use a
						counter eVar to track the number of times someone used your internal search
						before making a purchase. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<uicontrol> Allocation 
						</uicontrol> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Determines how Analytics assigns credit for a success event
						if a variable receives multiple values before the event. Supported values
						include: 
					 </p> 
					 <p> 
						<uicontrol>Most Recent:</uicontrol> The last eVar value
						always receives credit for success events until that eVar expires. 
					 </p> 
					 <p> 
						<uicontrol>Original Value:</uicontrol> The first eVar always
						receives credit for success events until that eVar expires. 
					 </p> 
					 <p> 
						<uicontrol>Linear:</uicontrol> Allocates success events
						equally across all eVar values. Since Linear allocation accurately distributes
						values only within a visit, use Linear allocation with an eVar expiration of
						Visit. 
					 </p> 
					 <note>Switching allocation to or from Linear prevents
						historical data from displaying. Mixing allocation types in the reporting
						interface can lead to misstated data in reports. For example, Linear allocation
						might divide revenue across a number of different eVar values. After changing
						back to Most Recent allocation, 100% of that revenue would be associated with
						the most recent single value. This association can lead to incorrect
						conclusions by users. 
					 </note> 
					 <p>To avoid the likelihood of confusion in reporting, Analytics
						makes the historical data unavailable to the interface. It can be viewed if you
						decide to change the given eVar back to the initial allocation setting,
						although you should not change eVar allocation settings simply to access the
						historical data. Adobe recommends using a new eVar when new allocation settings
						are desired for data already being recorded, rather than changing allocation
						settings on an eVar that already has a significant amount of historical data
						built up. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<uicontrol>Expire After</uicontrol> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Specifies a time period, or event, after which the eVar
						value expires (no longer receives credit for success events). If a success
						event occurs after eVar expiration, the None value receives credit for the
						event (no eVar was active). 
					 </p> 
					 <p>If you select an event as an expiration value, the variable
						expires only if the event occurs. If the event does not occur, the variable
						never expires. 
					 </p> 
					 <p>The available expiration options can be classified under
						four main categories: 
					 </p> 
					 <ul id="ul_810A37C9B6624F429F2FB45C18F7B43F"> 
						<li id="li_654D9D9044EC4E61AA7ABA372DBF8A93">At a page view
						  or visit level. Conversion events beyond the page view or visit do not
						  associate with the eVar. 
						</li> 
						<li id="li_689FBC8B4DAC41B3B0166E6586DD1990">Based on a time
						  period, such as day, week, month, or year. Conversion events beyond the
						  specified time period do not associate with the eVar. The expiration period
						  starts when the variable is set. 
						</li> 
						<li id="li_C132C5C5A5344B91BDF5EB6A1C717C37">Specific
						  conversion events. Any other conversion events that fire after the specific
						  event designated associate with the eVar. 
						</li> 
						<li id="li_5A782D743FB940649E6CB3E4BEA9B8B6">Never. As long
						  as the 
						  <varname>visitorID</varname> cookie is intact, any amount
						  of time can pass between eVar and event. 
						</li> 
					 </ul> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<uicontrol>Status</uicontrol> 
					 </p> 
					 <p>(eVar only) 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Defines the eVar status: 
					 </p> 
					 <p> 
						<uicontrol>Disabled:</uicontrol> Disables the eVar. Removes
						the eVar from the conversion variable list. 
					 </p> 
					 <p> 
						<uicontrol>No Subrelations:</uicontrol> Prevents you from
						breaking down the eVar with a subrelation. 
					 </p> 
					 <p> 
						<uicontrol>Basic Subrelations: 
						</uicontrol>Lets you break down an eVar by any report with
						full subrelations (for example, Products or Campaign). 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<uicontrol> Reset</uicontrol> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Resets any existing value in the eVar. 
					 </p> 
					 <p>Use this setting when repurposing an eVar so you do mix an
						old value into a new report. Resetting does not erase historical data. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<uicontrol>Merchandising</uicontrol> 
					 </p> 
					 <p>(eVar only) 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Merchandising variables can follow one of two syntaxes: 
					 </p> 
					 <p> 
						<uicontrol>Products Syntax:</uicontrol> Associates the eVar
						value to a product. 
					 </p> 
					 <p> 
						<uicontrol>Conversion Variable Syntax:</uicontrol> Associates
						the eVar with a product only if a Binding Event occurs. In this case, you
						select the events that act as Binding Events. 
					 </p> 
					 <p>Changing this setting without updating your JavaScript code
						accordingly causes lost data. See 
						<xref
						 href="http://marketing.adobe.com/resources/help/en_US/sc/implement/?f=var_merchandising"
						 format="http" scope="external">Merchandising Variables</xref>. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<uicontrol>Merchandising Binding Event</uicontrol> 
					 </p> 
					 <p>(eVar only) 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>If Merchandising is set to 
						<uicontrol>Conversion Variable Syntax</uicontrol>, the
						selected events bind the current eVar value with a product. 
					 </p> 
					 <p>To use a Binding Event, set 
						<uicontrol>Allocation to Most Recent</uicontrol>. If 
						<uicontrol>Allocation is Original Value</uicontrol>, the
						first eVar product binding remains until the eVar expires. 
					 </p> 
				  </entry> 
				</row> 
			 </tbody> 
		  </tgroup> 
		</table> 
	 </section> 
  </conbody> 
</concept>
