<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd"[]>
<concept id="concept_062FE49B25A64AA49F3918340E4A587D" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic concept/concept ">
  <title class="- topic/title ">About Dynamic Mboxes</title>
  <shortdesc class="- topic/shortdesc ">Many Rich Internet Applications (RIAs)
	 manipulate HTML after the page has already loaded by using technologies like
	 DHTML and AJAX. 
  </shortdesc>
  <prolog>
    <metadata>
      <othermeta name="solution" content="Target" />
      <othermeta name="topic" content="Advanced" />
    </metadata>
  </prolog>
  <conbody class="- topic/body  concept/conbody ">
    <p class="- topic/p ">For example, after clicking a button, your Web page
		may display a new section of content. This scenario is supported, allowing you
		to define dynamic mboxes through its 
		<codeph class="+ topic/ph pr-d/codeph ">mboxDefine()</codeph> and 
		<codeph class="+ topic/ph pr-d/codeph ">mboxUpdate()</codeph> functions. 
	 </p>
    <p class="- topic/p ">For example, if you want to serve content when an
		HTML node called "dynamicElement" appears on the page: 
	 </p>
    <p class="- topic/p ">
      <codeblock outputclass="syntax html">&lt;div id="dynamicElement"&gt;&lt;/div&gt;</codeblock>
    </p>
    <p class="- topic/p ">then you could trigger the following script on a
		JavaScript event: 
	 </p>
    <p class="- topic/p ">
      <codeblock outputclass="syntax html">&lt;script type="text/javascript"&gt;

    mboxDefine("dynamicElement", "mbox_dynamic", "parameter1=value1");

    mboxUpdate("mbox_dynamic", "parameter1=value1");

&lt;/script&gt;</codeblock>
    </p>
    <p class="- topic/p ">Of note: 
	 </p>
    <ul id="ul_C3002C6352F440509AE4029A608EE5F5" class="- topic/ul ">
      <li id="li_B7097D9DF50D46EFAE9DBAA4653B4B38" class="- topic/li ">
        <codeph class="+ topic/ph pr-d/codeph ">mboxDefine()</codeph> defines
		  an HTML element as a container for content to be served. It takes in the unique
		  element id, the mbox name, and any number of parameters. The parameters can be
		  used for targeting by the active campaign, even if not passed in again with a
		  later 
		  <codeph class="+ topic/ph pr-d/codeph ">mboxUpdate()</codeph> call. 
		  <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">mboxDefine()</codeph> does not actually serve
			 content so it should be followed with 
			 <codeph class="+ topic/ph pr-d/codeph ">mboxUpdate()</codeph>. 
		  </p></li>
      <li id="li_56D7531E916F45D98E4C55FD6A7F7B55" class="- topic/li ">
        <codeph class="+ topic/ph pr-d/codeph ">mboxUpdate()</codeph> retrieves
		  the content. This function may be called multiple times if you want to further
		  change the content. 
		  <p class="- topic/p ">Like 
			 <codeph class="+ topic/ph pr-d/codeph ">mboxCreate</codeph>, it takes
			 in the mbox name and any number of parameters. 
		  </p></li>
      <li id="li_D4DA47B2F496408DB06BB95B8445A391" class="- topic/li "> The
		  usual 
		  <codeph class="+ topic/ph pr-d/codeph ">mboxCreate()</codeph> function
		  only works for HTML elements that exist on the page on the initial load. 
		</li>
      <li id="li_852A6531E9304FDF90B080E1A00410D9" class="- topic/li ">
        <codeph class="+ topic/ph pr-d/codeph ">mboxUpdate()</codeph> can also
		  be used for mboxes created with 
		  <codeph class="+ topic/ph pr-d/codeph ">mboxCreate()</codeph> rather
		  than 
		  <codeph class="+ topic/ph pr-d/codeph ">mboxDefine()</codeph>. 
		  <p class="- topic/p ">This allows the page to update content
			 dynamically after the initial page load. 
		  </p></li>
    </ul>
    <p class="- topic/p ">When using dynamic mboxes, delivering offers that
		include 
		<codeph class="+ topic/ph pr-d/codeph ">document.write</codeph> cause the
		page where the dynamic mbox is located to appear blank because the 
		<codeph class="+ topic/ph pr-d/codeph ">document.write</codeph> function
		is invoked after the DOM has loaded. Note also that plug-ins using offers
		with<codeph class="+ topic/ph pr-d/codeph "> document.write</codeph> should
		never be used on sites employing dynamic mboxes. 
	 </p>
    <p class="- topic/p ">
      <note class="- topic/note ">You cannot use redirect offers in ajax mboxes
		  (<codeph class="+ topic/ph pr-d/codeph ">mboxUpdate</codeph>). 
		</note>
    </p>
  </conbody>
  <related-links class="- topic/related-links ">
    <link href="c_About_Conversion_Mboxes.xml#concept_890181F7D16A4352A789DB06B048D58A" type="concept" format="dita" scope="local" class="- topic/link ">
      <?xm-replace_text About Conversion Mboxes?>
    </link>
    <link href="c_About_Default_Content.xml#concept_EDDC6DA0DC6942A79393F63F27C29140" type="concept" format="dita" scope="local" class="- topic/link ">
      <?xm-replace_text About Default Content?>
    </link>
  </related-links>
</concept>