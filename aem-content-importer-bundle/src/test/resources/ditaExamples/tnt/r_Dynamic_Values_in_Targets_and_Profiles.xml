<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="reference_B76E671630804857971A57ECB16B6BB9"> 
  <title>Dynamic Values in Targets and Profiles</title> 
  <shortdesc>Dynamic values can be referenced in expression targets and profile
	 scripts. 
  </shortdesc> 
  <prolog> 
	 <metadata> 
		<othermeta name="solution" content="Target"/> 
		<othermeta name="topic" content="Advanced"/> </metadata>
  </prolog> 
  <refbody> 
	 <refsyn id="refsyn_03426AE3019E4B4E8D7C6AFD02EE0B13"> 
		<p> 
		  <b>The Landing, Referrer, and Page Objects</b> 
		</p> 
		<p> 
		  <codeph>landing</codeph>, 
		  <codeph>referrer</codeph>, and 
		  <codeph>page</codeph> are objects that can be referenced with several
		  methods. This data is automatically captured and updated per mbox request. 
		</p> 
		<p> 
		  <codeph> 
			 <b> page</b> 
		  </codeph> 
		  <b>:</b> The current page the user is on 
		</p> 
		<p> 
		  <codeph> 
			 <b> referrer</b> 
		  </codeph> 
		  <b>:</b> The previous page as defined by the referring URL in the
		  browser, 
		</p> 
		<p> 
		  <codeph> 
			 <b>landing</b> 
		  </codeph> 
		  <b>: 
		  </b>The first page the user visited in this session that contained an
		  mbox.js file reference 
		</p> 
		<p>The following table lists the methods that can be used with 
		  <codeph>page</codeph>, 
		  <codeph>referrer</codeph>, and<codeph> landing</codeph>. 
		</p> 
		<p> 
		<table id="table_04AAB8E5EA7C4865BC1E69944E4E3246"> 
		  <tgroup cols="2"> 
			 <colspec colnum="1" colname="col1" colwidth="*"/> 
			 <colspec colnum="2" colname="col2" colwidth="*"/> 
			 <thead> 
				<row> 
				  <entry colname="col1">Method 
				  </entry> 
				  <entry colname="col2">Description 
				  </entry> 
				</row> 
			 </thead> 
			 <tbody> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph> -referrer</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Stores the URL of the referring page to either the landing
						page or current page. (Does not apply to the referrer object.) 
					 </p>
					 <p><codeph> Landing.referrer</codeph> is the most recent page
						seen before the visitor reached the current site. The 
						<codeph>landing.referrer</codeph> updates if the visitor
						changes subdomains. To store the original 
						<codeph>landing.referrer</codeph> even if the visitor
						switches subdomains, you could write a profile script to only store one
						landing.referrer per session.
					 </p>
					 <p>For example, you could use a script like the following:
					 </p>
					 <p>
						<codeblock>if user.isNewSession{
return landing.referrer;
}
</codeblock>
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>-url</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>The full URL of<codeph>
						  landing</codeph>/<codeph>referrer</codeph>/<codeph>page</codeph> object
						including the protocol (http or https). 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>-domain</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>The domain portion of the URL of the 
						<codeph>landing</codeph>/<codeph>referrer</codeph>/<codeph>page</codeph>
						object. For example, "<codeph>www.acme.com</codeph>" in 
						<codeph>http://www.acme.com/​categories/​men_jeans​?color=blue​&amp;size=small</codeph>
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>-protocol</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>The protocol used for the page (http, https). 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>-param('parameter_name')</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>The value of the parameter indicated by 
						<codeph>'parameter_name'</codeph>. If your current URL is
						Google’s search page and you had inputted 
						<codeph>page.param('hl')</codeph>, you would get
						“<codeph>en</codeph>” for the URL 
						<codeph>http://www.google.com/​search?hl=en​&amp;q=what+is+asdf​&amp;btnG=Google+Search</codeph>
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>-query</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>The query string for the 
						<codeph>landing</codeph>/<codeph>referrer</codeph>/<codeph>page</codeph>.
						For example, the "<codeph>color=blue​&amp;size=small​</codeph>" in<codeph>
						  http://www.acme.com/​categories/​mens_jeans​?color=blue​&amp;size=small</codeph>
					 </p> 
				  </entry> 
				</row> 
			 </tbody> 
		  </tgroup> 
		</table> 
		</p> 
		<p> 
		  <b>Additional Dynamic Values</b> 
		</p> 
		<p> 
		<table id="table_8DD2DAE9F86E4B5C85C911D20325F845"> 
		  <tgroup cols="2"> 
			 <colspec colnum="1" colname="col1" colwidth="*"/> 
			 <colspec colnum="2" colname="col2" colwidth="*"/> 
			 <thead> 
				<row> 
				  <entry colname="col1">Value 
				  </entry> 
				  <entry colname="col2">Description 
				  </entry> 
				</row> 
			 </thead> 
			 <tbody> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>mbox.name</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> The name of the mbox in the current request. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>mbox.param('parameter_name')</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> The value of the mbox parameter named 
						<codeph>'parameter_name' 
						</codeph>in the current mbox request. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>user.getLocal('variable_name')</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Profile scripts only. Retrieves the value of the specified
						local variable that was previously set using 
						<codeph>user.setLocal</codeph>. For example: 
					 </p> 
					 <p> 
						<codeblock outputclass="syntax html">parameter name: user.numVisits
if(user.sessionId!=user.getLocal('lastSessionId')) {
   user.setLocal('lastSessionId', user.sessionId);
   return (user.get('numVisits') || 0) + 1;
} </codeblock> 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>user.setLocal('variable_name', 'value')</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Profile scripts only. Sets a local variable visible only
						within the profile script. This variable can then be accessed on the next
						script run. This is useful for comparing values and incrementing counts. For
						example: 
					 </p> 
					 <p> 
						<codeblock outputclass="syntax html">parameter name: user.numVisits
if(user.sessionId!=user.getLocal('lastSessionId')) {
   user.setLocal('lastSessionId', user.sessionId);
   return (user.get('numVisits') || 0) + 1;
} </codeblock> 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>user.get('param_name')</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Returns the visitor's current value of the script profile
						parameter named 
						<codeph>user.param_name</codeph>. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>profile.get('param_name')</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Returns the vistior's current value of the in-mbox profile
						parameter named 
						<codeph>profile.param_name</codeph>. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>user.categoryAffinity</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Returns the category with the highest affinity score as
						determined by the built-in category affinity algorithm. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>user.categoryAffinities</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Returns the full array of the all of the categories with
						their assigned scores as determined by the built-in category affinity
						algorithm. For a collection of scripts to help you access the
						user.categoryAffinities array, see 
						<xref
						 href="r_usercategoryaffinitiesscripts.xml#reference_22E16FBDA0964954B1E4252E3751FD29"
						 format="dita" scope="local"><?xm-replace_text user.categoryAffinities Scripts?></xref>.
						
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>user.isFirstSession</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Returns 
						<codeph><codeph>'true'</codeph></codeph> if this is the
						visitor's first session (as defined by Test&amp;Target). Returns 
						<codeph>'false'</codeph> if it is a repeat session. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>user.isNewSession</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Returns 
						<codeph><codeph>'true'</codeph></codeph> if this is a new
						session for a visitor (as defined by Test&amp;Target). Returns 
						<codeph>'false'</codeph> if it is not a new session. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>user.browser</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Returns the full user agent string for browser making the
						mbox request. Must be written as a profile script before being used as a token
						in offers. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>profile.browserTime</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Returns the Date object for the visitor's current local
						time. Must be written as a profile script before being used as a token in
						offers. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>profile.geolocation.country</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Returns the visitor's country as defined by their IP
						address. Available to geotargeting clients. The values match the values
						described in the csv files available for geotargeting. Must be written as a
						profile script before being used as a token in offers. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>profile.geolocation.state</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Returns the visitor's state or region/province as defined
						by their IP address. Available to geotargeting clients. The values match the
						values described in the csv files available for geotargeting. Must be written
						as a profile script before being used as a token in offers. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>profile.geolocation.city</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Returns the visitor's city as defined by their IP address.
						Available to geotargeting clients. The values match the values described in the
						csv files available for geotargeting. Must be written as a profile script
						before being used as a token in offers. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>profile.geolocation.zip</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Returns the visitor's zip code or postal code as defined by
						their IP address. Available to geotargeting clients. The values match the
						values described in the csv files available for geotargeting. Must be written
						as a profile script before being used as a token in offers. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>profile.geolocation.dma</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Returns the visitor's DMA as defined by their IP address.
						Available to geotargeting clients. The values match the values described in the
						csv files available for geotargeting. Must be written as a profile script
						before being used as a token in offers. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>campaign.name</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Displays the name of the campaign the current mbox is
						serving content from. 
					 </p> 
					 <p> You can only token replace the campaign name. You cannot
						use this value in the scripting system because when the scripts run before
						campaign and recipe membership is determined. These tokens are valuable in
						offers and expression targets in campaigns. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>campaign.recipe.name</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Displays the name of the experience or recipe the current
						mbox is serving content from. 
					 </p> 
					 <p> You can only token replace the recipe name. You cannot use
						this value in the scripting system because when the scripts run before campaign
						and recipe membership is determined. These tokens are valuable in offers and
						expression targets in campaigns. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>offer.name</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Displays the name of the offer the current mbox is serving
						content from. 
					 </p> 
					 <p> You can only token replace the offer name. You cannot use
						this value in the scripting system because when the scripts run before campaign
						and recipe membership is determined. These tokens are valuable in offers and
						expression targets in campaigns. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>offer.id</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Displays the ID of the offer the current mbox is serving
						content from. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>user.pcId</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p> Displays the PCID value used to map the visitor's cookie to
						the visitor's profile. This value can also be mapped to a 
						<codeph>3rdPartyID</codeph> value to pass in additional
						visitor profile information via the 3rd Party Profile API. 
					 </p> 
				  </entry> 
				</row> 
				<row> 
				  <entry colname="col1"> 
					 <p> 
						<codeph>user.sessionId</codeph> 
					 </p> 
				  </entry> 
				  <entry colname="col2"> 
					 <p>Displays the visitor's session ID. This value changes for
						every new 30 minute session. 
					 </p> 
				  </entry> 
				</row> 
			 </tbody> 
		  </tgroup> 
		</table> 
		</p> 
	 </refsyn> 
  </refbody> 
</reference>
