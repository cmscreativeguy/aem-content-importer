<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd"[]>
<concept id="concept_25C03AD175B84F99AFEA9C1C9B0C555C" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic concept/concept ">
  <title class="- topic/title ">How Data Is Categorized</title>
  <shortdesc class="- topic/shortdesc ">A key to the modeling system is that
	 data is just data. The system does not interpret or try to understand what the
	 variables mean or might imply. 
  </shortdesc>
  <prolog>
    <metadata>
      <othermeta name="solution" content="Target" />
      <othermeta name="topic" content="Advanced" />
    </metadata>
  </prolog>
  <conbody class="- topic/body  concept/conbody ">
    <p class="- topic/p "> Instead, the modeling system associates similar
		values to determine the most important variables and values, even if, to a
		marketer, they do not seem like they would be predictive. Values for each
		variable are split into multiple groups using a series of two-side partitions.
		The values are separated into the high side (where the response probability or
		value is highest) and the low side. This is done for nominal variables
		(strings, etc.) and continuous variables (time, number of pages viewed, etc.).
		Each possible split is tested, and the splits that show the biggest difference
		between response rates are used for that variable. This way, the system can
		group similar values so new visitors' attributes can be bucketed with similar
		visitors, without requiring exact matches between visitors. 
	 </p>
    <p class="- topic/p "> This means that a lot of data can be sent into the
		system without concern for data overload. The modeling system analyzes all of
		the variables it has collected and determines which ones are predictive based
		on visitors' response rates. It can easily ignore noise caused by other
		variables. It organizes the values for the variables into distinctly performing
		groups, so nobody needs to make assumptions on where behavior splits would
		occur. Finally, this entire grouping is validated in the model validation step
		outlined below. This step confirms that the model does not overfit to the
		training data and can accurately predict the behavior of new, unseen traffic. 
	 </p>
  </conbody>
  <related-links class="- topic/related-links ">
    <link href="c_Automatic_Profile_Variables.xml#concept_1A7F1C9139E74DAFB562CBAC2C06E38F" type="concept" format="dita" scope="local" class="- topic/link ">
      <?xm-replace_text Automatic Profile Variables?>
    </link>
    <link href="c_Custom_Profile_Variables.xml#concept_4ED2D9C6D554427A85F57DEC3DBF06B9" type="concept" format="dita" scope="local" class="- topic/link ">
      <?xm-replace_text Custom Profile Variables?>
    </link>
  </related-links>
</concept>