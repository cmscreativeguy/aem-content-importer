<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd"[]>
<concept id="concept_8C07AEAB0A144FECA8B4FEB091AED4D2" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic concept/concept ">
  <title class="- topic/title ">Script Profile Attributes</title>
  <shortdesc class="- topic/shortdesc ">Define a script profile attribute with
	 its associated JavaScript code snippet on the 
	 <wintitle class="+ topic/keyword ui-d/wintitle ">Profile
		Attributes</wintitle> page. 
  </shortdesc>
  <prolog>
    <metadata>
      <othermeta name="solution" content="Target" />
      <othermeta name="topic" content="Advanced" />
    </metadata>
  </prolog>
  <conbody class="- topic/body  concept/conbody ">
    <p class="- topic/p ">Profile scripts run profile attribute "catchers" on
		each mbox request. When an mbox request is received, Test&amp;Target determines
		which campaign should run and displays content that is appropriate to that
		campaign and that experience, tracks the success of the campaign, and runs any
		relevant profile scripts. This enables you to track information about the
		visit, such as the visitor's location, time of day, number of times that
		visitor has been to the site, if they've purchased before and so on. This
		information is then added to the visitor's profile so you can better track that
		visitor's activity on your site. 
	 </p>
    <p class="- topic/p ">
      <ol id="ol_42EB112F931F4A469074A49BE7155785" class="- topic/ol ">
        <li id="li_9E847678E61B4579BEB4D5918DDCC97C" class="- topic/li ">Click 
		  <uicontrol class="+ topic/ph ui-d/uicontrol ">Segments</uicontrol> &gt;
		  
		  <uicontrol class="+ topic/ph ui-d/uicontrol ">Profiles</uicontrol>. 
		</li>
        <li id="li_D17CAAA586DA4741A0027545E6069E66" class="- topic/li ">Click 
		  <uicontrol class="+ topic/ph ui-d/uicontrol ">Create Attribute for
			 Every Mbox</uicontrol> or 
		  <uicontrol class="+ topic/ph ui-d/uicontrol ">Create Profile
			 Attribute</uicontrol>. 
		  <p class="- topic/p ">The 
			 <wintitle class="+ topic/keyword ui-d/wintitle ">Create Profile
				Attribute</wintitle> dialog box opens. 
		  </p></li>
        <li id="li_EF711F0DD9E1424BA7A25073A2C6B8F7" class="- topic/li ">Select 
		  <uicontrol class="+ topic/ph ui-d/uicontrol ">Every Mbox</uicontrol>
		  from the 
		  <uicontrol class="+ topic/ph ui-d/uicontrol ">Type</uicontrol>
		  selector. 
		</li>
        <li id="li_410FEA1C2CD649D894DDA8B343DF7FB7" class="- topic/li ">Type a
		  name for the profile attribute. 
		  <p class="- topic/p ">You can select predefined variables that can be
			 tracked in the script. Select either 
			 <uicontrol class="+ topic/ph ui-d/uicontrol ">Profile</uicontrol> or 
			 <uicontrol class="+ topic/ph ui-d/uicontrol ">Mbox</uicontrol> to
			 determine which variables you can select, then select a variable to add to your
			 script. 
		  </p></li>
        <li id="li_BC14BB3A7684453DB4D36B9CD50B46A8" class="- topic/li ">Type
		  your JavaScript script and a description of what the script is intended to do,
		  then save the attribute. 
		  <p class="- topic/p ">The attribute is added to the 
			 <wintitle class="+ topic/keyword ui-d/wintitle ">Customizable
				Attributes</wintitle> list. 
		  </p></li>
        <li id="li_4064F3BDF00E4FB78C02815FD19B0905" class="- topic/li ">Turn the
		  attribute 
		  <uicontrol class="+ topic/ph ui-d/uicontrol ">On</uicontrol> to start
		  collect data. 
		</li>
      </ol>
    </p>
    <p class="- topic/p ">If an attribute is automatically turned off by the
		system, an icon appears for that attribute in the 
		<wintitle class="+ topic/keyword ui-d/wintitle ">Collection
		  Status</wintitle> column. Click on the icon for an explanation of why the
		attribute has been turned off. 
	 </p>
    <p class="- topic/p ">Script profile attributes have the 
		<codeph class="+ topic/ph pr-d/codeph ">user.</codeph> tag inserted
		before the attribute name. For example: 
	 </p>
    <p class="- topic/p ">
      <codeblock outputclass="syntax html">if(mbox.name == 'Track_Interest') {
     if(profile.get('model') == "A5" &amp;&amp; profile.get('subcat') == "KS6") {
          return (user.get('A5KS6')||0)+1;
     }
}</codeblock>
    </p>
    <p class="- topic/p ">
      <ul id="ul_EB29E652133E4E42A5A33D7F5C0043A9" class="- topic/ul ">
        <li id="li_9D2D0737FD4C4457ABA20C8DBD90F707" class="- topic/li "> Refer
		  to script profile attributes (including itself) in the code with 
		  <codeph class="+ topic/ph pr-d/codeph ">user.get('parameterName')</codeph></li>
        <li id="li_1949B00322ED465E9EFC11C06E4B7B3B" class="- topic/li "> Save
		  variables that may be accessed the next time the script is run (on the next
		  mbox request) with 
		  <codeph class="+ topic/ph pr-d/codeph ">user.setLocal('variable_name',
			 'value')</codeph>. 
		  <p class="- topic/p ">Reference the variable with 
			 <codeph class="+ topic/ph pr-d/codeph ">user.getLocal('variable_name')</codeph>. This
			 is useful for situations where you want to reference the date and time of the
			 last request. 
		  </p></li>
        <li id="li_CCD19B47C57F4900AC6D6FA9FD32BC68" class="- topic/li ">
		  Parameters and values are case sensitive. 
		  <p class="- topic/p ">Match the case of the parameters and values you
			 will receive during the campaign or test. 
		  </p></li>
        <li id="li_B2EF7B5FE69F43109ADC59E676304A06" class="- topic/li ">
		  Reference the 
		  <xref href="http://marketing.adobe.com/resources/help/en_US/tnt/pdf/js_expression_cheat_sheet.pdf" scope="external" format="html" class="- topic/xref ">JavaScript Expressions for
			 Targeters and Profile Scripts Cheat Sheet</xref> for more JavaScript syntax. 
		</li>
      </ul>
    </p>
    <p class="- topic/p ">To add another attribute and profile script, click 
		<uicontrol class="+ topic/ph ui-d/uicontrol ">Create Profile
		  Attribute</uicontrol>. 
	 </p>
    <p class="- topic/p ">To add a session-expiry attribute and profile script,
		click 
		<uicontrol class="+ topic/ph ui-d/uicontrol ">Create Session Expiry
		  Attribute</uicontrol>. Session-Expiry profile scripts help you update your site
		visitor's profile at the end of a session, without the visitor needing to see
		another mbox. 
	 </p>
    <p class="- topic/p ">
      <b class="+ topic/ph hi-d/b ">Best Practices</b>
    </p>
    <p class="- topic/p ">The following guidelines are meant to help write
		simplified profile scripts that are as error-failing-free as possible by
		writing code that fails gracefully so the scripts are processed without forcing
		a system-script-halt. These guidelines are a result of best practices that have
		been proven to run efficiently. These guidelines are to be applied alongside
		principles and recommendations drawn by the Rhino development community. 
	 </p>
    <p class="- topic/p ">
      <ol id="ol_8E68DDC254D84CA59361B37F15E776A0" class="- topic/ol ">
        <li id="li_F93EED52ED6C49958ADB0E9FA8451CC9" class="- topic/li "> Set
		  current script value to a local variable in the user script, set a failover to
		  blank string. 
		</li>
        <li id="li_845FB9BE500E4516BC7B905B4ABFAA94" class="- topic/li ">
		  Validate the local variable by ensuring it is not a blank string. 
		</li>
        <li id="li_1D774832F75A4144976FA0804591E450" class="- topic/li "> Use
		  string based manipulation functions vs. Regular Expressions. 
		</li>
        <li id="li_BD632D69404B49CEBBEA3275E7A970D2" class="- topic/li "> Use
		  limited for loops vs. open ended for or while loops. 
		</li>
        <li id="li_FDD91F494C3D43B09514F985B8BE925A" class="- topic/li "> Do not
		  exceed 1300 characters or 50 loop iterations. 
		</li>
        <li id="li_D05DD530A0BC42BBA2889A3AC757E96E" class="- topic/li "> Be
		  mindful of not only the script performance, but the combined performance of all
		  scripts as it must be under 5000 executions in total. 
		</li>
        <li id="li_91E7CB509EDF44DE89FAFA46FB31BBAD" class="- topic/li "> If all
		  fails, wrap script in a try/catch. 
		</li>
        <li id="li_4BEBD46AA73D4BD3A0296FAEA4EF5089" class="- topic/li "> JS
		  Rhino engine documentation here: 
		  <xref href="http://www.mozilla.org/rhino/doc.html" class="- topic/xref " scope="external" format="http">http://www.mozilla.org/rhino/doc.html</xref>. 
		</li>
      </ol>
    </p>
  </conbody>
  <related-links class="- topic/related-links ">
    <link href="c_Using_In-Mbox_Profile_Parameters.xml#concept_D8394323B5EC4E40BADFA03585A1307F" type="concept" format="dita" scope="local" class="- topic/link ">
      <?xm-replace_text In-Mbox Profile Attributes?>
    </link>
    <link href="c_Using_Smart_Targeter_Profile_Parameters.xml#concept_C62023564BA94591A7109662E20CEC5D" type="concept" format="dita" scope="local" class="- topic/link ">
      <?xm-replace_text Smart Targeter Profile Attributes?>
    </link>
    <link href="c_Profile_Exports.xml#concept_85A8548182E94590BE36FE56B4C019F7" type="concept" format="dita" scope="local" class="- topic/link ">
      <?xm-replace_text Profile Exports?>
    </link>
  </related-links>
</concept>